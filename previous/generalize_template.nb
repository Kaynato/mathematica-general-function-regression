(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    422823,       7943]
NotebookOptionsPosition[    421291,       7891]
NotebookOutlinePosition[    421663,       7907]
CellTagsIndexPosition[    421620,       7904]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"**", 
   RowBox[{
   "*", "\[IndentingNewLine]", "TEMPLATE", " ", "FOR", " ", "ITERATIVE", " ", 
    "OPTIMIZATION", " ", "ALGORITHMS", "\[IndentingNewLine]", "Zicheng", " ", 
    "Gao"}]}], "\[IndentingNewLine]", " ", "****)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "Settings"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InitIterationSettings", "[", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Controls", " ", "-", " ", 
        RowBox[{
        "zero", " ", "fps", " ", "means", " ", "that", " ", "there", " ", 
         "is", " ", "NO", " ", "DELAY"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"doPrint", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPoint", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doGraph", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doWarn", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doSpace", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEPlot", "=", "False"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"showMistakes", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fps", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Init", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dir", "=", 
        RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"err", "=", 
        RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"*", " ", "Adaptivity"}], " ", "**)"}], "\[IndentingNewLine]", 
       RowBox[{"errorRatio", "=", "1.0"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "In", " ", "what", " ", "ratio", " ", "of", " ", "current", " ", 
         "error", " ", "to", " ", "previous", " ", "error", " ", "should", 
         " ", "it", " ", "be", " ", "considered", " ", "increasing"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"boostRatio", "=", "1.1"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Impatience", "'"}], " ", "Multiplier", " ", "to", " ", 
         "increase", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "not", " ", "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"refineRatio", "=", "0.95"}], ";", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Caution", "'"}], " ", "Multiplier", " ", "to", " ", 
         "decrease", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxRefines", "=", "1000"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Give", " ", "up", " ", "refining", " ", "if", " ", "refined", " ", 
         "too", " ", "many", " ", "times", " ", "in", " ", "a", " ", "row"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Acceleration", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AccelBoost", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelRefine", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelAmt", "=", "0.01"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Tracker", " ", "values"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"historyAmt", "=", "300"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Display", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dispGradientRange", "=", "1."}], ";"}], "\[IndentingNewLine]",
       ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.683453669707604*^9, 3.6834536754316063`*^9}, {
  3.683475391860078*^9, 3.683475415478833*^9}, {3.6834763677667036`*^9, 
  3.68347638801742*^9}, {3.6834766625609846`*^9, 3.683476678659403*^9}, {
  3.6834819022317977`*^9, 3.683481908458951*^9}, {3.6834828069823236`*^9, 
  3.6834828150106783`*^9}, {3.683506294653036*^9, 3.6835062964742503`*^9}, {
  3.683541039822339*^9, 3.6835410400745077`*^9}, {3.6835413793833466`*^9, 
  3.683541380017769*^9}, {3.6835430788782673`*^9, 3.683543078980337*^9}, {
  3.6835443377746286`*^9, 3.6835443442829695`*^9}, {3.6835448579666367`*^9, 
  3.683544858642089*^9}, {3.683551184152491*^9, 3.6835511849680333`*^9}, {
  3.683554222110929*^9, 3.6835542236829777`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{
     "q_", ",", "samplingRate_", ",", "paramVariance_", ",", 
      "manualTrueParams_", ",", "noiseFactor_", ",", " ", 
      "noiseDistribution_", ",", "forceData_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"eFunc", ",", "gFunc", ",", "params"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParamVariance", "=", "paramVariance"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "we", " ", "are", " ", "forcing", " ", "data"}], 
        ",", " ", 
        RowBox[{"use", " ", "data"}], ",", " ", 
        RowBox[{"otherwise", " ", "generate", " ", "data"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "forceData", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Data", "=", "forceData"}], ";", "\[IndentingNewLine]", 
         RowBox[{"dataLength", "=", 
          RowBox[{"Length", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Range", "[", "dataLength", "]"}], "]"}], "/", 
           RowBox[{"N", "[", "samplingRate", "]"}]}]}], ";"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Else", " ", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Range", "[", "dataLength", "]"}], "]"}], "/", 
           RowBox[{"N", "[", "samplingRate", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"TrueParams", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "manualTrueParams", "]"}], ">", "0"}], 
            ",", "manualTrueParams", ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "paramVariance"}], ",", "paramVariance"}], "}"}],
               ",", "varamt"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Data", " ", "Generation"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NoiselessData", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Fitfunction", "@@", " ", "#"}], "&"}], ")"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{"TrueParams", ",", " ", "#"}], "]"}], "&"}], " ", "/@",
               "SamplingSet"}], ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AddNoise", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "+", 
             RowBox[{"noiseFactor", "*", 
              RowBox[{"RandomVariate", "[", "noiseDistribution", "]"}]}]}], 
            ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Data", "=", 
          RowBox[{"AddNoise", "/@", "NoiselessData"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Prep", " ", "gradient"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Unique", "[", "\"\<p\>\"", "]"}], ",", 
         RowBox[{"{", "varamt", "}"}]}], "]"}]}], ";", 
      RowBox[{"paramh", "=", 
       RowBox[{"Hold", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Objective", " ", "and", " ", "Gradient", " ", "functions"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"{", "vars", "}"}], ",", "#"}], "]"}]}], ")"}], 
                   "&"}], "/@", "SamplingSet"}], ")"}], "-", "Data"}], ")"}], 
              "2"], "]"}], "]"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"eFunc", "@@", "params"}], ",", "params"}], "]"}]}]}], 
          "]"}]}]}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Global"}], " ", "Iteration", " ", 
    RowBox[{"Reset", " ", "/", " ", "Initialize"}]}], " ", 
   "***)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitIterationData", "[", 
    RowBox[{"factorx_", ",", "manualParams_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totalIter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TotalRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"*", " ", "Modification", " ", "Values"}], " ", "**)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"factor", "=", "factorx"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dirs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "varamt"}], "]"}], ",", "Smoothness"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"dirX", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prevErr", "=", 
      RowBox[{"-", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "History", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"iterParams", "=", 
      RowBox[{"initParams", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "manualParams", "]"}], ">", "0"}], ",", 
         "manualParams", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ParamVariance"}], ",", "ParamVariance"}], "}"}], 
           ",", "varamt"}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugParams", "=", 
      RowBox[{"{", "iterParams", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dir", "=", 
      RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugErr", "=", 
      RowBox[{"{", "err", "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinePlot", "[", 
    RowBox[{"points_", ",", " ", "size_", ",", "amount_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"amount", ">", "0"}], "&&", 
           RowBox[{"size", ">", "amount"}]}], ",", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "amount"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "@", 
      RowBox[{"Line", "@", "points"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReportIteration", "[", "i_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], " ", "&&", " ", 
      "doPrint"}], ",", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<next dir:\>\"", ",", "dir", ",", "\"\<\\nerr:\>\"", ",", "err", 
        ",", "\"\<\\nparams:\>\"", ",", "iterParams", ",", 
        "\"\<\\niteration:\>\"", ",", "i"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Visualize", "[", "]"}], ":=", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Data vs Function\>\"", ",", "\"\<Parameter Space\>\"", ",", 
           "\"\<Error over iterations\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Fitfunction", "@@", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                 "SamplingSet"}], ",", "Data"}], "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotLegends", "->", "None"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{"doPoint", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"varamt", "\[Equal]", "3"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{"doGraph", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"displayGradient", "[", 
                    RowBox[{"1", ",", "2"}], "]"}], ",", 
                   RowBox[{"displayGradient", "[", 
                    RowBox[{"2", ",", "3"}], "]"}], ",", 
                   RowBox[{"displayGradient", "[", 
                    RowBox[{"3", ",", "1"}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"LinePlot", "[", 
                  RowBox[{
                  "debugParams", ",", "totalIter", ",", "historyAmt"}], 
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
               "\"\<Non-3 dimensions\>\""}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<Disabled\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"doEPlot", ",", 
             RowBox[{"ListLogPlot", "[", 
              RowBox[{"debugErr", ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
             "\"\<Disabled\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Parameters, nGrad, dir, Delta\>\"", ",", 
           "\"\<Iterations, factor, corrections\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{"iterParams", ",", 
              RowBox[{"-", "dir"}], ",", 
              RowBox[{
               RowBox[{"-", "factor"}], "*", "dir"}], ",", 
              RowBox[{
               RowBox[{"-", "factor"}], "*", 
               RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"totalIter", ",", "factor", ",", "TotalRefines"}], 
               "}"}], ",", 
              RowBox[{"ProgressIndicator", "[", 
               FractionBox["ConsecRefines", "maxRefines"], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"Total", "[", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                     "SamplingSet"}], ")"}], "-", "Data"}], ")"}], "2"], 
                 "]"}], 
                RowBox[{"dataLength", "-", "varamt"}]], ")"}], "0.5"], ",", 
             "prevErr"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}], ",", 
       RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayGradient", "[", 
     RowBox[{"xV_", ",", "yV_"}], "]"}], ":=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"eFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "->", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "xV", "]"}], "]"}], ",", 
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], ",", 
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "xV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "yV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"xV_", ",", "yV_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"gFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
          RowBox[{"z", "\[LessEqual]", "\[Epsilon]"}]}], "]"}]}], ",", " ", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], ",", 
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "xV", "]"}], "]"}], ",", 
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefineFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["refineRatio", "AccelRefine"]}], ";", 
     RowBox[{"ConsecRefines", "++"}], ";", 
     RowBox[{"TotalRefines", "++"}], ";", 
     RowBox[{"AccelRefine", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelBoost", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BoostFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["boostRatio", "AccelBoost"]}], ";", 
     RowBox[{"prevErr", "=", "err"}], ";", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", 
     RowBox[{"AccelBoost", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelRefine", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddToHistory", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"debugParams", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugParams", ",", "iterParams"}], "]"}]}], ";", 
     RowBox[{"debugErr", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugErr", ",", "err"}], "]"}]}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToSpacedString", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"str", ",", 
     RowBox[{"StringDrop", "[", 
      RowBox[{
       RowBox[{"StringJoin", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< \>\""}], ")"}], 
           "&"}], "/@", "str"}], ")"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6815621708931227`*^9, 3.681562330352498*^9}, 
   3.681562497040437*^9, {3.6815628024075775`*^9, 3.681562861147148*^9}, {
   3.681563505498472*^9, 3.6815635060864873`*^9}, {3.681564204873289*^9, 
   3.681564205665312*^9}, {3.681564238331339*^9, 3.681564377763912*^9}, {
   3.6815644138774757`*^9, 3.6815644292445745`*^9}, {3.6815644878469906`*^9, 
   3.681564588196496*^9}, {3.6815646717885714`*^9, 3.6815646780740185`*^9}, {
   3.681564713541422*^9, 3.681564713797474*^9}, {3.6815678952129745`*^9, 
   3.681567901730054*^9}, {3.6815679945018387`*^9, 3.6815680009509993`*^9}, {
   3.681568046370693*^9, 3.681568069228405*^9}, {3.6815681126606717`*^9, 
   3.681568302189334*^9}, {3.681568406977435*^9, 3.681568559202245*^9}, {
   3.681568624287523*^9, 3.681568687110731*^9}, {3.6815687298876343`*^9, 
   3.6815687304258556`*^9}, {3.6815687637696657`*^9, 
   3.6815689406475735`*^9}, {3.681569085676959*^9, 3.681569112045782*^9}, {
   3.6815691668767204`*^9, 3.6815691719411526`*^9}, {3.6815694358957815`*^9, 
   3.6815694710235147`*^9}, {3.6815695217459598`*^9, 
   3.6815696667020826`*^9}, {3.6815697393237906`*^9, 3.681569799451787*^9}, {
   3.681569841287245*^9, 3.681569850879549*^9}, {3.681570039047075*^9, 
   3.681570088500207*^9}, {3.6815711382830825`*^9, 3.6815711500490465`*^9}, {
   3.6815713958243575`*^9, 3.6815713987967715`*^9}, {3.681571651690309*^9, 
   3.6815717326270823`*^9}, {3.681571898861825*^9, 3.681571928476057*^9}, {
   3.6815724885189953`*^9, 3.6815725199839554`*^9}, {3.6815726352377763`*^9, 
   3.6815727468631196`*^9}, {3.681572821962291*^9, 3.6815728347201214`*^9}, {
   3.68157295825967*^9, 3.681573001583455*^9}, {3.681573127364339*^9, 
   3.681573136317957*^9}, {3.68157330345288*^9, 3.6815733771014705`*^9}, {
   3.6815734161908703`*^9, 3.6815734168791714`*^9}, 3.6815735440325766`*^9, {
   3.68157358016744*^9, 3.68157358217618*^9}, {3.6815736253621693`*^9, 
   3.6815736295029173`*^9}, {3.6815738429116826`*^9, 
   3.6815738481884356`*^9}, {3.6815738982460203`*^9, 
   3.6815739593413076`*^9}, {3.68158214733538*^9, 3.6815821526995497`*^9}, {
   3.6815823844986544`*^9, 3.6815824054864826`*^9}, {3.6815824431424513`*^9, 
   3.6815826521113873`*^9}, {3.681582727235224*^9, 3.681582879236921*^9}, {
   3.681582932226347*^9, 3.681582992336873*^9}, {3.6815830598288555`*^9, 
   3.6815830617439795`*^9}, {3.681583092533844*^9, 3.6815830959236803`*^9}, {
   3.6815833722720833`*^9, 3.681583493212161*^9}, {3.681583605117122*^9, 
   3.6815836054494004`*^9}, {3.6815840003979025`*^9, 3.68158400184723*^9}, {
   3.6815840403408365`*^9, 3.6815840878485966`*^9}, {3.681584569134416*^9, 
   3.68158457187665*^9}, {3.681584680540204*^9, 3.681584680884739*^9}, {
   3.68158485376423*^9, 3.6815848548258705`*^9}, {3.6815850206636624`*^9, 
   3.681585021053091*^9}, {3.681585083443123*^9, 3.6815850897336245`*^9}, {
   3.6815851822151766`*^9, 3.6815851853968716`*^9}, {3.6815854451033382`*^9, 
   3.6815854479667807`*^9}, {3.681590686564697*^9, 3.6815906958723764`*^9}, {
   3.681590736721639*^9, 3.681590794978259*^9}, {3.681596566755397*^9, 
   3.6815965699455237`*^9}, {3.681603359934925*^9, 3.6816033694795704`*^9}, {
   3.6816035521915236`*^9, 3.681603552737888*^9}, {3.681603699106743*^9, 
   3.6816037052072525`*^9}, {3.681603941321679*^9, 3.6816039418400245`*^9}, {
   3.6816039943817463`*^9, 3.6816039948670697`*^9}, {3.6816040676890893`*^9, 
   3.6816040733506956`*^9}, {3.6816041113588305`*^9, 3.681604125647503*^9}, {
   3.681604159646594*^9, 3.681604230239973*^9}, 3.6816043214220285`*^9, {
   3.681604397409239*^9, 3.6816043993275185`*^9}, {3.6816044366767387`*^9, 
   3.681604443906561*^9}, {3.6816045017122445`*^9, 3.6816045024397297`*^9}, {
   3.6816475221392946`*^9, 3.68164754050082*^9}, 3.681647987229904*^9, {
   3.6816480232892017`*^9, 3.681648208200461*^9}, {3.6816482411758256`*^9, 
   3.6816482815531654`*^9}, {3.681648491473945*^9, 3.6816484959462447`*^9}, {
   3.681648781538802*^9, 3.6816488050024595`*^9}, {3.681649004645697*^9, 
   3.6816490205770655`*^9}, {3.681649122387348*^9, 3.6816491851514544`*^9}, {
   3.681652758744893*^9, 3.6816527610052285`*^9}, {3.6816529879131775`*^9, 
   3.6816530249518147`*^9}, {3.681653312277938*^9, 3.681653462352562*^9}, {
   3.6816535110093822`*^9, 3.6816535368018627`*^9}, {3.681653580859788*^9, 
   3.6816536148198957`*^9}, {3.6816538214525537`*^9, 3.68165385922288*^9}, {
   3.681653979449232*^9, 3.6816539848178177`*^9}, {3.6816544838783803`*^9, 
   3.6816545077942157`*^9}, {3.6816554625155334`*^9, 3.681655463061796*^9}, {
   3.6816569829339094`*^9, 3.6816570470714865`*^9}, {3.681658433926193*^9, 
   3.681658434074292*^9}, {3.6816586282599716`*^9, 3.6816586622370815`*^9}, {
   3.681659804985428*^9, 3.6816598054017067`*^9}, 3.681724521037159*^9, 
   3.6817247737398834`*^9, {3.681725049850954*^9, 3.6817250542918463`*^9}, {
   3.6817257095161085`*^9, 3.681725712780613*^9}, {3.681725994533414*^9, 
   3.681725999538206*^9}, {3.6817265750936427`*^9, 3.681726577329742*^9}, {
   3.681726609100688*^9, 3.681726610747135*^9}, {3.6817344038238297`*^9, 
   3.6817344071070213`*^9}, {3.681737918367159*^9, 3.6817379195629563`*^9}, {
   3.6817392466712227`*^9, 3.681739247062479*^9}, {3.681739635988923*^9, 
   3.6817396402727823`*^9}, {3.681739747079029*^9, 3.6817397781367493`*^9}, {
   3.681739861167135*^9, 3.6817398712318487`*^9}, 3.6817400131845436`*^9, {
   3.681740081319996*^9, 3.6817400986655645`*^9}, {3.6817401731463575`*^9, 
   3.681740173921876*^9}, {3.681741054818036*^9, 3.6817410630014954`*^9}, {
   3.681741396180751*^9, 3.681741398243129*^9}, {3.6817414314682913`*^9, 
   3.681741442898916*^9}, {3.6825142858697195`*^9, 3.682514297896387*^9}, {
   3.6828709618425407`*^9, 3.6828709787118196`*^9}, {3.6828710151744833`*^9, 
   3.6828710177548676`*^9}, {3.682871056451414*^9, 3.6828710727978697`*^9}, 
   3.6828726919252305`*^9, {3.6828727955305076`*^9, 3.6828728555223036`*^9}, {
   3.682873378546649*^9, 3.6828734076373024`*^9}, {3.682873520868531*^9, 
   3.682873559173211*^9}, {3.6828736112941427`*^9, 3.682873752044176*^9}, 
   3.682873790717617*^9, {3.682873910650232*^9, 3.6828739437132616`*^9}, {
   3.6828739933613586`*^9, 3.682873993735608*^9}, {3.682874050554145*^9, 
   3.6828740794894342`*^9}, {3.6828742201533623`*^9, 3.682874265329564*^9}, {
   3.682874298319532*^9, 3.6828745143659678`*^9}, {3.682874570277046*^9, 
   3.682874596047637*^9}, {3.682874636112135*^9, 3.6828746733459735`*^9}, {
   3.6828747254820137`*^9, 3.682874850242854*^9}, {3.6828748812823844`*^9, 
   3.6828749723224497`*^9}, {3.682875009751096*^9, 3.682875121152584*^9}, {
   3.6828751689186645`*^9, 3.682875281614401*^9}, {3.6828753555464134`*^9, 
   3.6828753968699646`*^9}, {3.682876304769292*^9, 3.682876365490773*^9}, {
   3.6828763966515465`*^9, 3.682876430613188*^9}, {3.6828767330169744`*^9, 
   3.6828767574752793`*^9}, {3.682876864445448*^9, 3.682876870552519*^9}, {
   3.682877651198309*^9, 3.682877664183419*^9}, {3.682877798475026*^9, 
   3.682877816052747*^9}, {3.6828781436847534`*^9, 3.682878165585703*^9}, {
   3.6828782135244203`*^9, 3.682878224199538*^9}, {3.6828797475700393`*^9, 
   3.682879998255912*^9}, {3.68288009267686*^9, 3.682880143406395*^9}, {
   3.6828801903913555`*^9, 3.6828802734871845`*^9}, {3.6828803052799473`*^9, 
   3.68288041799209*^9}, {3.6828805392829494`*^9, 3.6828806302816153`*^9}, {
   3.6828808568225594`*^9, 3.682880951656781*^9}, {3.682881043212818*^9, 
   3.6828812745349383`*^9}, {3.6828821517986603`*^9, 3.682882174328681*^9}, {
   3.6828822145555*^9, 3.682882220983786*^9}, {3.6828824057689743`*^9, 
   3.6828824251168723`*^9}, {3.6828824972309494`*^9, 
   3.6828825619140596`*^9}, {3.682882979695325*^9, 3.6828830600888634`*^9}, {
   3.682883195068556*^9, 3.6828832043139057`*^9}, {3.6830396849966636`*^9, 
   3.6830397732688446`*^9}, {3.6830399066630836`*^9, 3.683039913180719*^9}, {
   3.6830399483475113`*^9, 3.683039948975526*^9}, {3.683040242086508*^9, 
   3.6830402424345293`*^9}, {3.683040324076639*^9, 3.683040324392643*^9}, {
   3.683041010420825*^9, 3.6830410349325366`*^9}, 3.6830411257718563`*^9, {
   3.6830417513831806`*^9, 3.6830417517711535`*^9}, {3.6830418588510437`*^9, 
   3.6830418977140875`*^9}, {3.683041942952117*^9, 3.683041985756014*^9}, {
   3.6830485694199595`*^9, 3.683048569545044*^9}, {3.6830486044225082`*^9, 
   3.6830486130522604`*^9}, {3.683049759526929*^9, 3.683049784091267*^9}, 
   3.6830498387137628`*^9, {3.6830499489338756`*^9, 3.6830499829444623`*^9}, {
   3.683050107443301*^9, 3.6830501080437*^9}, {3.6830502134530907`*^9, 
   3.683050237732626*^9}, {3.6830508463538647`*^9, 3.683050848092024*^9}, {
   3.6830512174741836`*^9, 3.683051318327956*^9}, {3.68305141269347*^9, 
   3.6830514189526434`*^9}, {3.6830514490507092`*^9, 
   3.6830514517945375`*^9}, {3.683051513194645*^9, 3.6830515464718294`*^9}, {
   3.6830528447429323`*^9, 3.6830528655883617`*^9}, 3.6830530458067245`*^9, {
   3.6830690703621416`*^9, 3.6830691417092147`*^9}, {3.6830694416214046`*^9, 
   3.6830694434306107`*^9}, {3.6830694833502245`*^9, 3.683069484821205*^9}, {
   3.683070729955146*^9, 3.6830707740605483`*^9}, {3.6830712713652153`*^9, 
   3.6830712716263876`*^9}, {3.6830719460428877`*^9, 3.683071964236906*^9}, {
   3.6830720005991483`*^9, 3.683072014350318*^9}, {3.68307204839301*^9, 
   3.6830720582609043`*^9}, {3.683072135692527*^9, 3.6830721509567013`*^9}, {
   3.6830728276947327`*^9, 3.683072829097669*^9}, {3.6830735964682264`*^9, 
   3.6830735969445453`*^9}, {3.683073691666543*^9, 3.683073692095833*^9}, {
   3.6830737483087044`*^9, 3.6830738016602697`*^9}, {3.6830738397446594`*^9, 
   3.683073884579549*^9}, {3.6830740536964674`*^9, 3.6830740562001324`*^9}, {
   3.683074113623417*^9, 3.683074136141427*^9}, {3.6831137205409174`*^9, 
   3.6831137283381157`*^9}, {3.683114615466959*^9, 3.683114683204441*^9}, {
   3.683282340518567*^9, 3.6832824072357135`*^9}, {3.6832824475178485`*^9, 
   3.6832825729421616`*^9}, {3.6832826105214677`*^9, 3.683282687613647*^9}, 
   3.6832828174469943`*^9, {3.683282888362079*^9, 3.6832828887951603`*^9}, {
   3.683282922716254*^9, 3.683282927889253*^9}, {3.683282959197586*^9, 
   3.6832829787227917`*^9}, {3.683283115450907*^9, 3.6832831376467*^9}, {
   3.6832845350763054`*^9, 3.683284598197768*^9}, {3.6832846488608637`*^9, 
   3.6832846838701496`*^9}, {3.6834531221145186`*^9, 
   3.6834531225835247`*^9}, {3.6834531627014427`*^9, 
   3.6834532309226456`*^9}, {3.683453374690505*^9, 3.6834533843788047`*^9}, {
   3.683453539085793*^9, 3.6834536630132537`*^9}, 3.683453695691606*^9, {
   3.6834738983736906`*^9, 3.6834739148350773`*^9}, {3.6834739684969196`*^9, 
   3.683473969084311*^9}, {3.6834751355005164`*^9, 3.683475142708455*^9}, {
   3.683475301179598*^9, 3.6834753087796564`*^9}, {3.6834759178912888`*^9, 
   3.683476059550787*^9}, {3.6834762186555815`*^9, 3.683476223096542*^9}, {
   3.683476615545763*^9, 3.683476617722215*^9}, {3.683476842666613*^9, 
   3.6834768881495647`*^9}, {3.683477069632125*^9, 3.6834771669518113`*^9}, {
   3.6834772529809628`*^9, 3.6834772563114014`*^9}, {3.6834821858820133`*^9, 
   3.6834822862699795`*^9}, {3.6834823347393136`*^9, 3.683482392754013*^9}, {
   3.683482751210119*^9, 3.683482753181434*^9}, {3.683482786817873*^9, 
   3.683482801103403*^9}, {3.683482869966338*^9, 3.6834828981661496`*^9}, {
   3.683483063285297*^9, 3.6834830994669647`*^9}, {3.6834832963935027`*^9, 
   3.6834833307854443`*^9}, {3.6834890127908435`*^9, 
   3.6834890216122856`*^9}, {3.683493965713439*^9, 3.6834939814519386`*^9}, {
   3.6834944046024194`*^9, 3.6834944049186287`*^9}, {3.6835409768643427`*^9, 
   3.68354103279165*^9}, {3.683542352696763*^9, 3.6835423564522676`*^9}, {
   3.6835425125263824`*^9, 3.6835426272869368`*^9}, {3.683542769061509*^9, 
   3.6835428376312504`*^9}, {3.683542882745347*^9, 3.6835428870232*^9}, {
   3.6835432670537963`*^9, 3.6835432713906884`*^9}, {3.6835443717663035`*^9, 
   3.6835443858376884`*^9}, {3.683544436760659*^9, 3.6835444599851522`*^9}, {
   3.6835449419844527`*^9, 3.6835449764104195`*^9}, {3.683547403125822*^9, 
   3.683547405181193*^9}, {3.683547447009968*^9, 3.6835474772120934`*^9}, {
   3.683547554671893*^9, 3.6835475550151224`*^9}, {3.6835476722649136`*^9, 
   3.683547676145505*^9}, 3.683554020810647*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"SET", " ", "DATA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varamt", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataLength", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fitfunction", "=", 
     RowBox[{
      RowBox[{"#2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"#1", "*", "#3"}], "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"#1", "*", "#4"}], "]"}]}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{"0", ",", "40", ",", "3", ",", 
      RowBox[{"{", "}"}], ",", "1.", ",", 
      RowBox[{"NormalDistribution", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.55515", ",", 
        RowBox[{"-", "0.949957"}], ",", "0.954631", ",", "0.0679626", ",", 
        "0.245159", ",", "1.12318", ",", "0.699812", ",", "1.52914", ",", 
        "2.34221", ",", "3.58785", ",", "3.17743", ",", "2.7699", ",", 
        "4.71294", ",", "6.02167", ",", "3.93996", ",", "4.08095", ",", 
        "6.68862", ",", "6.05735", ",", "6.25545", ",", "6.08665", ",", 
        "7.88001", ",", "7.24107", ",", "6.51588", ",", "7.23453", ",", 
        "7.40073", ",", "9.3045", ",", "6.98213", ",", "7.66584", ",", 
        "9.44697", ",", "8.95585", ",", "10.8473", ",", "11.5192", ",", 
        "9.60572", ",", "9.18079", ",", "8.3529", ",", "9.98033", ",", 
        "10.4711", ",", "10.2755", ",", "9.23861", ",", "8.09191", ",", 
        "7.74405", ",", "6.9308", ",", "4.91696", ",", "2.93346", ",", 
        "3.23637", ",", "2.7633", ",", "2.04864", ",", "0.22554", ",", 
        RowBox[{"-", "1.14621"}], ",", 
        RowBox[{"-", "1.23016"}], ",", 
        RowBox[{"-", "3.53224"}], ",", 
        RowBox[{"-", "3.44941"}], ",", 
        RowBox[{"-", "6.5644"}], ",", 
        RowBox[{"-", "8.14639"}], ",", 
        RowBox[{"-", "10.7625"}], ",", 
        RowBox[{"-", "15.3302"}], ",", 
        RowBox[{"-", "15.708"}], ",", 
        RowBox[{"-", "17.414"}], ",", 
        RowBox[{"-", "22.0694"}], ",", 
        RowBox[{"-", "24.8501"}], ",", 
        RowBox[{"-", "25.778"}], ",", 
        RowBox[{"-", "27.903"}], ",", 
        RowBox[{"-", "33.6655"}], ",", 
        RowBox[{"-", "34.5464"}], ",", 
        RowBox[{"-", "38.3342"}], ",", 
        RowBox[{"-", "40.446"}], ",", 
        RowBox[{"-", "42.3715"}], ",", 
        RowBox[{"-", "48.064"}], ",", 
        RowBox[{"-", "49.6408"}], ",", 
        RowBox[{"-", "52.1107"}], ",", 
        RowBox[{"-", "55.0438"}], ",", 
        RowBox[{"-", "59.1118"}], ",", 
        RowBox[{"-", "59.8071"}], ",", 
        RowBox[{"-", "63.4763"}], ",", 
        RowBox[{"-", "65.65"}], ",", 
        RowBox[{"-", "67.7729"}], ",", 
        RowBox[{"-", "68.3618"}], ",", 
        RowBox[{"-", "70.1269"}], ",", 
        RowBox[{"-", "72.7763"}], ",", 
        RowBox[{"-", "72.818"}], ",", 
        RowBox[{"-", "73.053"}], ",", 
        RowBox[{"-", "71.2798"}], ",", 
        RowBox[{"-", "72.5041"}], ",", 
        RowBox[{"-", "74.4879"}], ",", 
        RowBox[{"-", "71.3788"}], ",", 
        RowBox[{"-", "67.8539"}], ",", 
        RowBox[{"-", "64.7601"}], ",", 
        RowBox[{"-", "63.2424"}], ",", 
        RowBox[{"-", "60.3196"}], ",", 
        RowBox[{"-", "55.7731"}], ",", 
        RowBox[{"-", "48.3561"}], ",", 
        RowBox[{"-", "44.6445"}], ",", 
        RowBox[{"-", "38.065"}], ",", 
        RowBox[{"-", "30.4912"}], ",", 
        RowBox[{"-", "22.268"}], ",", 
        RowBox[{"-", "12.769"}], ",", 
        RowBox[{"-", "2.52354"}], ",", "7.4659", ",", "18.5826", ",", 
        "34.8058"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6835419646529064`*^9, 3.6835419646549087`*^9}, {
  3.6835420064157667`*^9, 3.6835420109077635`*^9}, {3.6835420853294077`*^9, 
  3.6835420860769105`*^9}, {3.6835422873921986`*^9, 3.6835422981143527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"BEGIN", " ", "ITERATION"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smoothness", "=", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SmoothingFunction", "[", "l_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", "/", 
           SuperscriptBox["2.", 
            RowBox[{"First", "[", "#2", "]"}]]}], "&"}], ",", "l"}], "]"}], 
       "]"}], "/", "Smoothness"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationData", "[", 
     RowBox[{"0.01", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.5"}], ",", "1.5", ",", 
        RowBox[{"-", "2."}]}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"recordAtIter", "=", "200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Visualize", "[", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681582981711115*^9, 3.681582986568472*^9}, {
   3.6815830288923187`*^9, 3.681583033177169*^9}, {3.681583138155509*^9, 
   3.6815831669343147`*^9}, {3.681583254303117*^9, 3.681583294651238*^9}, {
   3.681585139202839*^9, 3.681585158314912*^9}, {3.68158530678191*^9, 
   3.6815853073417172`*^9}, {3.6815888689488974`*^9, 
   3.6815889866626554`*^9}, {3.6815890228020644`*^9, 
   3.6815890583435373`*^9}, {3.6815891217298484`*^9, 3.681589163632318*^9}, {
   3.681589334500104*^9, 3.681589348961054*^9}, {3.6815906212941074`*^9, 
   3.681590665665968*^9}, {3.681603534980042*^9, 3.6816035363699694`*^9}, {
   3.681603864337474*^9, 3.6816038682690973`*^9}, {3.681604243555854*^9, 
   3.68160424704218*^9}, {3.681604329314691*^9, 3.681604341492816*^9}, {
   3.6816044092304306`*^9, 3.6816044107254276`*^9}, {3.6816530292944417`*^9, 
   3.6816530304204016`*^9}, {3.6816570986333294`*^9, 3.681657131603295*^9}, {
   3.68165718855943*^9, 3.6816572324965878`*^9}, {3.681657309278144*^9, 
   3.6816573131817484`*^9}, {3.681657666521865*^9, 3.6816577776820254`*^9}, {
   3.68165782483617*^9, 3.681657954385624*^9}, {3.6816580017865467`*^9, 
   3.6816580506108546`*^9}, {3.6816581666434946`*^9, 3.681658170822795*^9}, {
   3.6816583360697403`*^9, 3.681658337337532*^9}, {3.6816584414643555`*^9, 
   3.6816584541160107`*^9}, {3.6816589278869047`*^9, 
   3.6816589285913744`*^9}, {3.681658984624859*^9, 3.68165898677029*^9}, {
   3.681659038013056*^9, 3.6816590423468595`*^9}, {3.6816594819339275`*^9, 
   3.6816594843655505`*^9}, {3.681659775861001*^9, 3.6816597777292466`*^9}, {
   3.681660572644367*^9, 3.6816605736830606`*^9}, {3.681660606220765*^9, 
   3.6816606758342023`*^9}, 3.6816607353358936`*^9, 3.681677017236003*^9, {
   3.681677124887562*^9, 3.681677189483862*^9}, {3.6816772528319063`*^9, 
   3.681677267550214*^9}, {3.6816773596183596`*^9, 3.6816773728282022`*^9}, {
   3.6816774203410945`*^9, 3.6816774217293653`*^9}, {3.681677473480362*^9, 
   3.6816774771330295`*^9}, 3.6816775189761457`*^9, {3.6816776491617465`*^9, 
   3.681677682774685*^9}, {3.6817249874119425`*^9, 3.6817249882761993`*^9}, {
   3.6817250226257377`*^9, 3.6817250289826703`*^9}, {3.6817265600556955`*^9, 
   3.681726572075122*^9}, 3.681726796595335*^9, {3.6817379065662923`*^9, 
   3.681737907543937*^9}, {3.681739349567865*^9, 3.6817393578093576`*^9}, {
   3.6817394401773014`*^9, 3.6817394468687677`*^9}, {3.681739510376131*^9, 
   3.681739615667372*^9}, {3.681739999609486*^9, 3.6817400007982807`*^9}, {
   3.68174012905984*^9, 3.681740136059509*^9}, {3.6817419469943395`*^9, 
   3.681741952057715*^9}, {3.6828737640986223`*^9, 3.6828737647000227`*^9}, {
   3.682875461848855*^9, 3.6828756006176033`*^9}, {3.6828764354113855`*^9, 
   3.682876436543141*^9}, {3.6828766604259844`*^9, 3.6828766842954245`*^9}, {
   3.682876922117593*^9, 3.6828769346159225`*^9}, {3.682876994450532*^9, 
   3.6828770733282995`*^9}, {3.682877151602738*^9, 3.6828772330235786`*^9}, {
   3.6828775403583255`*^9, 3.682877624288368*^9}, {3.682877916713852*^9, 
   3.6828779544028687`*^9}, {3.682878065220443*^9, 3.682878072332185*^9}, {
   3.6828814401165433`*^9, 3.6828814554397593`*^9}, {3.6828815136255503`*^9, 
   3.682881677529819*^9}, {3.68288172255884*^9, 3.6828817726412277`*^9}, {
   3.6828818052829876`*^9, 3.6828818326892595`*^9}, {3.68288187893756*^9, 
   3.6828818980032716`*^9}, {3.6828819290849905`*^9, 3.6828819380419636`*^9}, 
   3.6828820133227377`*^9, {3.6828820484197435`*^9, 3.6828820737426243`*^9}, {
   3.6828821123523645`*^9, 3.6828821185725107`*^9}, {3.682882266229948*^9, 
   3.682882269393059*^9}, {3.6828823006288815`*^9, 3.6828824004974613`*^9}, {
   3.6828824684167385`*^9, 3.6828824766762457`*^9}, {3.682882938299493*^9, 
   3.6828829432121906`*^9}, {3.682884460763468*^9, 3.682884487530546*^9}, {
   3.6828845209094305`*^9, 3.682884563541955*^9}, {3.682884653926296*^9, 
   3.682884655603948*^9}, {3.682884704152156*^9, 3.6828847264733267`*^9}, {
   3.6828856457691994`*^9, 3.682885649599371*^9}, {3.683040573485735*^9, 
   3.683040584339557*^9}, {3.68304064193865*^9, 3.6830406431586776`*^9}, {
   3.6830407026469884`*^9, 3.683040709387744*^9}, {3.683040784112011*^9, 
   3.6830407868282356`*^9}, {3.683041425354068*^9, 3.683041553893486*^9}, {
   3.683049172974044*^9, 3.683049362232627*^9}, {3.68304940084937*^9, 
   3.6830494027616453`*^9}, {3.683049464699045*^9, 3.683049466438177*^9}, {
   3.6830495610864267`*^9, 3.6830495652051725`*^9}, {3.68304961800137*^9, 
   3.683049678092401*^9}, 3.683049711234733*^9, {3.68304980134577*^9, 
   3.6830498081863317`*^9}, {3.6830723669505258`*^9, 3.683072482054262*^9}, {
   3.683072637656907*^9, 3.6830726449707837`*^9}, {3.683076372548118*^9, 
   3.683076376220566*^9}, {3.683076599486354*^9, 3.683076600303899*^9}, {
   3.683113812300089*^9, 3.683113818312097*^9}, {3.6834738943165803`*^9, 
   3.683473922983458*^9}, {3.6834739738785095`*^9, 3.68347397407164*^9}, {
   3.6834751469622936`*^9, 3.6834751658909864`*^9}, {3.68347521491304*^9, 
   3.6834752862256107`*^9}, {3.6834758806565614`*^9, 3.683475890758298*^9}, 
   3.6834760778700066`*^9, {3.683476111184245*^9, 3.6834761186132*^9}, {
   3.6834765158272057`*^9, 3.683476531901271*^9}, {3.683476623835718*^9, 
   3.683476624398637*^9}, {3.683476868357871*^9, 3.6834768749890203`*^9}, {
   3.683476937855316*^9, 3.6834769388860035`*^9}, {3.6834772869824443`*^9, 
   3.683477290570836*^9}, {3.6834773560896063`*^9, 3.683477397585683*^9}, 
   3.683477446109888*^9, {3.683477637042604*^9, 3.683477648454566*^9}, {
   3.6834822237832956`*^9, 3.683482223927392*^9}, {3.6834882586372824`*^9, 
   3.6834882817872534`*^9}, {3.683493991160005*^9, 3.6834939912690783`*^9}, {
   3.6834940877280064`*^9, 3.683494135284731*^9}, {3.6834943253961697`*^9, 
   3.6834943257273903`*^9}, {3.6834946353849983`*^9, 3.683494639560784*^9}, {
   3.6835034954100933`*^9, 3.6835034979037547`*^9}, {3.683504136606228*^9, 
   3.683504150164277*^9}, {3.68350429772871*^9, 3.6835043028281107`*^9}, {
   3.68350482801584*^9, 3.6835048283790836`*^9}, {3.6835051006222696`*^9, 
   3.683505106859684*^9}, {3.683505703191486*^9, 3.683505724435655*^9}, {
   3.6835057573736277`*^9, 3.68350575937296*^9}, {3.683505799282584*^9, 
   3.683505872292286*^9}, {3.683505940406725*^9, 3.6835059810918646`*^9}, {
   3.683506029663267*^9, 3.683506077217988*^9}, {3.6835061267170086`*^9, 
   3.683506182208025*^9}, {3.6835062368584805`*^9, 3.6835062529201937`*^9}, {
   3.683506392477291*^9, 3.6835064012691545`*^9}, {3.683541045516137*^9, 
   3.683541056417409*^9}, {3.68354116520598*^9, 3.6835411813624287`*^9}, {
   3.6835413112196317`*^9, 3.6835413426615314`*^9}, {3.683541909913392*^9, 
   3.683541910463758*^9}, {3.683541999125903*^9, 3.68354203544413*^9}, 
   3.6835421016563*^9, {3.68354214517733*^9, 3.6835421543864737`*^9}, {
   3.6835422486553593`*^9, 3.6835422521697035`*^9}, {3.68354293171101*^9, 
   3.6835429320572405`*^9}, {3.683543007650754*^9, 3.683543027534017*^9}, {
   3.683543089591416*^9, 3.6835430947878814`*^9}, {3.6835433381962557`*^9, 
   3.6835433479447556`*^9}, {3.683543465132931*^9, 3.6835435069508276`*^9}, 
   3.683544000135397*^9, {3.6835451305795994`*^9, 3.683545130864789*^9}, {
   3.683546877145338*^9, 3.6835468970791984`*^9}, {3.683546945962344*^9, 
   3.6835469461744857`*^9}, {3.683547159392496*^9, 3.683547172371584*^9}, {
   3.683547216453932*^9, 3.6835472309961596`*^9}, {3.6835473228847127`*^9, 
   3.6835473301280003`*^9}, {3.683547769463896*^9, 3.6835477704195323`*^9}, {
   3.683547857704653*^9, 3.6835478581529536`*^9}, {3.6835479456953506`*^9, 
   3.683547948110963*^9}, {3.683550777678563*^9, 3.683550778168889*^9}, {
   3.6835508692942724`*^9, 3.683550901647855*^9}, {3.6835509428253236`*^9, 
   3.6835509462195883`*^9}, {3.683550985118536*^9, 3.68355098537871*^9}, {
   3.683551023248973*^9, 3.6835510539455433`*^9}, {3.6835511059132996`*^9, 
   3.6835511061474543`*^9}, {3.6835511441327953`*^9, 
   3.6835511443859615`*^9}, {3.6835511809093275`*^9, 3.683551181139481*^9}, {
   3.683551994573103*^9, 3.6835519946891837`*^9}, {3.6835520789263744`*^9, 
   3.68355207904345*^9}, {3.6835523801102853`*^9, 3.6835523802303696`*^9}, {
   3.683552494263435*^9, 3.683552494404529*^9}, {3.6835526100001445`*^9, 
   3.683552610316354*^9}, {3.683552964670737*^9, 3.683552976244457*^9}, {
   3.683553157334643*^9, 3.683553157458726*^9}, {3.683554077654566*^9, 
   3.683554080220276*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Grid[{{"Data vs Function", "Parameter Space", "Error over iterations"}, {
      ListPlot[{
        Map[Apply[$CellContext`Fitfunction, 
          
          Prepend[$CellContext`iterParams, #]]& , $CellContext`SamplingSet], \
$CellContext`Data}, Joined -> True, ImageSize -> Medium, PlotLegends -> None], 
      If[$CellContext`doPoint, 
       If[$CellContext`varamt == 3, 
        If[$CellContext`doGraph, {
          $CellContext`displayGradient[1, 2], 
          $CellContext`displayGradient[2, 3], 
          $CellContext`displayGradient[3, 1]}, 
         $CellContext`LinePlot[$CellContext`debugParams, \
$CellContext`totalIter, $CellContext`historyAmt]], "Non-3 dimensions"], 
       "Disabled"], 
      If[$CellContext`doEPlot, 
       ListLogPlot[$CellContext`debugErr, ImageSize -> Medium, PlotRange -> 
        All], "Disabled"]}, {
     "Parameters, nGrad, dir, Delta", "Iterations, factor, corrections"}, {
      Column[{$CellContext`iterParams, -$CellContext`dir, \
(-$CellContext`factor) $CellContext`dir, (-$CellContext`factor) \
$CellContext`SmoothingFunction[$CellContext`dirs]}], 
      Column[{{$CellContext`totalIter, $CellContext`factor, \
$CellContext`TotalRefines}, 
        ProgressIndicator[$CellContext`ConsecRefines/$CellContext`maxRefines]}\
], {(Total[(Map[Apply[$CellContext`Fitfunction, 
              
              Prepend[$CellContext`iterParams, #]]& , \
$CellContext`SamplingSet] - $CellContext`Data)^2]/($CellContext`dataLength - \
$CellContext`varamt))^0.5, $CellContext`prevErr}}}, Frame -> All, ItemSize -> 
    30], StandardForm],
  ImageSizeCache->{1163., {180.5, 187.5}}]], "Output",
 CellChangeTimes->{{3.6835061825562563`*^9, 3.683506185931508*^9}, {
   3.683506237363817*^9, 3.683506254914525*^9}, {3.6835063979199233`*^9, 
   3.683506405235801*^9}, 3.6835064684659796`*^9, 3.6835410216412106`*^9, {
   3.683541344041453*^9, 3.6835413594052143`*^9}, 3.683541912012791*^9, {
   3.6835420894421515`*^9, 3.683542107269042*^9}, {3.6835421481052833`*^9, 
   3.6835421550098896`*^9}, 3.6835422526119986`*^9, {3.6835429043587637`*^9, 
   3.683542932958843*^9}, 3.6835430347888575`*^9, 3.6835430957134995`*^9, {
   3.683543152265223*^9, 3.683543156651149*^9}, 3.6835435162996407`*^9, 
   3.6835440006597476`*^9, 3.683544632355136*^9, 3.6835446641343365`*^9, 
   3.683544921893051*^9, 3.6835449521802545`*^9, {3.68354498495512*^9, 
   3.683544999084883*^9}, 3.683545039270691*^9, 3.683545088333418*^9, 
   3.683545131519233*^9, 3.683546898556183*^9, 3.6835469467468677`*^9, {
   3.6835471608071423`*^9, 3.6835471728689175`*^9}, {3.6835472122103634`*^9, 
   3.683547231848734*^9}, {3.6835473315109234`*^9, 3.683547340098276*^9}, 
   3.683547410403145*^9, 3.683547512493978*^9, 3.6835475583340206`*^9, 
   3.6835476799596963`*^9, 3.6835477712781053`*^9, 3.6835478588724327`*^9, 
   3.6835479495589285`*^9, 3.6835506878759975`*^9, 3.683550779183568*^9, {
   3.6835508633332973`*^9, 3.6835509025264406`*^9}, 3.6835509473653517`*^9, 
   3.6835509862452874`*^9, {3.683551025018154*^9, 3.6835510547640905`*^9}, 
   3.6835511087902184`*^9, 3.68355114532659*^9, 3.683551195161834*^9, 
   3.6835512537979493`*^9, 3.6835519951364775`*^9, 3.6835520793946853`*^9, 
   3.6835523806456437`*^9, 3.683552494771775*^9, 3.6835526109207573`*^9, 
   3.68355297656367*^9, 3.6835531594680643`*^9, 3.6835532138913684`*^9, 
   3.683554080799665*^9, 3.6840805468810596`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "loop"}], " ", "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Iterator", " ", "and", " ", "maximum", " ", "values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "0."}], ";", 
    RowBox[{"UpperBound", "=", "1000."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmallErr", "=", "0.0000000000000001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NoErr", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Forever", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Iteration", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"Forever", "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "<", "UpperBound"}], " ", "&&", 
        RowBox[{"(", 
         RowBox[{"NoErr", "||", " ", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"err", 
                 RowBox[{"(", 
                  RowBox[{"err", "-", "prevErr"}], ")"}]}], ")"}], "2"], "+", 
              "1"}], ")"}], "2"], ">", 
           RowBox[{"(", 
            RowBox[{"1", "+", "SmallErr"}], ")"}]}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Obtain", " ", "vector", " ", "from", " ", "gradient", " ", "and", " ", 
       "assign", " ", "into", " ", "running", " ", "array"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dirs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"dir", "=", 
          RowBox[{"gFunc", "@@", "iterParams"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ReportIteration", "[", "i", "]"}], ";", 
      RowBox[{"(*", "Report", "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fps", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"ConsecRefines", "\[Equal]", "0"}]}], ",", 
        RowBox[{
         RowBox[{"Pause", "[", "fps", "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"(*", "Pause", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showMistakes", ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mark", " ", "down", " ", "boost", " ", "vs", " ", "error"}], 
        " ", "-", " ", 
        RowBox[{
        "please", " ", "do", " ", "not", " ", "change", " ", "other", " ", 
         "variables"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"iterParams", "-=", 
       RowBox[{"factor", "*", 
        RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ConsecRefines", "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"i", "++"}], ";", 
         RowBox[{"totalIter", "++"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"err", "=", 
       RowBox[{"eFunc", " ", "@@", " ", "iterParams"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Factor", " ", "Adaptivity"}], " ", "-", " ", 
        RowBox[{
        "check", " ", "to", " ", "see", " ", "whether", " ", "error", " ", 
         "has", " ", "increased", " ", "over", " ", "errorRatio", " ", "to", 
         " ", "determine", " ", "whether", " ", "to", " ", "boost", " ", "or",
          " ", "refine"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         FractionBox["err", "prevErr"], ">", "errorRatio"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "err", " ", "increased"}], ",", " ", "revert", 
          ",", " ", "refine", ",", " ", 
          RowBox[{"and", " ", "retry"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"iterParams", "=", 
          RowBox[{"debugParams", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log10", "[", "factor", "]"}], "<", 
            RowBox[{"-", "100"}]}], ",", 
           RowBox[{"factor", "=", "0.5"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ConsecRefines", ">", "maxRefines"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"doWarn", ",", 
              RowBox[{
              "Print", "[", 
               "\"\<Exceeded maximum amount of consecutive corrections.\>\"", 
               "]"}]}], "]"}], ";", 
            RowBox[{"Abort", "[", "]"}], ";"}], ",", 
           RowBox[{
            RowBox[{"RefineFactor", "[", "]"}], ";"}]}], "]"}], ";"}], ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";", 
         RowBox[{"BoostFactor", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6815830549052362`*^9, 3.6815830569639435`*^9}, {
   3.6815833224915934`*^9, 3.6815833427873363`*^9}, {3.6815835152037477`*^9, 
   3.6815835867637324`*^9}, {3.6815836557592244`*^9, 3.6815836579033656`*^9}, 
   3.681583698624568*^9, {3.681583804126245*^9, 3.681583899175346*^9}, {
   3.681584120809069*^9, 3.6815841278946266`*^9}, {3.681584565742484*^9, 
   3.681584574478776*^9}, {3.681584717851612*^9, 3.6815848728995996`*^9}, {
   3.68158494548003*^9, 3.681584960968948*^9}, {3.6815849967248945`*^9, 
   3.681584998155593*^9}, {3.681585044037255*^9, 3.6815850807786193`*^9}, {
   3.6815851687605925`*^9, 3.6815851749758067`*^9}, 3.681585257436683*^9, {
   3.681588818643874*^9, 3.68158882224041*^9}, {3.6816039209133673`*^9, 
   3.681603978014973*^9}, 3.6816040159742737`*^9, {3.68160425701083*^9, 
   3.681604324912594*^9}, {3.6816043708838124`*^9, 3.681604395329851*^9}, {
   3.6816044410436525`*^9, 3.6816044809352636`*^9}, {3.681604581304495*^9, 
   3.681604581408561*^9}, {3.681657788978179*^9, 3.6816577997986774`*^9}, {
   3.681658388036417*^9, 3.681658388337614*^9}, {3.6816584666423044`*^9, 
   3.681658466801412*^9}, {3.681658543235112*^9, 3.6816585444509244`*^9}, {
   3.6816587162912865`*^9, 3.6816588213786974`*^9}, {3.681658853741133*^9, 
   3.6816588544954505`*^9}, {3.6816589093944664`*^9, 3.681658910498202*^9}, {
   3.6816589538124695`*^9, 3.681658961216242*^9}, {3.681659019321334*^9, 
   3.68165902741212*^9}, {3.6816590914616175`*^9, 3.6816591157677307`*^9}, {
   3.681659258204584*^9, 3.681659461082448*^9}, {3.681659669532071*^9, 
   3.681659671022064*^9}, {3.681659706162506*^9, 3.6816597313162856`*^9}, {
   3.681659808123521*^9, 3.6816598312099223`*^9}, {3.6816599096232305`*^9, 
   3.681659938730646*^9}, {3.6816600065518885`*^9, 3.681660025867775*^9}, {
   3.681660056864452*^9, 3.6816600601386366`*^9}, {3.681660324915262*^9, 
   3.6816603310743704`*^9}, 3.6816603734203887`*^9, {3.6816604871622624`*^9, 
   3.6816605001939564`*^9}, {3.681726019259656*^9, 3.681726117312996*^9}, 
   3.6817261890839434`*^9, {3.6817263633960915`*^9, 3.6817263752591195`*^9}, {
   3.6817265926157346`*^9, 3.681726606880471*^9}, {3.6817266668997264`*^9, 
   3.6817267125406976`*^9}, {3.681737754102071*^9, 3.6817377743956075`*^9}, {
   3.681737807716177*^9, 3.6817378088419275`*^9}, {3.6817384089755154`*^9, 
   3.6817384169598455`*^9}, {3.681738453769399*^9, 3.6817386697234554`*^9}, {
   3.6817387708958917`*^9, 3.681738855176112*^9}, {3.6817390914112206`*^9, 
   3.6817391362351217`*^9}, {3.681739252624189*^9, 3.6817392574333997`*^9}, {
   3.681739661725093*^9, 3.681739693822504*^9}, {3.681739852449319*^9, 
   3.681739852764531*^9}, {3.6817401973837595`*^9, 3.6817402118944373`*^9}, 
   3.6817414009559374`*^9, {3.681741459131745*^9, 3.681741580191125*^9}, {
   3.6817416744515905`*^9, 3.681741705967613*^9}, {3.6817418559296923`*^9, 
   3.6817418856745343`*^9}, {3.6817420325103846`*^9, 
   3.6817421352588587`*^9}, {3.6828756460984926`*^9, 3.682876143225466*^9}, 
   3.682876243323327*^9, {3.6828763113636885`*^9, 3.6828763434921064`*^9}, {
   3.6828764696682243`*^9, 3.682876541840211*^9}, {3.6828765823151927`*^9, 
   3.682876584366561*^9}, {3.682876634735857*^9, 3.682876651010708*^9}, {
   3.6828773139891996`*^9, 3.6828773364101458`*^9}, {3.6828773788808804`*^9, 
   3.682877400381214*^9}, {3.682877489771953*^9, 3.6828774903853636`*^9}, {
   3.6828776060872345`*^9, 3.682877608594906*^9}, {3.682881335946268*^9, 
   3.68288136995558*^9}, {3.682882576135539*^9, 3.6828825770011177`*^9}, {
   3.682882635548149*^9, 3.6828826427649612`*^9}, {3.682882688414392*^9, 
   3.682882696965092*^9}, {3.6828827453663607`*^9, 3.682882758678235*^9}, {
   3.68288280128664*^9, 3.682882801830003*^9}, {3.682882985371976*^9, 
   3.6828829854799776`*^9}, {3.6828830826284523`*^9, 
   3.6828830838046455`*^9}, {3.682883151550181*^9, 3.6828831523661866`*^9}, {
   3.682883219319111*^9, 3.682883240973945*^9}, {3.6828845914540353`*^9, 
   3.682884596048645*^9}, {3.682884740497396*^9, 3.6828847409814034`*^9}, {
   3.6830399252545934`*^9, 3.683040021903536*^9}, {3.683040074129644*^9, 
   3.683040109382766*^9}, {3.6830401521016164`*^9, 3.6830401528138976`*^9}, {
   3.6830403419625387`*^9, 3.683040384081685*^9}, {3.6830405507742767`*^9, 
   3.683040554542845*^9}, {3.6830407646220727`*^9, 3.6830407792434945`*^9}, {
   3.683041005852372*^9, 3.683041006316601*^9}, {3.6830410572708087`*^9, 
   3.683041063595398*^9}, {3.683041710352441*^9, 3.683041710548448*^9}, {
   3.6830417661374545`*^9, 3.6830417802909727`*^9}, {3.6830486378439603`*^9, 
   3.6830486617386465`*^9}, {3.6830494878933363`*^9, 3.683049494385665*^9}, {
   3.683049994565211*^9, 3.6830500492853537`*^9}, {3.683050088724822*^9, 
   3.683050102658111*^9}, {3.6830502789247494`*^9, 3.683050279417079*^9}, {
   3.683051358030029*^9, 3.6830513590497074`*^9}, {3.683071209115715*^9, 
   3.683071236472953*^9}, {3.6830714672728186`*^9, 3.6830714684896317`*^9}, {
   3.6830715354192495`*^9, 3.6830715898175154`*^9}, {3.683071625858543*^9, 
   3.6830716635406637`*^9}, {3.683071701500972*^9, 3.6830717333011713`*^9}, {
   3.6830722228226123`*^9, 3.6830722943002644`*^9}, {3.6830728559445696`*^9, 
   3.683072972508274*^9}, {3.6830731256430845`*^9, 3.6830731527751737`*^9}, {
   3.6830741829346232`*^9, 3.6830742453112097`*^9}, {3.6830743162555017`*^9, 
   3.6830743180837207`*^9}, {3.683075201200184*^9, 3.6830752609750347`*^9}, {
   3.68307547026332*^9, 3.683075482021157*^9}, 3.6830755175598507`*^9, {
   3.6830760734353714`*^9, 3.6830763233887806`*^9}, {3.6830763549573927`*^9, 
   3.68307635783331*^9}, {3.6830764258746705`*^9, 3.6830764272325764`*^9}, {
   3.683076460497753*^9, 3.683076499906025*^9}, {3.683076584187575*^9, 
   3.683076587354686*^9}, {3.683113789162665*^9, 3.683113799528575*^9}, {
   3.683473868679073*^9, 3.6834738695539455`*^9}, {3.683474127010831*^9, 
   3.6834741301785593`*^9}, {3.6834742561450167`*^9, 3.683474327471419*^9}, 
   3.683475086419007*^9, {3.683475422019196*^9, 3.683475446846759*^9}, {
   3.6834756211749306`*^9, 3.6834757009501467`*^9}, {3.6834757318607655`*^9, 
   3.6834757544768524`*^9}, {3.6834769318898134`*^9, 
   3.6834769348793306`*^9}, {3.6834769968695316`*^9, 
   3.6834769969916124`*^9}, {3.683481894355544*^9, 3.6834818948128486`*^9}, {
   3.6834819270643625`*^9, 3.6834819273225355`*^9}, {3.683482000056054*^9, 
   3.6834820309506626`*^9}, {3.6834824427203465`*^9, 3.683482445979519*^9}, {
   3.683482476911153*^9, 3.683482477036238*^9}, {3.6834825422897654`*^9, 
   3.683482542403841*^9}, {3.6834939977710204`*^9, 3.6834940006869664`*^9}, {
   3.683494176985549*^9, 3.6834941785385847`*^9}, {3.6835408777038684`*^9, 
   3.6835408802965975`*^9}, {3.6835409304023485`*^9, 
   3.6835409306685247`*^9}, {3.6835409642379184`*^9, 
   3.6835409644720783`*^9}, {3.6835410665411644`*^9, 3.683541068398403*^9}, {
   3.6835431122035*^9, 3.683543112450664*^9}, {3.6835440067658195`*^9, 
   3.6835440271264057`*^9}, {3.683544474519847*^9, 3.6835444860975714`*^9}, {
   3.683544617029913*^9, 3.6835446228367863`*^9}, {3.6835450588397436`*^9, 
   3.683545061975836*^9}, {3.6835472214513702`*^9, 3.683547229002435*^9}, {
   3.6835474251021185`*^9, 3.6835474434665327`*^9}, {3.68354748080097*^9, 
   3.6835475052560797`*^9}, {3.68355064698372*^9, 3.6835506821411705`*^9}, {
   3.683551242334303*^9, 3.6835512425704584`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Data", " ", "Recording"}], " ", "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RecordedSmoothnessComparisonData", "=", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"RecordedSmoothnessComparisonData", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Smoothness\>\"", ",", "Smoothness"}], "}"}], ",", 
          "debugErr", ",", "TotalRefines"}], "}"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6835512635774727`*^9, 3.6835512766051617`*^9}, {
  3.6835513068123145`*^9, 3.6835513199550796`*^9}, {3.6835513562472906`*^9, 
  3.683551464884759*^9}, {3.683551511272703*^9, 3.683551571884137*^9}, {
  3.683551613722046*^9, 3.683551762925576*^9}, {3.6835517985283265`*^9, 
  3.683551982519062*^9}, {3.683552039785263*^9, 3.6835520591141562`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "Diagnostic"}], " ", "Tools"}], "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "History"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"debugParams", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "10"}], ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<Best Parameters\>\"", " ", "Generated", " ", "with", " ", 
     "NMinimize"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoParams", "=", 
     RowBox[{"params", "/.", 
      RowBox[{
       RowBox[{"NMinimize", "[", 
        RowBox[{
         RowBox[{"eFunc", " ", "@@", " ", "params"}], ",", "params"}], "]"}], 
       "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Compare", " ", "current", " ", "data"}], ",", " ", 
     RowBox[{"auto", "-", 
      RowBox[{"fitted", " ", "data"}]}], ",", " ", 
     RowBox[{"and", " ", "generated", " ", "data"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Fitfunction", "@@", 
            RowBox[{"Prepend", "[", 
             RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
         "SamplingSet"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fitfunction", "@@", 
           RowBox[{"Prepend", "[", 
            RowBox[{"AutoParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
        "SamplingSet"}], ",", "\[IndentingNewLine]", "Data"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.681583907879587*^9, 3.681583908109586*^9}, {
   3.6815841498431664`*^9, 3.6815843369873466`*^9}, {3.6815843715436563`*^9, 
   3.6815844247768803`*^9}, {3.6815845055957317`*^9, 
   3.6815845398777423`*^9}, {3.681585388456995*^9, 3.681585416260584*^9}, {
   3.6815854638012447`*^9, 3.68158558561312*^9}, {3.6815856333774595`*^9, 
   3.6815856567101574`*^9}, {3.681585697816263*^9, 3.6815857095368476`*^9}, {
   3.6815908238964005`*^9, 3.6815908354548683`*^9}, {3.6828752895787106`*^9, 
   3.6828753192775946`*^9}, {3.6828767617321186`*^9, 
   3.6828767631860867`*^9}, {3.6828768492823505`*^9, 
   3.6828768503120255`*^9}, {3.6828850410059423`*^9, 3.682885107966795*^9}, {
   3.6828851904843426`*^9, 3.6828852104902706`*^9}, {3.683040664212844*^9, 
   3.6830406713056135`*^9}, 3.683053624434885*^9, {3.683074224863575*^9, 
   3.6830742270330205`*^9}, {3.683488171174701*^9, 3.6834881803566556`*^9}, {
   3.683541086143239*^9, 3.6835410865385046`*^9}, {3.68354173096402*^9, 
   3.68354175174288*^9}, {3.6835521884124084`*^9, 3.683552189038827*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10wlMUwccx/EKdHacnXIjCqwDyn0jh/RHOdtSWq4W4gQEG4msyBGUjbrU
KYLHhgxBcAXjHIgsXJlMYUaYbh6RTDKRgc5FJAoLYnHAwqFzW/qnSdN8+u0v
r33v1TFnb7JCj8Fg7Prv+f+r7jHHk7lvd2Q/OTRAb0BiGJgoLKwjszCXM8Ys
lZ0jszEcbWmgP9NGNsf4sjxh3e1usjXiPb9dXe7uJW/CrZmsI1O8H8gO+FPU
uXXo+iDZCf5uk384CX8ic7DTo8J4lHeb7IyqzRK32s4hsisamlOEfw0Pk92w
asza4FB7n+yBAFc3r+PfjJK94LhY7VBk/JDsAxWr5bnm18dkXzSV216//PYJ
2Q9+dnbKBfEk2R/j9ztyxsaekQPQVKLinWyZJgcidrZ7U2vfDDkIRXmd+9+x
05KDIb+7+bRe3ivyVswcPRHds3eeHIL1DQ+cXdsWyaHI1hPsDrNYIochklm9
9Lp/hRyO+YYw04GmN+RteC1IjzTayRjUOQJlUbM1BZZ6ZB6m0jjaxlf6ZMDy
niqTv8jUWQ00/FaWweewqEfin785NWcOGlKPxKXRgqPFbBPqfGhDjhjYjJhR
56PG466tXt571KNwGDVj0/obqUdhtcGWdX7AnHo0Wqs97Z2bLKlHo/RCFeeT
ZmvqMdhe+XLlys+21GNg3pwRaWJhTz0WZxlSZs8XW6jHIuZYz7v7bB2pxyH+
UvECq8KJehyucBUaHotDPR5lVaHlopYPqMejn7+an7XDhboAL1Zmznb4cqkL
0GN0LELxvjt1IaaqnS50+XtSF+K4QbugI9ebugjZcTeZIQ99qIugrLCqV2/0
o56Awi2TYk6mP/UE2CrWPfq8P4C6GEzxnjZLbhB1MRYldpUG7cHUE3FxQ4y2
YlsI9US8+PLGvY7JUOoSOPZbTBRowqlL8HTWs7B+dwR1KZbmYoS5TtAZUjSt
GD29bBNJn5dittH60S4bvs6DUijYnBvPHKJon4TWWs1nNd7RtE+C+Fp3bV10
DO2TEDxvdm0uM5b2SRiaNhIrD8TRPhn1puzeM83xtE/G5Mh5zc1BAe2ToVrJ
DV+cENI+GezfT7DG34ponwL3HSN1d6zEtE/BRLmyvc85kfYp+I7rlO/BldA+
BVrt1TunTKS0T4XoYHGKtYqMVMx9qj1U95isTkXJVGmhl3cS7VMhs3JUtCvJ
jDR8lT9rqKwjIw1cER589DVZnYZzP3a2u55c26fBotfnqiZjbS9DADfrQNDy
2vFlcHH4petW3trxZShqMHs+x1/7/jJcnJWeKgym38uQw/hNgNmHzXR+IIeP
y4K9WEHnVy1HoGRfn0EZXa9BOSSN3kaV6m20T0fJx/s5PBHdj0gH83tv4/49
9P9Up4OhGo0oP82Bbp+Ol+u7DExdw3VmZECWYeprlR2PfwEvGdH6
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1lAlQVHUcxzfjVE4R5LC4aRFaWF2XS9nvct8su7DLTnIF5HCklZCNIT5K
GCQggsHkMMoj2lDUYBpAkqXGoRlpCktRUCmE3aiBWFBcw6ls9vd25s3OZz//
z//9/+/9Z91fPSAt3MDhcAqeXf9/Gz7LIptoE7HuDSPQD6jMnhBavLY0YkAz
jHsxbfL6JZGBbSAZLfH9t/Ay8RbozWMTs/J+JHbEUY3St06vI96GmCjbsrsF
GmI3dASFT2Yd0hN74JuWSMWt4Q10fy+UibsWF/osiH2QLNy/N6/EnJgLx98e
Do5wTYi349PG+lnLqc3E/jjWLBrkOzgS8yDY4xxvUW1NHIj6r6+PzkltiPlg
PFxdfUadiXfgnLY1dSiU7Xei6mK/psXYiViAWsmFkKFM1u/CuKg3yb3alViI
dX9d1tTaNuIgXAn6+IzYhp0/GNkqnp3vMutDcG28576y/QXiUGzk28ZpOzyI
w/DFwy2yvkUX4t14Zyqi5IbqReI92HkMH9yZY8eHo+n8xP7CBXdiETZOhzn8
dNmbGHhyW54zZf6SgRng7/V/nNyFnuTF+G7S3KdpL83HiHH+egf/Yr8b+Qio
Zp0eLz6i8UwEMrgz5YE6L/KReMo1ardqIGYioZ9aq/A7zK4vCvrafc7WATQf
EwVv209uap+w+4lGp/EvpZ6DtF8mGies8pYff2lHPgbFwyFlA4dMyccgdKag
b+scez5i4fCt5fHdLnQ+mFgoBHW5p/I55ONQ0a1RHL0/bjh/TBz6n070PZCv
0HmPh5u0/O5A76qBmXgMNBWfMo2wUBt8AjZVSO3zT24yMJOAsZYmqxWxM/lE
iPIarFcT3Mg/Y17PkcIab/JJmLQY8rBU8cgnYalkWlRZHEA+GTF21zT6Ij75
ZOResHp31FZIPgUjJ17ZdfpOMPkUeJm6qLljIeRTUeVxsNBPG0Y+FcqihrMB
N0FegtFfFX/qosUGhgQVl3j8se2RNF6CCPWgs0NIlIHVEig+NP2sMSCa+jQI
p1XNfLM46tMwdiU3x/QGMZOG50oXeX5WCdSnYeXWm3Xt1YnUSzHvv16V0phM
vRR/2bd2p2iJGSmGme8vrQ2nUi/F8xrtgbYiCfUy/GGf/9bbOmLI4NhW/h53
axr1Mji7B9S41hKrZdCqSvW9fCn16RD0yjuVAmKkY3OPxKggkphJR2l3bP7v
E2yfjvRsdUmkG9tnwDv7/YqQLrbPwM/LYbnht9n7Z2DeSX/y8zVanzoDs2cX
vM4FsuuXY957ytSki/YHOdpNzjzSclOolyP4K9fXV2fpeanlyKldaW15mZ4v
RwFHoeJgpTSGegVkynJbqRn7/hTonWk2uXoknHoFgh5Uh3VGsecnE46dHN3V
477UZ+Jw30fGgkAj6jPxg8At3P4e/R+pM3GaVzDj3brDwBwlopbu1XjuE+M/
oH67gQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{},
  PlotRange->{{0., 100.}, {-74.48788369015581, 48.75070775223382}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.6835417522141943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.8908174248437426`"}], ",", "1.6650507946733875`", ",", 
   RowBox[{"-", "2.584687754903225`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.683541752220197*^9}}],

Cell[BoxData["78.37959757215229`"], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.6835417522221994`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dispGradientRange", "=", "3."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dispGradientThresh", "=", "1.5"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradient", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"1", ",", "2", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"2", ",", "3", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"3", ",", "1", ",", "dispGradientThresh"}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.6834827674949846`*^9, 3.6834827724803104`*^9}, {
  3.6834828277811995`*^9, 3.683482833842241*^9}, {3.6834831095158396`*^9, 
  3.683483126677289*^9}, {3.683483342535281*^9, 3.683483348471242*^9}, {
  3.683541120765334*^9, 3.683541135063873*^9}}],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxl0n9MlHUcwPEDj0PiebhLIlgwKuqq0yk4OmZg3peQcq0781SCWDQvGI1M
fhQ/QmzommEqMNz6B6gMpvxoRkQKpXEnDkeWyxNMNGjoqIUgiEYdikR/vL+3
5R/Pnr3+e38/n8+jjlx7lq9Go/l44fvv/+AzjZ8fjlrsnHeor17uu9vtumqz
2n/ylb4YcXPSMznbjVcUrEtenzwlHRRZnFOTc0G6bl+sCBP9FtwQnlu4pXBS
umyVIys9a1b6QL5u8aIKX4HHetNfSx3yl6ZvU6fjy5iHb8k+TB+mD9OH6cP0
YfowfZg+TN/G8LwA5c8rsg/Th+nD9GH6MH2YPkwfpg/TZ/jZ9PqLjq8t9GH6
MH2YPkwfpg/Th+nD9GH6XqmKP/iJ6w/Zh+nD9GH6MH2YPkwfpg/Th+lLmX7h
9nt7Z2Qfpg/Th+nD9GH6MH2YPkwfpq/c5rEvqdUI+jB9mD5MH6YP04fpw/Rh
+jB9Aw22puwpP9mH6cP0YfowfZg+TB+mD9OH6VvqaZg7nhwo+zB9mD5MH6YP
04fpw/Rh+jB94nCZaY/VIPswfZg+TB+mD9OH6cP0Yfr+37Nz0Njx0VZFusJn
Yn/wWVW6ytSRXRetlz7TdOKzmnUG8WaS++xIn1a+Z3AieE3UgE6a95/ObOmr
HPHOI+jcLm1EpyK9+dl0S3OlKl3XHFsalxUkfTVE+aYnQS8dkjhd/FSAd365
h1yjf3+nSj+xZbKjKM4gJlbPzVf7aGRPVExiQm+Xd/47vkpWT66dlvMtmWpp
b8307oN5huWX15RcVMXjrurWrJjpe+YbWnVKjBcp0rZvK9MGr6jSu0dTC3pt
epG/vtztLvXuJ3w4MmO7j+ae/by9ZNSa97v3nn6bGTeOuBTpDZdvzW2oV6V7
uu8MnCwJkjY3ao/EbtJLb1yrS3KHGsSuZR0N9x/13sPwfUeX3z2tlY4fO3Zs
bFAnPVQT0LPnIX/nG5+uGbpkVYSp33Ng+IifMzTDpuzuUkVhyFhmbJLWeSYi
I2GlceE+Ui6ZK37xdTon4szbFu4ju8n/fEaRxvnB09eK2+pUkfJkrbLy5dvd
Bxvtju1mg/j1wvvtNt1flrb6Dz17r6kiesyZ+P3NOxat/fxb1/cpYpXrsefL
js9bKk5ot1lvqOKRl5KM9c/5CNUUl/fFZr2oLKg231i9SBhnly9rnQ0UBT8U
Hmp/QCsC7MF1W92KSIlKD313XCsmmv9RVrSoIr5UVJhP+YlzPsM7JncGiUi3
0TNTqxMdaT3X29L0wndpYE7nO/7ix9T+6K4wg/gXxUBL2A==
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 1.090637637651167*^-25], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwNw8mOmgAAAFDHZdSKCC6AiAuIG4KACyAooIgiuI0K6hxGZ5Keeuix6Rf0
0KRJz/3Zzkse+fH9+BEOhUL/Pkc+A09hKPacSyTh53g2nqgVEDASTYcjmWgs
n/xSgmACzpIIWs7mUCCNpIBKLk+hmNhs8XSjRZS7NbKBl9rlSqFWdaY6U63h
GahZIliSEhrNfqtdx4ocVR8x3V6dHnYYqctiabAIZvTB0BiOzJE0k+SdtZjL
iqWMt3NrIvaX2sQ1zLVuLMaqZ840QdzM5raq6Wvn4Qf3s3/d7gJv47veZbOl
i7jMcuMev1/YJ2d9Xrtvp7PC9Y4r53V/uO32B3v5HlymzuoJSBnuOgKmoxkw
BmWeYSiehRO5bDKfQykyhRTSGMopMlTCARSBiVKuUkbIWrZM8OoYq1Od4aDU
bBCtZrndqjKdWpch2S7FsUW6jjfohsA3RaHVF+s9jhkNu9KIlSWa72XwIljE
emNlZBqKNR/oU2lmLvY7+7CX57PV8UWcaOOFZXrubOMNDX2+3WhLW7UX1m4b
TgM/rn+8wF+fT65/3lyC/ette734j7ugqbvb1TkdVV4439++Hn//vP0N3h/f
Xn79B/AhW7Y=
              "]], 
             
             PolygonBox[{{142, 88, 89, 121}, {141, 87, 88, 119}, {113, 83, 94,
               117}, {135, 81, 82, 101}, {145, 89, 90, 126}, {120, 97, 87, 
              141}, {139, 82, 83, 113}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.774341689320551, 0.29244587791363114`, 0.05959411018784244], 
           GraphicsGroupBox[{
             PolygonBox[{{141, 98, 120}, {119, 98, 141}}], 
             
             PolygonBox[{{108, 107, 135, 136}, {143, 142, 121, 122}, {146, 
              145, 126, 127}, {114, 113, 117, 118}, {102, 101, 139, 140}, {
              140, 139, 113, 114}, {136, 135, 101, 102}, {122, 121, 145, 
              146}}], 
             PolygonBox[{{124, 98, 119, 142, 143}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.816216816033422, 0.3667044640745807, 0.09932351745332962], 
           GraphicsGroupBox[{
             PolygonBox[{{118, 93, 114}, {114, 93, 140}}], 
             
             PolygonBox[{{137, 136, 102, 103}, {147, 146, 127, 128}, {144, 
              143, 122, 123}, {125, 124, 143, 144}, {123, 122, 146, 147}, {
              109, 108, 136, 137}}], 
             PolygonBox[{{103, 102, 140, 93, 115}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8586671387596748, 0.4502061207535447, 0.1574248897012825], 
           GraphicsGroupBox[{
             PolygonBox[{{144, 99, 125}, {123, 99, 144}}], 
             
             PolygonBox[{{138, 137, 103, 104}, {104, 103, 115, 116}, {148, 
              147, 128, 129}, {110, 109, 137, 138}}], 
             PolygonBox[{{132, 99, 123, 147, 148}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9037148929211487, 0.5754470130372406, 0.2984891446223127], 
           GraphicsGroupBox[{
             PolygonBox[{{116, 92, 104}, {104, 92, 138}}], 
             PolygonBox[{{149, 148, 129, 130}, {133, 132, 148, 149}}], 
             PolygonBox[{{111, 110, 138, 92, 105}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9487626470826225, 0.7006879053209363, 0.43955339954334277`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{134, 133, 149, 150}, {112, 111, 105, 106}, {150, 
              149, 130, 131}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{150, 100, 134}, {131, 100, 150}, {106, 91, 
              112}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{112, 106}], 
             LineBox[{134, 150, 131}]}, "300000000"], 
           Annotation[#, 300000000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{111, 105}], 
             LineBox[{130, 149, 133}]}, "250000000"], 
           Annotation[#, 250000000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{110, 138, 104, 116}], 
             LineBox[{129, 148, 132}]}, "200000000"], 
           Annotation[#, 200000000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{115, 103, 137, 109}], 
             LineBox[{125, 144, 123, 147, 128}]}, "150000000"], 
           Annotation[#, 150000000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{108, 136, 102, 140, 114, 118}], 
             LineBox[{124, 143, 122, 146, 127}]}, "100000000"], 
           Annotation[#, 100000000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{117, 113, 139, 101, 135, 107}], 
             LineBox[{120, 141, 119, 142, 121, 145, 126}]}, "50000000"], 
           Annotation[#, 50000000, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{-0.01692130149525447, 1.075718544228778}], 
        ArrowBox[{{-0.01692130149525447, 
         1.075718544228778}, {-0.01910881420867543, 
         1.0773628311604364`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.774341689320551, 
                0.29244587791363114`, 0.05959411018784244}}, {{
                0.8162168160334219, 0.3667044640745807, 
                0.09932351745332962}}, {{0.8586671387596748, 
                0.4502061207535447, 0.1574248897012825}}, {{
                0.9037148929211487, 0.5754470130372406, 
                0.2984891446223127}}, {{0.9487626470826226, 
                0.7006879053209363, 0.4395533995433426}}, {{1., 0.843137, 
                0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -64.28571428571428}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -64.28571428571428}]}, {{
                    7.500000000000001, -38.57142857142856}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -38.57142857142856}]}, {{
                    7.500000000000001, -12.85714285714286}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -12.85714285714286}]}, {{
                    7.500000000000001, 12.85714285714286}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    12.85714285714286}]}, {{7.500000000000001, 
                    38.571428571428584`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    38.571428571428584`}]}, {{7.500000000000001, 
                    64.2857142857143}, 
                    Offset[{4., 0}, {7.500000000000001, 64.2857142857143}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -64.28571428571428}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -38.57142857142856}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -12.85714285714286}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    12.85714285714286}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    38.571428571428584`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 
                    64.2857142857143}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8940333969961531`", ",", "3.318700414383777`*^8"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "5.`*^7", ",", "1.`*^8", ",", "1.5`*^8", ",", "2.`*^8", ",", 
                 "2.5`*^8", ",", "3.`*^8"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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

        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwNwzuPmgAAAGDPx+lFAcGI7wjyMAKCRgXEiLyMooARfGDq+9KtSbdOHbt0
6dLpfkC3Dp06dOnSpVP/Uu9LPvz+3r9HI5HIy+vY68xD9N/hBYjGwFgciiey
iUf4MYkkU99z73KpJzSdEVmuBELfnt6WoWwVRmpIrpKFCxkAy6NdukkUS2Sp
TJUrdKXarNaYOsZiOI4WGoUiT5ACSXUomsMbP5sf+y1mwLDtBlEEQIlr/6h9
GHW6aq/vGqYuStpAdHRDETonP/jV/TTpD+ZjdanphiSb8tBWJ9ZQWUw0z7Tk
Nn9c+/5svrEXf6Zf9o67WzpDXtgulsHcDl3v4K1W1vQcbC6b7XW7u+32z+Hh
7+rrfR9Khv6QSav2PI3mE1koBgJxCHyEs5kCChQLeayO1KpTZQSVS0kEBkvF
bKUMVyucJKZyCIpjhQZebdJliiyRRIWm6kwLYxmcY9uy1GhzrDgoEg2qI5AC
T3c7BN9mBv1WvycowyiQccN9Z6T0J6psGgNtIupaTx0PLVOZWqbnjuczfih7
h3CysHVnabiOtlzM/LW18n6PPi+2m/D5HpxP6+MbexPMA9/Z7/b32+523VzO
y912e734p+N/aj1jdA==
              "]], 
             
             PolygonBox[{{153, 89, 79, 201}, {124, 39, 29, 176}, {118, 29, 19,
               172}, {108, 19, 9, 165}, {132, 49, 39, 182}, {137, 59, 49, 
              186}, {161, 99, 89, 207}, {142, 69, 59, 191}, {147, 79, 69, 
              196}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7704911901717783, 0.2856176568371343, 0.05594091410545345], 
           GraphicsGroupBox[{
             
             PolygonBox[{{183, 182, 124, 125}, {197, 196, 142, 143}, {119, 
              118, 172, 173}, {208, 207, 153, 154}, {109, 108, 165, 166}, {
              202, 201, 147, 148}, {187, 186, 132, 133}, {173, 172, 108, 
              109}, {162, 161, 207, 208}, {143, 142, 191, 192}, {177, 176, 
              118, 119}, {125, 124, 176, 177}, {148, 147, 196, 197}, {133, 
              132, 182, 183}, {166, 165, 101, 102}, {154, 153, 201, 202}, {
              138, 137, 186, 187}, {192, 191, 137, 138}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8098243514602361, 0.35536848927159986`, 0.09325860855885133], 
           GraphicsGroupBox[{
             
             PolygonBox[{{155, 154, 202, 203}, {167, 166, 102, 103}, {120, 
              119, 173, 174}, {139, 138, 187, 188}, {134, 133, 183, 184}, {
              126, 125, 177, 178}, {193, 192, 138, 139}, {188, 187, 133, 
              134}, {178, 177, 119, 120}, {198, 197, 143, 144}, {209, 208, 
              154, 155}, {149, 148, 197, 198}, {110, 109, 166, 167}, {184, 
              183, 125, 126}, {163, 162, 208, 209}, {203, 202, 148, 149}, {
              174, 173, 109, 110}, {144, 143, 192, 193}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8491575127486939, 0.42511932170606537`, 0.1305763030122492], 
           GraphicsGroupBox[{
             
             PolygonBox[{{135, 134, 184, 185}, {199, 198, 144, 145}, {150, 
              149, 198, 199}, {210, 209, 155, 156}, {145, 144, 193, 194}, {
              185, 184, 126, 127}, {140, 139, 188, 189}, {164, 163, 209, 
              210}, {189, 188, 134, 135}, {175, 174, 110, 111}, {204, 203, 
              149, 150}, {127, 126, 178, 179}, {111, 110, 167, 168}, {194, 
              193, 139, 140}, {121, 120, 174, 175}, {179, 178, 120, 121}, {
              156, 155, 203, 204}}], 
             PolygonBox[{{168, 167, 103, 10, 104}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8913689997809195, 0.541123200414328, 0.25982874413001655`], 
           GraphicsGroupBox[{
             PolygonBox[{{210, 100, 164}, {185, 50, 135}, {175, 30, 121}}], 
             
             PolygonBox[{{141, 140, 189, 190}, {112, 111, 168, 169}, {205, 
              204, 150, 151}, {169, 168, 104, 105}, {157, 156, 204, 205}, {
              151, 150, 199, 200}, {146, 145, 194, 195}, {128, 127, 179, 
              180}, {195, 194, 140, 141}, {200, 199, 145, 146}}], 
             
             PolygonBox[{{130, 50, 185, 127, 128}, {180, 179, 121, 30, 122}, {
              190, 189, 135, 50, 136}, {115, 30, 175, 111, 112}, {159, 100, 
              210, 156, 157}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9336821990284203, 0.6587615361710739, 0.3923299095328092], 
           GraphicsGroupBox[{
             
             PolygonBox[{{200, 80, 151}, {190, 60, 141}, {136, 60, 190}, {195,
               70, 146}}], 
             
             PolygonBox[{{170, 169, 105, 106}, {116, 115, 112, 113}, {131, 
              130, 128, 129}, {160, 159, 157, 158}, {158, 157, 205, 206}, {
              181, 180, 122, 123}, {146, 70, 80, 200}, {129, 128, 180, 181}, {
              113, 112, 169, 170}, {141, 60, 70, 195}}], 
             PolygonBox[{{206, 205, 151, 80, 152}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9759953982759212, 0.7763998719278197, 0.5248310749356019], 
           GraphicsGroupBox[{
             
             PolygonBox[{{158, 90, 160}, {123, 40, 181}, {129, 40, 131}, {181,
               40, 129}, {152, 90, 206}, {206, 90, 158}}], 
             
             PolygonBox[{{117, 116, 113, 114}, {114, 113, 170, 171}, {171, 
              170, 106, 107}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{114, 20, 117}, {171, 20, 114}, {107, 20, 
              171}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{117, 114, 171, 107}]}, "7000"], 
           Annotation[#, 7000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{131, 129, 181, 123}], 
             LineBox[{152, 206, 158, 160}], 
             LineBox[{106, 170, 113, 116}]}, "6000"], 
           Annotation[#, 6000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{122, 180, 128, 130}], 
             LineBox[{136, 190, 141, 195, 146, 200, 151, 205, 157, 159}], 
             LineBox[{105, 169, 112, 115}]}, "5000"], 
           Annotation[#, 5000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{104, 168, 111, 175, 121, 179, 127, 185, 135, 189, 140, 
              194, 145, 199, 150, 204, 156, 210, 164}]}, "4000"], 
           Annotation[#, 4000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{103, 167, 110, 174, 120, 178, 126, 184, 134, 188, 139, 
              193, 144, 198, 149, 203, 155, 209, 163}]}, "3000"], 
           Annotation[#, 3000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{102, 166, 109, 173, 119, 177, 125, 183, 133, 187, 138, 
              192, 143, 197, 148, 202, 154, 208, 162}]}, "2000"], 
           Annotation[#, 2000, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{101, 165, 108, 172, 118, 176, 124, 182, 132, 186, 137, 
              191, 142, 196, 147, 201, 153, 207, 161}]}, "1000"], 
           Annotation[#, 1000, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1.075718544228778, -1.9795567040904134`}], 
        ArrowBox[{{1.075718544228778, -1.9795567040904134`}, {
         1.0773628311604364`, -1.9794138578827012`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7704911901717784, 
                0.2856176568371343, 0.05594091410545345}}, {{
                0.8098243514602361, 0.3553684892715998, 
                0.09325860855885133}}, {{0.8491575127486939, 
                0.42511932170606537`, 0.1305763030122492}}, {{
                0.8913689997809195, 0.541123200414328, 
                0.25982874413001655`}}, {{0.9336821990284203, 
                0.6587615361710738, 0.3923299095328091}}, {{
                0.9759953982759212, 0.7763998719278198, 
                0.5248310749356019}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.00000000000001}, {
                  7.500000000000001, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -67.50000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -67.50000000000001}]}, {{
                    7.500000000000001, -22.500000000000004`}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -22.500000000000004`}]}, {{
                    7.500000000000001, 22.500000000000004`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    22.500000000000004`}]}, {{7.500000000000001, 
                    67.49999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    67.49999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -67.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -22.500000000000004`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    22.500000000000004`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["7000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    67.49999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.954709961727322`", ",", "7067.307652245101`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "1000.`", ",", "2000.`", ",", "3000.`", ",", "4000.`", ",", 
                 "5000.`", ",", "6000.`", ",", "7000.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
eDJx
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{55, 66, 65}, {50, 39, 40}, {49, 38, 39}, {78, 67, 
              68}, {47, 36, 37}, {52, 41, 42}, {54, 43, 44}, {55, 44, 45}, {
              45, 34, 35}, {53, 42, 43}, {44, 33, 34}, {48, 37, 38}, {42, 53, 
              52}, {58, 47, 48}, {33, 44, 43}, {32, 43, 42}, {177, 76, 250}, {
              39, 50, 49}, {38, 49, 48}, {44, 55, 54}, {41, 52, 51}, {43, 54, 
              53}, {34, 45, 44}, {43, 32, 33}, {151, 33, 234}, {76, 65, 66}, {
              63, 52, 53}, {68, 57, 58}, {64, 53, 54}, {74, 63, 64}, {62, 51, 
              52}, {69, 58, 59}, {59, 48, 49}, {67, 56, 57}, {42, 31, 32}, {
              65, 54, 55}, {70, 59, 60}, {152, 34, 235}, {144, 28, 229}, {149,
               32, 233}, {66, 55, 56}, {56, 45, 46}, {156, 40, 239}, {153, 35,
               236}, {46, 35, 36}, {57, 46, 47}, {36, 47, 46}, {37, 48, 47}, {
              45, 56, 55}, {250, 76, 165}, {35, 46, 45}, {252, 78, 168}, {181,
               78, 252}, {167, 69, 245}, {160, 74, 173}, {248, 74, 162}, {163,
               76, 177}, {157, 62, 241}, {143, 26, 139}, {227, 26, 140}, {28, 
              39, 38}, {158, 61, 240}, {147, 28, 144}, {26, 37, 36}, {229, 28,
               145}, {31, 42, 41}, {166, 78, 181}, {60, 49, 50}, {139, 26, 
              227}, {56, 67, 66}, {173, 74, 248}, {52, 63, 62}, {59, 70, 
              69}, {48, 59, 58}, {54, 65, 64}, {57, 68, 67}, {53, 64, 63}, {
              49, 60, 59}, {46, 57, 56}, {47, 58, 57}, {58, 69, 68}, {51, 62, 
              61}}], 
             
             PolygonBox[{{234, 33, 32, 149}, {240, 61, 62, 157}, {241, 62, 63,
               159}, {233, 32, 31, 150}, {245, 69, 70, 169}, {242, 64, 65, 
              161}, {237, 36, 35, 153}, {140, 26, 36, 237}, {236, 35, 34, 
              152}, {165, 76, 66, 243}, {243, 66, 67, 164}, {162, 74, 64, 
              242}, {168, 78, 68, 244}, {164, 67, 78, 166}, {235, 34, 33, 
              151}, {244, 68, 69, 167}, {161, 65, 76, 163}, {238, 38, 37, 
              154}, {154, 37, 26, 143}, {159, 63, 74, 160}, {155, 39, 28, 
              147}, {145, 28, 38, 238}, {239, 40, 39, 155}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7888729944339772, 0.31821473540737427`, 0.07338081805642829], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwt0ctKQlEUxvGtIjQMITWkoBfoNTIkkpBw3AMUNWpSAweiIkiYlUnYxe4Q
IlFOnDjzBRw00RppaaV2mUX/w/kGP/bisPbea39nZmVtadVpjJmFCylM4gVO
hzER1jKe4ME2NjGOddxiDj94xCL+UMQ8BvjS9yvtsfY2xao3cIMgfnGk+hMH
8KOHPUygi5jm2UIWUyjgDCGcYIQFnONCdQlD9ZziHQHsoK+3p1HBMurIqOcQ
Y2QSZa3iztj51OB22P33eDB2TwM5ePGqmUK6/1j5FLU/orzrutc671K5Wfld
I4xvxHVmC0nl84wEfGhjX/UbdjGNjmaK6h0lZTLS2wLKI68c+srXo/9fUM4f
+Aeyskl1
              "]], 
             
             PolygonBox[{{177, 86, 75, 163}, {239, 29, 30, 156}, {254, 79, 80,
               185}, {146, 29, 18, 130}, {141, 27, 16, 120}, {241, 73, 72, 
              157}, {245, 80, 79, 167}, {181, 88, 77, 166}, {232, 30, 29, 
              146}, {240, 72, 71, 158}, {246, 71, 72, 170}, {247, 72, 73, 
              172}, {224, 23, 22, 134}, {144, 18, 29, 147}, {179, 77, 88, 
              182}, {173, 84, 73, 160}, {236, 24, 25, 153}, {175, 75, 86, 
              178}, {223, 22, 21, 135}, {233, 21, 22, 149}, {225, 24, 23, 
              136}, {235, 23, 24, 152}, {226, 25, 24, 137}, {172, 73, 84, 
              174}, {139, 16, 27, 143}, {234, 22, 23, 151}}], 
             
             PolygonBox[{{126, 18, 144, 229, 230}, {176, 84, 173, 248, 249}, {
              228, 227, 140, 25, 138}, {184, 88, 181, 252, 253}, {230, 229, 
              145, 27, 141}, {180, 86, 177, 250, 251}, {251, 250, 165, 77, 
              179}, {114, 16, 139, 227, 228}, {253, 252, 168, 79, 183}, {249, 
              248, 162, 75, 175}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8419319921470834, 0.4123060603198619, 0.12372102463530484`], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwt0MsKQVEUgOF9KAPXAWPlkZDEUCklFG8guQ3PY0gIuT+CCTIwccvAE5Dk
8q9ag6+zBruz/7UjmVKs6DDGhOFEHwm80EEMDzThwwUTJDFCAQHscdO5jAY8
OGGNFNyWMVOdP0rmGZaI4oce4ugqmZ+YI40vWvDjiqE2S3tOO7fIwouNtkrz
GzWEcERe/7PDQvc1dNp8grijrXvJfge4UMFK2yzOV/W8rXfIXWPUteGsbyqd
A/wBveUxwg==
              "]], 
             PolygonBox[CompressedData["
1:eJwt0D9LQmEUx/HrnyFKa7CtqZfUDQmb5IIiCLnaUFaDaKCTr0K3BoNQA8VB
h8DEpSD/DF5fgW7a93B/wwcOz3mec55zLr2Cexd2HOcCUfhYo4Y6/nCOBJ6x
xy1SeMcWLq7Qwg7XOmvCCQWxnXXwjThiyGCi+ARZTHGqOzkch4Je1vMLB/Wy
mh/oI40k3jDEDTyM8amc3RloJputiHvM1dv+UEYPXYTpG0GJ+FE78bUD28UR
njBSL+vZxoNyducFM5xppjx+8aOaVnupWS1fxUZvbecNrJSzGq9Y6K/2poJ/
YB4znQ==
              "]], 
             
             PolygonBox[{{205, 98, 201, 264, 265}, {121, 120, 113, 6, 217}, {
              265, 264, 184, 89, 204}, {259, 258, 176, 85, 191}, {199, 96, 
              194, 261, 262}, {262, 261, 180, 87, 197}, {122, 8, 125, 218, 
              219}, {257, 83, 174, 189, 190}, {111, 6, 113, 214, 215}, {215, 
              214, 114, 15, 109}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8983618055860456, 0.5605644634673393, 0.28172628284352674`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{204, 99, 265}, {129, 9, 222}, {101, 2, 210}, {102, 
              1, 209}, {121, 17, 142}, {231, 17, 127}, {217, 17, 121}, {265, 
              99, 205}, {142, 17, 231}, {107, 4, 213}, {128, 9, 129}, {188, 
              93, 256}, {190, 94, 257}, {186, 92, 255}}], 
             
             PolygonBox[{{267, 266, 206, 207}, {123, 122, 219, 220}, {112, 
              111, 215, 216}, {192, 191, 195, 196}, {256, 93, 92, 186}, {216, 
              215, 109, 110}, {200, 199, 262, 263}, {260, 259, 191, 192}, {
              209, 1, 2, 101}, {255, 92, 91, 187}, {212, 211, 104, 105}, {257,
               94, 93, 188}, {263, 262, 197, 198}, {198, 197, 202, 203}}], 
             
             PolygonBox[{{105, 104, 210, 2, 103}, {118, 17, 217, 115, 116}, {
              110, 109, 213, 4, 108}, {106, 4, 107, 211, 212}, {220, 219, 127,
               17, 118}, {133, 132, 222, 9, 131}, {208, 99, 204, 266, 267}, {
              193, 94, 190, 259, 260}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9554407656432473, 0.719254281001086, 0.4604655146213124], 
           GraphicsGroupBox[{
             
             PolygonBox[{{260, 95, 193}, {196, 95, 192}, {110, 5, 216}, {207, 
              100, 267}, {203, 97, 198}, {263, 97, 200}, {267, 100, 208}, {
              108, 5, 110}, {131, 10, 133}, {103, 3, 105}, {192, 95, 260}, {
              198, 97, 263}, {216, 5, 112}, {212, 3, 106}, {105, 3, 212}}], 
             
             PolygonBox[{{119, 118, 116, 117}, {221, 220, 118, 119}, {124, 
              123, 220, 221}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{117, 7, 119}, {119, 7, 221}, {221, 7, 
              124}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{124, 221, 119, 117}]}, "250"], 
           Annotation[#, 250, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{103, 105, 212, 106}], 
             LineBox[{108, 110, 216, 112}], 
             LineBox[{133, 131}], 
             LineBox[{193, 260, 192, 196}], 
             LineBox[{200, 263, 198, 203}], 
             LineBox[{208, 267, 207}], 
             LineBox[{116, 118, 220, 123}]}, "200"], 
           Annotation[#, 200, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{102, 209, 101, 210, 104, 211, 107, 213, 109, 215, 111}], 
             LineBox[{115, 217, 121, 142, 231, 127, 219, 122}], 
             LineBox[{128, 129, 222, 132}], 
             LineBox[{187, 255, 186, 256, 188, 257, 190, 259, 191, 195}], 
             LineBox[{202, 197, 262, 199}], 
             LineBox[{205, 265, 204, 266, 206}]}, "150"], 
           Annotation[#, 150, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{135, 223, 134, 224, 136, 225, 137, 226, 138, 228, 114, 
              214, 113, 120, 141, 230, 126, 218, 125, 130, 146, 232, 148}], 
             LineBox[{171, 246, 170, 247, 172, 174, 189, 258, 176, 249, 175, 
              178, 194, 261, 180, 251, 179, 182, 201, 264, 184, 253, 183, 254,
               185}]}, "100"], Annotation[#, 100, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{150, 233, 149, 234, 151, 235, 152, 236, 153, 237, 140, 
              227, 139, 143, 154, 238, 145, 229, 144, 147, 155, 239, 156}], 
             
             LineBox[{158, 240, 157, 241, 159, 160, 173, 248, 162, 242, 161, 
              163, 177, 250, 165, 243, 164, 166, 181, 252, 168, 244, 167, 245,
               169}]}, "50"], Annotation[#, 50, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{-1.9795567040904134`, -0.01692130149525447}], 
        ArrowBox[{{-1.9795567040904134`, -0.01692130149525447}, \
{-1.9794138578827012`, -0.01910881420867543}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7888729944339772, 
                0.3182147354073743, 0.07338081805642829}}, {{
                0.8419319921470835, 0.41230606031986194`, 
                0.12372102463530484`}}, {{0.8983618055860456, 
                0.5605644634673395, 0.28172628284352685`}}, {{
                0.9554407656432473, 0.719254281001086, 
                0.46046551462131236`}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.00000000000001}, {
                  7.500000000000001, 90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -60.000000000000014`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -60.000000000000014`}]}, {{
                    7.500000000000001, -30.000000000000018`}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -30.000000000000018`}]}, {{
                    7.500000000000001, -1.388976903136683*^-14}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -1.388976903136683*^-14}]}, {{
                    7.500000000000001, 29.999999999999975`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    29.999999999999975`}]}, {{7.500000000000001, 
                    59.99999999999998}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    59.99999999999998}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -60.000000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -30.000000000000018`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -1.388976903136683*^-14}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.999999999999975`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    59.99999999999998}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2.115100390529653`", ",", "264.0329766976288`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "50.`", ",", "100.`", ",", "150.`", ",", "200.`", ",", 
                 "250.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411361395893`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 2.28723290307542*^-19], 
           GraphicsGroupBox[{
             
             PolygonBox[{{61, 15, 80}, {62, 9, 146}, {18, 7, 8}, {118, 24, 
              182}, {24, 15, 16}, {16, 5, 6}, {83, 17, 151}, {15, 4, 5}, {85, 
              18, 154}, {182, 24, 84}, {5, 16, 15}, {17, 6, 7}, {82, 24, 
              118}, {58, 4, 59}, {154, 18, 63}, {6, 17, 16}, {7, 18, 17}}], 
             
             PolygonBox[{{84, 24, 16, 150}, {145, 8, 9, 62}, {151, 17, 18, 
              85}, {146, 9, 10, 64}, {150, 16, 17, 83}, {59, 4, 15, 61}, {80, 
              15, 24, 82}, {63, 18, 8, 145}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7654746715395928, 0.2767216937602833, 0.051181446434834], 
           GraphicsGroupBox[{
             
             PolygonBox[{{50, 2, 51}, {60, 14, 76}, {61, 14, 59}, {82, 23, 
              80}, {129, 25, 189}, {150, 25, 84}, {112, 23, 162}, {90, 19, 
              174}, {81, 23, 112}, {62, 19, 145}, {145, 19, 63}, {83, 25, 
              150}, {174, 19, 66}, {189, 25, 88}, {51, 2, 144}}], 
             
             PolygonBox[{{59, 14, 3, 58}, {80, 23, 14, 61}, {144, 2, 3, 56}, {
              119, 118, 182, 183}, {56, 3, 14, 60}, {147, 146, 64, 65}, {76, 
              14, 23, 81}, {86, 85, 154, 155}, {152, 151, 85, 86}}], 
             
             PolygonBox[{{183, 182, 84, 25, 129}, {66, 19, 62, 146, 147}, {
              155, 154, 63, 19, 90}, {88, 25, 83, 151, 152}, {162, 23, 82, 
              118, 119}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8025421507365673, 0.34245471509754616`, 0.08634955440067628], 
           GraphicsGroupBox[{
             
             PolygonBox[{{56, 13, 144}, {60, 13, 56}, {77, 22, 107}, {81, 22, 
              76}, {54, 1, 143}, {107, 22, 161}, {57, 13, 71}, {65, 20, 
              147}, {147, 20, 66}}], 
             
             PolygonBox[{{113, 112, 162, 163}, {153, 152, 86, 87}, {76, 22, 
              13, 60}, {190, 189, 88, 89}, {91, 90, 174, 175}, {87, 86, 155, 
              156}, {89, 88, 152, 153}, {120, 119, 183, 184}, {184, 183, 129, 
              130}, {163, 162, 119, 120}, {156, 155, 90, 91}, {130, 129, 189, 
              190}, {71, 13, 22, 77}}], 
             
             PolygonBox[{{143, 1, 50, 51, 52}, {175, 174, 66, 20, 100}, {52, 
              51, 144, 13, 57}, {161, 22, 81, 112, 113}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8396096299335415, 0.408187736434809, 0.12151766236651856`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{53, 12, 67}, {114, 28, 139}, {135, 26, 195}, {87, 
              26, 153}, {199, 28, 125}, {195, 26, 96}, {113, 28, 161}, {153, 
              26, 89}, {52, 12, 143}, {139, 28, 199}, {67, 12, 148}, {57, 12, 
              52}}], 
             
             PolygonBox[{{92, 91, 175, 176}, {72, 71, 77, 78}, {157, 156, 91, 
              92}, {131, 130, 190, 191}, {164, 163, 120, 121}, {185, 184, 130,
               131}, {78, 77, 107, 108}, {121, 120, 184, 185}, {176, 175, 100,
               101}}], 
             
             PolygonBox[{{108, 107, 161, 28, 114}, {55, 54, 143, 12, 53}, {96,
               26, 87, 156, 157}, {148, 12, 57, 71, 72}, {125, 28, 113, 163, 
              164}, {191, 190, 89, 26, 135}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8786603918444289, 0.5057909751507885, 0.22003252469544737`], 
           GraphicsGroupBox[{
             PolygonBox[{{53, 11, 55}, {168, 11, 171}}], 
             
             PolygonBox[{{140, 139, 199, 200}, {192, 191, 135, 136}, {126, 
              125, 164, 165}, {122, 121, 185, 186}, {109, 108, 114, 115}, {
              186, 185, 131, 132}, {136, 135, 195, 196}, {132, 131, 191, 
              192}, {79, 78, 108, 109}, {158, 157, 92, 93}, {196, 195, 96, 
              97}, {73, 72, 78, 79}, {93, 92, 176, 177}, {200, 199, 125, 
              126}, {149, 148, 72, 73}, {115, 114, 139, 140}, {177, 176, 101, 
              102}, {165, 164, 121, 122}, {68, 67, 148, 149}, {97, 96, 157, 
              158}}], 
             PolygonBox[{{171, 11, 53, 67, 68}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9185362518436206, 0.6166530676088757, 0.3449013130474312], 
           GraphicsGroupBox[{
             
             PolygonBox[{{79, 21, 73}, {73, 21, 149}, {74, 21, 105}, {105, 21,
               180}}], 
             
             PolygonBox[{{94, 93, 177, 178}, {193, 192, 136, 137}, {166, 165, 
              122, 123}, {197, 196, 97, 98}, {169, 168, 171, 172}, {187, 186, 
              132, 133}, {116, 115, 140, 141}, {172, 171, 68, 69}, {159, 158, 
              93, 94}, {137, 136, 196, 197}, {201, 200, 126, 127}, {127, 126, 
              165, 166}, {98, 97, 158, 159}, {178, 177, 102, 103}, {123, 122, 
              186, 187}, {141, 140, 200, 201}, {133, 132, 192, 193}, {110, 
              109, 115, 116}}], 
             PolygonBox[{{69, 68, 149, 21, 74}, {180, 21, 79, 109, 110}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9584121118428122, 0.7275151600669627, 0.4697701013994149], 
           GraphicsGroupBox[{
             
             PolygonBox[{{181, 180, 110, 111}, {134, 133, 193, 194}, {70, 69, 
              74, 75}, {170, 169, 172, 173}, {138, 137, 197, 198}, {128, 127, 
              166, 167}, {99, 98, 159, 160}, {160, 159, 94, 95}, {202, 201, 
              127, 128}, {95, 94, 178, 179}, {106, 105, 180, 181}, {111, 110, 
              116, 117}, {167, 166, 123, 124}, {117, 116, 141, 142}, {198, 
              197, 98, 99}, {179, 178, 103, 104}, {194, 193, 137, 138}, {173, 
              172, 69, 70}, {188, 187, 133, 134}, {124, 123, 187, 188}, {75, 
              74, 105, 106}, {142, 141, 201, 202}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{95, 27, 160}, {124, 29, 167}, {160, 27, 99}, {167, 
              29, 128}}], 
             
             PolygonBox[{{194, 47, 38, 134}, {134, 38, 46, 188}, {104, 33, 44,
               179}, {173, 43, 31, 170}, {138, 40, 47, 194}, {111, 36, 45, 
              181}, {70, 30, 43, 173}, {117, 37, 36, 111}, {181, 45, 35, 
              106}, {106, 35, 32, 75}, {202, 49, 41, 142}, {142, 41, 37, 
              117}, {75, 32, 30, 70}, {99, 27, 48, 198}, {198, 48, 40, 138}}], 
             
             PolygonBox[{{179, 44, 34, 27, 95}, {128, 29, 42, 49, 202}, {188, 
              46, 39, 29, 124}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{170, 173, 70, 75, 106, 181, 111, 117, 142, 202, 128, 
              167, 124, 188, 134, 194, 138, 198, 99, 160, 95, 179, 104}]}, 
            "1.4`"], Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{103, 178, 94, 159, 98, 197, 137, 193, 133, 187, 123, 
              166, 127, 201, 141, 116, 110, 180, 105, 74, 69, 172, 169}]}, 
            "1.2`"], Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{102, 177, 93, 158, 97, 196, 136, 192, 132, 186, 122, 
              165, 126, 200, 140, 115, 109, 79, 73, 149, 68, 171, 168}]}, 
            "1"], Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{55, 53, 67, 148, 72, 78, 108, 114, 139, 199, 125, 164, 
              121, 185, 131, 191, 135, 195, 96, 157, 92, 176, 101}]}, "0.8`"],
            Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{100, 175, 91, 156, 87, 153, 89, 190, 130, 184, 120, 163,
               113, 161, 107, 77, 71, 57, 52, 143, 54}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{50, 51, 144, 56, 60, 76, 81, 112, 162, 119, 183, 129, 
              189, 88, 152, 86, 155, 90, 174, 66, 147, 65}]}, "0.4`"], 
           Annotation[#, 0.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{58, 59, 61, 80, 82, 118, 182, 84, 150, 83, 151, 85, 154,
               63, 145, 62, 146, 64}]}, "0.2`"], 
           Annotation[#, 0.2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{-0.01692130149525447, 1.075718544228778}], 
        ArrowBox[{{-0.01692130149525447, 
         1.075718544228778}, {-0.01910881420867543, 
         1.0773628311604364`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7654746715395928, 
                0.2767216937602833, 0.051181446434834}}, {{0.8025421507365672,
                 0.34245471509754616`, 0.08634955440067628}}, {{
                0.8396096299335416, 0.408187736434809, 
                0.12151766236651856`}}, {{0.8786603918444289, 
                0.5057909751507885, 0.22003252469544737`}}, {{
                0.9185362518436206, 0.6166530676088756, 
                0.3449013130474311}}, {{0.9584121118428122, 
                0.7275151600669627, 0.4697701013994149}}, {{1., 0.843137, 
                0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.}, {7.5, 90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{
                    7.5, -22.499999999999986`}, 
                    Offset[{4., 0}, {7.5, -22.499999999999986`}]}, {{7.5, 
                    22.500000000000014`}, 
                    Offset[{4., 0}, {7.5, 22.500000000000014`}]}, {{7.5, 
                    67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.499999999999986`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.500000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.008932613124681204`", ",", "1.5085867898925858`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2`", ",", "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", 
                 ",", "1.2`", ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
a+s=
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 4.57446580615084*^-19], 
           GraphicsGroupBox[{
             
             PolygonBox[{{7, 1, 2}, {43, 37, 38}, {17, 11, 12}, {42, 36, 
              37}, {37, 31, 32}, {38, 32, 33}, {103, 30, 112}, {144, 4, 70}, {
              156, 12, 84}, {47, 41, 42}, {8, 2, 3}, {68, 4, 144}, {163, 25, 
              197}, {6, 12, 11}, {112, 30, 222}, {30, 24, 25}, {32, 26, 27}, {
              1, 7, 6}, {22, 16, 17}, {48, 42, 43}, {27, 21, 22}, {184, 44, 
              128}, {28, 22, 23}, {2, 8, 7}, {177, 39, 124}, {33, 27, 28}, {
              152, 8, 69}, {170, 28, 102}, {12, 6, 7}, {44, 38, 39}, {197, 25,
               97}, {222, 30, 104}, {38, 44, 43}, {22, 28, 27}, {36, 42, 
              41}, {11, 17, 16}, {41, 47, 46}, {21, 27, 26}, {26, 32, 31}, {
              83, 8, 152}, {16, 22, 21}, {17, 23, 22}, {135, 44, 184}, {27, 
              33, 32}, {37, 43, 42}, {96, 24, 160}, {42, 48, 47}, {32, 38, 
              37}, {33, 39, 38}, {31, 37, 36}, {97, 25, 161}, {124, 39, 
              121}}], 
             
             PolygonBox[{{143, 3, 4, 68}, {151, 7, 8, 83}, {128, 44, 39, 
              177}, {91, 17, 12, 156}, {160, 24, 23, 95}, {104, 30, 25, 
              163}, {69, 8, 3, 143}, {84, 12, 7, 151}, {121, 39, 33, 111}, {
              136, 48, 43, 183}, {95, 23, 17, 91}, {102, 28, 23, 162}, {161, 
              25, 24, 96}, {101, 24, 30, 103}, {111, 33, 28, 170}, {162, 23, 
              24, 101}, {183, 43, 44, 135}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7637204243666658, 0.27361082759546834`, 0.04951708847705546], 
           GraphicsGroupBox[{
             
             PolygonBox[{{157, 14, 88}, {103, 29, 101}, {170, 34, 111}, {68, 
              9, 143}, {175, 34, 117}, {162, 29, 102}, {145, 5, 71}, {135, 49,
               183}, {13, 19, 18}, {183, 49, 136}, {156, 18, 91}, {210, 10, 
              77}, {151, 13, 84}, {111, 34, 121}, {91, 18, 95}, {83, 13, 
              151}, {19, 13, 14}, {101, 29, 162}, {143, 9, 69}, {96, 19, 
              161}, {85, 10, 210}, {95, 18, 160}}], 
             
             PolygonBox[{{69, 9, 14, 152}, {102, 29, 34, 170}, {153, 9, 10, 
              85}, {164, 163, 197, 198}, {70, 5, 10, 144}, {185, 184, 128, 
              129}, {178, 177, 124, 125}, {84, 13, 18, 156}, {160, 18, 19, 
              96}, {88, 14, 9, 153}, {152, 14, 13, 83}, {113, 112, 222, 
              223}, {198, 197, 97, 98}, {117, 34, 29, 171}, {105, 104, 163, 
              164}, {129, 128, 177, 178}, {223, 222, 104, 105}, {92, 19, 14, 
              157}, {144, 10, 9, 68}, {77, 10, 5, 145}}], 
             
             PolygonBox[{{171, 29, 103, 112, 113}, {125, 124, 121, 34, 175}, {
              137, 49, 135, 184, 185}, {98, 97, 161, 19, 92}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8010685446042255, 0.33984151923318195`, 0.08495145718219722], 
           GraphicsGroupBox[{
             
             PolygonBox[{{185, 50, 137}, {186, 45, 130}, {178, 45, 129}, {130,
               45, 127}}], 
             
             PolygonBox[{{158, 157, 88, 89}, {89, 88, 153, 154}, {93, 92, 157,
               158}, {78, 77, 145, 146}, {172, 171, 113, 114}, {138, 50, 45, 
              186}, {199, 198, 98, 99}, {224, 223, 105, 106}, {114, 113, 223, 
              224}, {146, 145, 71, 72}, {106, 105, 164, 165}, {99, 98, 92, 
              93}, {165, 164, 198, 199}, {126, 125, 175, 176}, {86, 85, 210, 
              211}, {154, 153, 85, 86}, {176, 175, 117, 118}, {118, 117, 171, 
              172}, {129, 45, 50, 185}, {211, 210, 77, 78}}], 
             PolygonBox[{{127, 45, 178, 125, 126}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8384166648417853, 0.4060722108708957, 0.12038582588733898`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{176, 40, 126}, {126, 40, 127}, {179, 40, 206}, {206,
               40, 122}}], 
             
             PolygonBox[{{100, 99, 93, 94}, {107, 106, 165, 166}, {115, 114, 
              224, 225}, {87, 86, 211, 212}, {200, 199, 99, 100}, {166, 165, 
              199, 200}, {225, 224, 106, 107}, {119, 118, 172, 173}, {173, 
              172, 114, 115}, {79, 78, 146, 147}, {90, 89, 154, 155}, {155, 
              154, 86, 87}, {139, 138, 186, 187}, {94, 93, 158, 159}, {212, 
              211, 78, 79}, {159, 158, 89, 90}, {187, 186, 130, 131}, {147, 
              146, 72, 73}}], 
             
             PolygonBox[{{131, 130, 127, 40, 179}, {122, 40, 176, 118, 
              119}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8776789464662562, 0.5030623797484637, 0.2169591892185808], 
           GraphicsGroupBox[{
             
             PolygonBox[{{216, 15, 191}, {159, 20, 94}, {87, 15, 155}, {219, 
              20, 194}, {155, 15, 90}, {94, 20, 100}}], 
             
             PolygonBox[{{132, 131, 179, 180}, {148, 147, 73, 74}, {140, 139, 
              187, 188}, {120, 119, 173, 174}, {194, 20, 15, 216}, {108, 107, 
              166, 167}, {90, 15, 20, 159}, {80, 79, 147, 148}, {213, 212, 79,
               80}, {123, 122, 119, 120}, {188, 187, 131, 132}, {180, 179, 
              206, 207}, {116, 115, 225, 226}, {207, 206, 122, 123}, {226, 
              225, 107, 108}, {167, 166, 200, 201}, {174, 173, 115, 116}}], 
             PolygonBox[{{201, 200, 100, 20, 219}, {191, 15, 87, 212, 
              213}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9178567099961666, 0.6147638185463324, 0.34277336979736056`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{229, 35, 204}, {116, 35, 174}, {120, 35, 123}, {174,
               35, 120}}], 
             
             PolygonBox[{{220, 219, 194, 195}, {168, 167, 201, 202}, {149, 
              148, 74, 75}, {133, 132, 180, 181}, {214, 213, 80, 81}, {217, 
              216, 191, 192}, {195, 194, 216, 217}, {192, 191, 213, 214}, {
              109, 108, 167, 168}, {202, 201, 219, 220}, {189, 188, 132, 
              133}, {141, 140, 188, 189}, {81, 80, 148, 149}, {181, 180, 207, 
              208}, {227, 226, 108, 109}}], 
             
             PolygonBox[{{208, 207, 123, 35, 229}, {204, 35, 116, 226, 
              227}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9580344735260771, 0.7264652573442013, 0.4685875503761403], 
           GraphicsGroupBox[{
             
             PolygonBox[{{215, 214, 81, 82}, {190, 189, 133, 134}, {205, 204, 
              227, 228}, {203, 202, 220, 221}, {169, 168, 202, 203}, {218, 
              217, 192, 193}, {209, 208, 229, 230}, {193, 192, 214, 215}, {
              230, 229, 204, 205}, {182, 181, 208, 209}, {228, 227, 109, 
              110}, {221, 220, 195, 196}, {110, 109, 168, 169}, {82, 81, 149, 
              150}, {150, 149, 75, 76}, {142, 141, 189, 190}, {134, 133, 181, 
              182}, {196, 195, 217, 218}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{169, 66, 110}, {182, 67, 134}, {190, 51, 142}, {150,
               65, 82}}], 
             
             PolygonBox[{{215, 60, 53, 193}, {221, 62, 55, 203}, {230, 64, 58,
               209}, {110, 66, 63, 228}, {218, 61, 54, 196}, {82, 65, 60, 
              215}, {228, 63, 57, 205}, {205, 57, 64, 230}, {76, 52, 65, 
              150}, {134, 67, 51, 190}, {196, 54, 62, 221}, {193, 53, 61, 
              218}}], 
             
             PolygonBox[{{209, 58, 59, 67, 182}, {203, 55, 56, 66, 
              169}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{142, 190, 134, 182, 209, 230, 205, 228, 110, 169, 203, 
              221, 196, 218, 193, 215, 82, 150, 76}]}, "1.4`"], 
           Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{75, 149, 81, 214, 192, 217, 195, 220, 202, 168, 109, 
              227, 204, 229, 208, 181, 133, 189, 141}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{74, 148, 80, 213, 191, 216, 194, 219, 201, 167, 108, 
              226, 116, 174, 120, 123, 207, 180, 132, 188, 140}]}, "1"], 
           Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{73, 147, 79, 212, 87, 155, 90, 159, 94, 100, 200, 166, 
              107, 225, 115, 173, 119, 122, 206, 179, 131, 187, 139}]}, 
            "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{72, 146, 78, 211, 86, 154, 89, 158, 93, 99, 199, 165, 
              106, 224, 114, 172, 118, 176, 126, 127, 130, 186, 138}]}, 
            "0.6`"], Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{71, 145, 77, 210, 85, 153, 88, 157, 92, 98, 198, 164, 
              105, 223, 113, 171, 117, 175, 125, 178, 129, 185, 137}]}, 
            "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{70, 144, 68, 143, 69, 152, 83, 151, 84, 156, 91, 95, 
              160, 96, 161, 97, 197, 163, 104, 222, 112, 103, 101, 162, 102, 
              170, 111, 121, 124, 177, 128, 184, 135, 183, 136}]}, "0.2`"], 
           Annotation[#, 0.2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1.075718544228778, -1.9795567040904134`}], 
        ArrowBox[{{1.075718544228778, -1.9795567040904134`}, {
         1.0773628311604364`, -1.9794138578827012`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7637204243666658, 
                0.27361082759546834`, 0.04951708847705546}}, {{
                0.8010685446042255, 0.339841519233182, 
                0.08495145718219722}}, {{0.8384166648417852, 
                0.4060722108708957, 0.12038582588733898`}}, {{
                0.8776789464662562, 0.5030623797484637, 
                0.21695918921858076`}}, {{0.9178567099961666, 
                0.6147638185463324, 0.34277336979736045`}}, {{
                0.9580344735260771, 0.7264652573442012, 
                0.4685875503761402}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -67.49999999999999}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -67.49999999999999}]}, {{
                    7.500000000000001, -22.5}, 
                    Offset[{4., 0}, {7.500000000000001, -22.5}]}, {{
                    7.500000000000001, 22.50000000000001}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    22.50000000000001}]}, {{7.500000000000001, 
                    67.49999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    67.49999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -67.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -22.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    22.50000000000001}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    67.49999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.02051378203404998`", ",", "1.5088992655984028`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2`", ",", "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", 
                 ",", "1.2`", ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{-1.9795567040904134`, -0.01692130149525447}], 
        ArrowBox[{{-1.9795567040904134`, -0.01692130149525447}, \
{-1.9794138578827012`, -0.01910881420867543}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.7393232, 0.2303464, 0.02637}}, {{0.7949116, 
                0.3289232, 0.07911000000000001}}, {{0.8505, 0.4275, 
                0.13185}}, {{0.9103, 0.5937547999999999, 
                0.31910999999999995`}}, {{0.9701, 0.7600096000000001, 
                0.50637}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.}, {7.5, 90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -54.}, 
                    Offset[{4., 0}, {7.5, -54.}]}, {{7.5, -18.}, 
                    Offset[{4., 0}, {7.5, -18.}]}, {{7.5, 
                    18.000000000000014`}, 
                    Offset[{4., 0}, {7.5, 18.000000000000014`}]}, {{7.5, 54.}, 
                    Offset[{4., 0}, {7.5, 54.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -54.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -18.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 18.000000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 54.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "0.8`"}], ",", 
                 RowBox[{"-", "0.6`"}], ",", 
                 RowBox[{"-", "0.4`"}], ",", 
                 RowBox[{"-", "0.2`"}], ",", "0.`", ",", "0.2`", ",", "0.4`", 
                 ",", "0.6`", ",", "0.8`", ",", "1.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411370351877`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinePlot", "[", 
  RowBox[{"debugParams", ",", 
   RowBox[{"Length", "[", "debugParams", "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.6830692319356985`*^9, 3.6830692410077477`*^9}, {
  3.683069288780509*^9, 3.6830693884828587`*^9}, {3.6830695073112*^9, 
  3.6830695356883616`*^9}, {3.683069599773278*^9, 3.683069663057469*^9}, {
  3.683069789201457*^9, 3.6830698576584196`*^9}, {3.683070163231711*^9, 
  3.6830702045470853`*^9}, {3.6830702361531553`*^9, 3.6830702640967865`*^9}, {
  3.68307035266383*^9, 3.683070352766901*^9}, {3.683070419108245*^9, 
  3.6830704319868298`*^9}, {3.683070465875395*^9, 3.6830705107849436`*^9}, {
  3.68307054256513*^9, 3.6830705500821414`*^9}, {3.683070588742916*^9, 
  3.6830706078446493`*^9}, {3.6830710863168488`*^9, 3.6830710973852262`*^9}, {
  3.6834826901238575`*^9, 3.6834827184722815`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1:eJy11v9TE2QcwPHHLQYjKMcAbYekzDPUSEQ9bmVOvSRdXu4MScNKdgLDOOAW
QnjCzAuBO65zBsObFO3Cyx0gOI2zL/p5kNrGvhAtCkm2kJx4GD6zL8pXn55/
YD88d/nD55fXD+8fnh8+n2eZpnh3rgAhdJCNkM3SvTvzC5op5LRZindPEqjt
Vk8UHe5XhvKtDyKuF7yC8K7Y5WWDbgJa6UBDb9kP3P76vaa3485RwIUly3Lu
E8iMTLeV9Xq4/VJTfN6rCoSzPpS/oPuFQEnzqV+LpLaQXi17Y6m5g0Ke6I93
W/8lEJ8arZ3L9Pxv7k2pOZCchvBqoa/NfINAVPfhsc5iW0j3L1bF2C9TaG0/
mKV5SODE4GnJyV43t19uUBs6UxB+bcuOml2jBN4MSp+Wm23cfmhzgqYeKGww
/hY1OUUgS7zBcDXXze3ZVkuh4TmEY7yKOwduEZh4sXJj37wtpGu6rUct1yiM
FZSOnJ4hYJJKzoelupV7SjZnPGJulDb7KmYJqNaLfV8kPX536dqNT6xAeDY2
Z2jlOAHPz4pP/Qvs3L4kjXa+ZaOwNxDuaGT9s2UnTgpnXdyeLzjScSMJYfGC
bTp8h8DGwPBgerqd21f1dElWeyjEpd6MULF+sCFv/+gFF7d3mNzZzyQi/HKc
PxB5l0DGphldoNYe0meLry+/NEAhtvKC4Rrr9PzUNLyo2qUkt482A/OvEkQ+
xRwBKpncptc/focviy5OJbC9ZBM01v9JAN+WoTMGO7d//1FaYNEghVxPMC+K
9VtjqlaYs13cnmxZF7FDhvAxy6Oe79i+ndunKfsG27ldM1XaHxym8K0/bLSF
vTMWpeV7E13cPmL2Hi+PR5hazMFCwvb2+neqfxQ6QrrEWufb5KPQN/NQhlmn
t2jl7+9PObl9dPv5hr/iEIbpxYXPBgk8KZgPOsMd3H58vuCzET+Fs/WRWj/r
69eWWyduObm9HPWZMmMRNp168N4468uu1q3LkTu43eX9PNo8RmFNSn22kfXb
qtbe7L/i5HaVK9nQJ0E40aT6eJrdwWThwucb1Q5u112puTcwTiH/pYghOevb
55LOtdc6uV1rFs9bn0JY6y3yb/2b/RPa9b6WGkdIN36g3L/wLoXtFVu6wlnn
ovOMui7Xye1LBOIuXzTCov6JPUOsj1dJwgOfOLh9TYuqSjRJobJCnzrN7k6Y
1e+Xq53cHn1M8fWhKIQ9pfd3VvxDwJBxBO/rcCj/AxuQNUk=
     "]]}, Line3DBox[CompressedData["
1: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
Gv0bhJpPoQ==
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Medium,
  PlotRange->{{-2.033405006192681, -1.9756864581190783`}, \
{-0.9995393101570672, -0.9937536532821784}, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.6522897425962575, 0.6436528780894057, -3.257334656468527},
  ViewVertical->{
   0.7125859228007416, -0.5482793938066337, -1.0943348692049377`}]], "Output",
 CellChangeTimes->{
  3.6830695367470675`*^9, {3.683069623332985*^9, 3.6830696495914907`*^9}, {
   3.683070166579464*^9, 3.683070268543749*^9}, 3.683070363702191*^9, {
   3.6830704110598774`*^9, 3.6830704345745564`*^9}, {3.6830704867158957`*^9, 
   3.683070511203221*^9}, {3.683070592611495*^9, 3.6830705951131606`*^9}, {
   3.683071082124053*^9, 3.6830710985640125`*^9}, 3.6830711414896326`*^9, 
   3.683071185518984*^9, 3.6830721021371555`*^9, {3.683482685901039*^9, 
   3.6834827187354584`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Last", "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RecordedSmoothnessComparisonData", "[", 
     RowBox[{"[", 
      RowBox[{"sm", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"sm", ",", "1", ",", 
      RowBox[{"Length", "@", "RecordedSmoothnessComparisonData"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RecordedSmoothnessComparisonData", "[", 
       RowBox[{"[", 
        RowBox[{"sm", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"sm", ",", "1", ",", 
        RowBox[{"Length", "@", "RecordedSmoothnessComparisonData"}]}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ToSpacedString", "@", 
             RowBox[{"RecordedSmoothnessComparisonData", "[", 
              RowBox[{"[", 
               RowBox[{"sm", ",", "1"}], "]"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ToSpacedString", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Final error:\>\"", ",", 
               RowBox[{"Last", "@", 
                RowBox[{"RecordedSmoothnessComparisonData", "[", 
                 RowBox[{"[", 
                  RowBox[{"sm", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], 
           "}"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"sm", ",", "1", ",", 
           RowBox[{"Length", "@", "RecordedSmoothnessComparisonData"}]}], 
          "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LegendFunction", "->", "\"\<Panel\>\""}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Inverse power of two gradient smoothing function with various \
length amounts\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Iterations\>\"", ",", "\"\<Error\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ")"}]}], "Input",
 CellChangeTimes->{{3.68354176658178*^9, 3.683541767117134*^9}, {
   3.6835430681030846`*^9, 3.6835430725340366`*^9}, {3.6835435344847717`*^9, 
   3.6835435812579727`*^9}, {3.6835436223694086`*^9, 
   3.6835437299741793`*^9}, {3.683543785355125*^9, 3.6835437916643305`*^9}, {
   3.683543882185715*^9, 3.683543921987266*^9}, {3.6835521130451317`*^9, 
   3.6835521800098057`*^9}, {3.6835522121252275`*^9, 3.683552364081595*^9}, {
   3.6835524035439186`*^9, 3.683552485126339*^9}, {3.683553052933615*^9, 
   3.6835530923639183`*^9}, {3.6835532902593145`*^9, 
   3.6835532915401692`*^9}, {3.6835533638423977`*^9, 
   3.6835533641846275`*^9}, {3.68355339530539*^9, 3.6835534359635096`*^9}, {
   3.6835534932297087`*^9, 3.6835534959275093`*^9}, {3.6835535285412655`*^9, 
   3.6835535650866437`*^9}, 3.6835536885690145`*^9, {3.6835540353483443`*^9, 
   3.6835540522846413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1011.4665846514861`", ",", "1.9532059501442383`", ",", 
   "289.8780594008312`", ",", "1.5865257923356848`", ",", 
   "1.0398197049109088`", ",", "1.0519535947424095`", ",", 
   "1.0675124767936692`", ",", "1.0755194915914057`", ",", 
   "1.083526949557357`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6835522287813387`*^9, 3.6835522994604845`*^9}, {
   3.6835523546092763`*^9, 3.683552364358779*^9}, {3.683552462688371*^9, 
   3.683552485568639*^9}, 3.6835526012052774`*^9, 3.6835526663597407`*^9, {
   3.6835530266560855`*^9, 3.683553093436634*^9}, 3.683553239940746*^9, 
   3.683553294545171*^9, {3.68355339899585*^9, 3.683553436228687*^9}, 
   3.6835534987213736`*^9, 3.6835535373231273`*^9, 3.6835536895046444`*^9, {
   3.6835540376398745`*^9, 3.6835540536205335`*^9}, 3.683554156537191*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
S/kyDVE/I2wDYZUjMza0xdHQyYZTO6u2Fyz4XaH3rxB/PkwK/fmiF+bF6eSH
JJP8+JDEdanshYn9KbxVKSReM1y0bZ/3gmbVpJm0mzT0OwQt9k96QTywI6Qj
jYbls004+o97IbdZpyPrFg0zrMrDfR+S+6sMrvfLIvmZv6mtPq8X+A+vt8++
S+rvsOYl3buEtxeE9eXSsOtR0pkjt3ph0YqPWHCfhkqdTaWTb/RC2uQU7f0F
NJwVv/nPnKReyN57nW7yiIZtdk4bJhKmrNlpxi4m+Wgbyrh6uRfMa04eu1FK
w/YXTOaeS72gnerHWV9Ow6uve2YtudgLB+PzTihW0HDzhCLrexG9sHVVGZZV
Er3yMxOzz/SC7D7leX41RK+a+Q9EIb0wWKzsql1LQ3h+t+nv0V4I+jP1ft0r
GoZIBTX4BvZC4LwX1kH1JH8rFyTM9++F8wkrZPXe0dA0XNns+q5eSE1QUHj5
nob26SvVLbx6Ifq3p53fJ9JPfMuWvvUk13/JqFVvIflykrenfWMvjFTrXXz4
heTLXBmlO+69cChfN9blG4mvgo/pnfW98IjBbu9vp2FcIj/uxLpe6JYpPhTb
SfLbxrJcfU0vGCk2uM3qpqGlw/onrXa9MLbXO6KWQ8NfZ/FGyLJeqNDKkffq
Ifn0UG4VA3ohK+djy28BDctmdh9SXNQLfUnKo5EiGjquONr5em4vVGsdPqrf
R8MPqxcOmJr2gmi2hUNBPw3nn79XeG9WL/x7fk/DlL7ERaum9UKKOsg1DtGw
eOEBK7mpvTAruUC0ZZiG/WpbW45P7oVPm74v4o2SeE59SD8zqRfu2X1hH5Cm
4/FrH49sYvWC6847g3/G0fHU6V85mYxe6Pq6LuCUHB23jOyJSdfqhTNjX9fJ
KdKRO9E9ap4qyZcNtjfPK9NxfrBMR6tSL6zKuuCmrEJHu8Wai1fL9kKBVHro
RTU63o96VWI6JoStz0MZSpp03KE9+1XaHyHsTqcZhVPoGDwjRP0qYdUK59sy
dDpOPjq+r+unEJ6k66YcZ9LxndtCw/mEG1Z4KP/SpmPdc/9LXKEQPGb86vfR
o+PyYK1GQ8KfVlVu/D6JjiUvs2eYc4QQbJW22MWQjgM37Sr+dAmh1WBv+ssp
xB+NjwHaHUKYVCcJN59OR8W04LlzvgjB9pqiJMuYjmmK1ldyPwph0eOT7ZRZ
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
wsm3G/4Pa8ZOtA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9m3k4Vd/3xw2Zy+yOhigaqJSUSGuVCGVOkZIypEEoMlRCA4qQJkJRSSUy
hJJS0kxpQMSdZ40kIn7n8/T8vv3T83r2OWfvtd7vtfZ277mGW8M9g2WkpKRE
slJS//3////i011Lsnvp+G3Jn/EVc/mgm22ZcMlVF1Vkb8WLc35ATUPDtkiC
/40Pge8KB6v/2CLjy+/lTSOgsMyC9B/LTJ39R+XmGMzaePl7BMHrNywo32M0
AXn58579x3tv2kBVsRSGDgTmRvzv+dI4d1djyH9M8r7TULlTBqOWls79j9cs
PlTHmSuLQ4MHvocTfLDw/X0SSxbTWg7e/I890uebTjo6CY8av/f/j681dJJe
6srhbXGK0n9s4OiyhHRDDnsrj9zY/b/1y+PR6OP4H8cf+vNo5w15lDcxexlG
8LHsndb7DRRwWOWZ/X9sVj1JftFJBbQrj6vcRXA2Z+/+Fb8VsJpNUfmPK8vD
T8/1U0S5s0buOwl+3mIbE3VPEctrbx3cQfD36va/B3WU0OHQuqztBI+YnTpw
bZcSftY3ORL6v/wpoXdI1NptBLfSvotPqyvj9tJHo8EEZx2RrWdsUsYAl2N7
gwie5ny2Y0OpMspdGaze+l98462vrL4ro5l6aXUAwRc6VEZKLFVQ6pL1Nn+C
N5hmO7bFqqCzuLbJj+Cdz+sfvL+rgiHQWe5DcHv9x8GuYRVsyh2lexM8NOVu
0pjlZNx9oLrfneCWATWvDZGT8Vj1lb+r/6fvZDSMiZ7qQHDjM+uvMzmT8dW9
aWQguHR5c8tT6hTMMnySvojgjimpoSOuU5C0rVXJjOApexbYvE+egke3BDH1
CXYtO2kffIcYf7pPSZXgObZz1z7kT0HVK9/Zv110UaNfm/SdpIoOdknXPxFs
t3ZskZyDKrZmyjqVE3zlxeV9KlGqGFExyWEnwbtWZDWqFqni/ubjn4fW6GLt
96x5tFZVzPV6cHN0tS5GN7gvtRpWRVbpxRAfx//3pxp+Zm4oaPehYwW9rO7d
ajUc+x4xmy1Hwwkpj4mAKDXcKW/VLAqnotP18hvG+Wqop+NVvf0sBW8uNQqd
2ayG31fYaFnnkHCy1uOYCJEaMuT97s2+q40D4/d8kxXU8Yrfz7/m9drovmv2
q19UdVRyykguCtFA37xbRTpm6shi3nY5c3IKujg8beHaquPlaL3FxjNlMW7W
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
DW3jvOTAmnq0n3WeqP+k7f65Tznw2WsfqTeXioUbii9/fMSB6lMJc7MuUPHl
SaM/dfc58ObkUMaKAireX35meFU9B3Lz4i0HC6lo6unoWVHHgfkrSoyvXqLi
p8oVkYtrONC8RnuzdzEVzUIXliRWcuB1oz970hVCj9iWL6oVHAjt0L9dfZXI
z/6rPM8yDpwnfXm+5RoV9z68peZ3ncjfsi1z1K5TcWnUoFdACQceuGn2Ndwg
6pO99JHsZQ4knTzbs62M8EfCkvA1FzkgTj5solVORZk8+VjzCxxY9CfsYWMF
0c9/ZnXfOMuBXwrikm2VhP/5CyU3sjmwXOFEr3o1FXdNIttZpXOg/wIn8G4N
Fed+rdOTSeFAXfVR6y21VNzTIApsOMaBfSkyWxXrqajzcrVLRDIHMF/cXX6X
qBejKDibyIFzT1qvrm2gYrLAwt38IAfSDW2aR+4T/YJ6S1AVzwHOtEcWhQ+o
GCshv/OP4cC/96+oWFaXZvdrLweUIl3UeY+oGHxh2WvnCA5MWIYdTGmm4ptF
9AMrd3Gg62wXzGqhIlcydd3TbRzIv0zzefmUit6M/GrWVg6UPG58uuM5FZXN
5HeZ+HPgYeXqdOWXVJTMkD+qQPCcFJfr119RsX3mbMFeXw40Vq3Wd2yl4njU
Qf+H6znQPd4q4bVRcf69qYyZazmQme2nefgtFW/qNsaWeXDg9Jf4UwbvqKjt
vr7ey5UDawcqdzW8J/I7FOzX7syBAdbRonUfiXhGkrdqrOKAq8/++T86iP1s
oP7r3xUcGPcm6Z3oouKUClWt+GUc8F7aHTS9m4oTHlsPX13CgY1vnJQae6gY
uFSLm29J+GWRQNm7l4qP2hYXniRYecJiR38fFa8WF6xzms8BCq1yxmEm0W99
DFe1z+VANrPPjsqmYtyIwetBU0IPTduH5RwqHg/QLfCfxYEnXc55djzCP3oT
PgtMOGDQcuxjJ5+K36MTcsyncUDqw+7InUIquoSd/vDWgANyYYm7x0XEfn14
wmeKLgd+B1q1ZkmI/jOFb9xN5sDtEc2TRl+I+6MKiq21OKDQe6Ky+isVl7zf
/1ZPlQMVpvpWK79TcXLCsscRihzQ37vS6MMPYr8f6TSaKcOBnZWxEYEDRL/b
x1obO8qGeesWTvs5SMXspputTcNsCLD7bp04RMXZA/YC9m82zG+bXj9lmOiv
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

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
42ixEK7fYOlkzlTFFR8KrgzmCyFr88DOM/KqyDau7dHKE0KBD3vPUpIqSlb+
ypITCsGuKSKynvD1Q1WR319kCOHF2U0mh3VVMfl29y0nthD+62+qqC/R5zKc
IoRtuUNbbdeoomFVed+BeCF8uXvSLBNU0Xp3/5NdsUJYpC316c9mVZS+2WsV
ECWEvkW/zhrYqOIVx3r/r1eFsGd/2Ran3aqoHWtl3RcshA1LXe+cdFXFJfJL
8pYFCCH7Fz058IgqTiReD4k/I4RX+Q95J31UsXKDqe+QrxByfU4NOwWoYjA5
95+NtxAOVs8rMgxRxWOJTItrR4Xw6dgio39hqqi0eNVbdBOC/mBUVsFNVex1
2qAW4yoEz91StofuqWLuj8kXGs5CiNX5t0csWRUNHkmNP3IQwhlSvNhNtiru
UQ0Iq7cRQmJIY6Biliq673r/9uJWIYwfOPUv9KEqhmu8FAvdKAQVOcqTz09U
cabQZPdrYyG4hFt8Ma1QRakPW282GQphTuGp/LBXquhhuYp+dJkQpOZI7Kqo
V8XsW0lxjkuF8ObA7qHh96poPmshqWiREP47PxDxRf0RLp5H5P9gd49+vyoW
aVQUg5YQtM/MiFk9oIpVCe/cX9GF8NO74rfhqCq+X33iGJ0iBKdfbat1/qmi
15fsL49VhLCkjxEiK6GGJQE8J+5sITywCp3okVXDbpU7yZHSRP7F1r7JVlZD
SkP0wwZxIdgsS5nnR1XDX8ovX1tPZsGGUrs5eppqqFJWFLLgdxYEntXra9JR
Q4/OxhHHH1kwMbYx7Yy+Gip4whr93izwiBX3m22ohs47nYcHOrPAWZoecn+d
Gppv7GS4ETh7LOoLFdWwUqLiimZrFlD3P6mPslDDg7N7q540ZMHFKsd9E9vV
sP3PpTLtuiyI8vHP2Gunhrrms+vWvs6CLVsjW3P2qOGz+Z+6V1RnQVDj2dli
rmoY6K2oMVWeBemfrhzc6E7Eq5e/vPVpFjwE97FzXmq48eeF8NjCLCjR2/BD
cFINyx+Qxltzs2B/80OXhgA1jFketWRPZhaoZDYeHQxWw59jCx8vY2fBf+c3
NdwVzmbfSyLW/9r8VOE6Mf+p6K+r7meBettuVIpWw/odYlLJ97LgssSLl9L3
1PDFuMOo1e0sCAusCBhLUMMiuVVyfTeyQCnM93BnmhruZ2X37LmWBcv3XeIU
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
TsVlv5kRD4wywGXx7xFPTSoWWu+dr7SS2N+2MqePc6noL1ND6dXPgECT1PX2
2lTUyKMlyutmQNv8Y2lVulTs+u2mVa6TAXNfDIWtXUTFHKs/DmZzM8AiXmaI
o0fFzsevusQ1if0VXugkLaXi97l3D15iZEDX+Bz7i8upOHhzJKSeSsQ7kmX3
YwUVvdyXBxqSCP5mjbQ7rKKiXtCdJL5yBrx0Ef56uoaK9yj9J2pnZ0C6ePJd
HSMq3lhRKO0skwHNjedfXjMhxn99LjglQeQzbeatn+upuNG7+Q5tmgcxWr39
NmZUTH/zJ2v3OA8iJhuasjdS8XInX5c0wgPsDN6rbEHFI936F2KHefDcLzrg
xBYqOt+3DXo0wIPQU3nLXm+l4nnZ5yXKP3igmX7j4oIdVKy8fevWkq88uNjz
7GSoNRVT1u386N3HgyjDbzNabanY1qPgQPvEg74CgYHBLioyt402f+/iwf3S
pJlhDlQUNHoorfvAA8G73WfbdlPxIdVku/x7Hvz3/REVXdXfm157x4P5O/wd
QvZRMWZQKTqmlgdvh8dK3u6nYq6u9jPySx5oGIY1ah6k4icvJ6ZeBQ82/uTF
eh8m9rNbO2f2Mx74HegXL3Kn4roL8DH/KQ8GF1TNkTxK6GOGZFB1EQ9kNlR/
tfIk9Ft389NwAQ9oDM8j97yp+KTSU271Qx7su6kf13GCilalcOJkDg9qhq4G
a5+k4qw0xoJVQh60KP+iHfUj9D5aKqcn4AHZrMdLcJqKqckdwmtcHnzZXRPw
M4DIlw77cTCTB3IlWrAsiIpFkXh1YQoPVH22lR4/T0UFF3On/fE86Jp4JJZ5
gYrctVfdaHd5MONW/dSXUCrOWL1uIvoWDyTFp5/oXKZiQlHUBskbPCh9lWbi
epWKr0M/TAVF8uASSetCXDgVT4nUqNoRPDAparpSd43I3xT9UOFlgv/t2jul
b1CRcXPMWu0SD6TUD/ea3qTiWZ/zw9kXePBk3QCejKbikqHcCdnzPEg8r+7O
iqGik9i50kWBPJh3HR2aY6n4+9Xtz3mnebC4KVNF+j4Vbx5iSSw5xYNyTl7C
mgdUrEqcztt+ggef56X/dkugIuec7sSnY4R+LCvnxCRRUexEhKmcOw9WTB+m
PUuh4ur7P3QaXXmQpfzy85c0Kv46vJn8ey+Rv3VG4aosKuZJ7iw5R+DlWuNT
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cDDVkF+xkQ3enCC//cOE3hc8+uq7ng3LHFfOG/pNw9NaqjV9yAY3ywGT0BHC
z0yXlToT2ODF/OJZo8T5Iy9Pu9OcDV8f2yQnjRF+bDHLdsiE6A/Hls+6EzT8
seU4Z98aNjywtkjgTtLwldBg6McqNpiKxPLNpwi/t3QK4K9kw2n7K/q104R+
ZEJZjivYkKFvr75jBh3FP0ebRi8j8nn70vOdOB3JSq2NWfqEPrwCND1n0rGg
7GT6wUVsGNvNt/guScdguYTndTpsKC4Vf3lCmo66C5T4L+cS/iHd9HRcho7K
PTEFZ2ez4arpzUVhcnT035LPXk4j/KFR9FdKgY7sBuh8S2WDZ1WRQcwsOs4+
qxziSWFD1+XRVmUlOlZP/mvTJ7P/934iHU/8NvpmrkT4z5CCN1WVjnM7xB4m
ziL0I1/mlKxGR4b3ts3v5In1uvz5s0l0LAqMnJwpR6wXdCskjUzH62mld8Rl
2OCz445wDpWO5w6cbH4iSegnqNf1Ho2OgQ5r6ndJEP5y+sepuQw6rvf75JMp
RujpMEXsngYdrWfP5G+eKIT+7lejWpp0jPMO2sP/XQjTchc97mrRcX5k5JzD
PwrhYtRdc425dOT7nBpx+FIIYjcuXbmjTeRnyOEcfl8IIZ9zbcjzifm8tBoF
TYVgVX3szHUdOm5Z4rP7ZV0hRErDHMUFBL+5LnF8AovLRqyOWkjHrFvh81sr
C6GCl/FEYjEdOd+O7DV7XAi8EMnqc3p07JmYeXO5qBBcj6ma/NWno82KqH3m
RYUQQ1o+328pcf1M6qf37EL4nPAkom8ZHfuTH/Bf5RXC3XQjZzcD4vrBE1ry
2YWgfarvfusKOga8fF4Sk1YIed8sDm5dSceDCS/Ugm4Xwnf37PQnRnTk7q24
9eBaIRS8PL3dxJiOxb6vpSUuF0LgI63gwtV0TNka9Cs4pBBoGybo802IfJWo
+88GFIK3hu/K26Z0VHAaX//erxDqwzqeypvTUdO9cfdCAtfYPWgKWUtH2/U/
01d5F4JwdLnTINDxyqft0QNuheBwvm3Xfgs6smR9aptcC2Fn2HTj63V0dGod
jfVwLoTRFVI1VuvpuC7BWeubQyGw3bYYF1nR8bzuIZN12wshy9dgnu4GOhaO
Sb7U2FII9vvUoxM20vFpQvsgZUMhMKrtfWduouPiMr9TNItCeN1i++r4ZuL+
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
tQwi32dbzzF/5sL/AyhMPsU=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
lzIx6STnltVcNmyMyNxM0yfXP7hQf4TKht53ehyT5UzsiLm0m6JA8nlw89P9
BiTfZuEP58qwoSxu6ZWwFUzM65KreizN/u/3ZUy8tk5TqkmKDYr75lDqVjHx
wgzx3V6SbJBZ7fr2qyETS8Kn4u9MsuCA9ToHudVM5C0Q/wMTLKA4NgXqGzOx
LC/GAv+wIGDYbIudCROTZ1XWt/1mgf1l4XM/UyamujSL7/nFgnkHQ//Gr2Hi
5VVJepeGWbAwNaeDu5aJR28KXU8NsoBr4nu4HUg/bDGTpnxlwSZJsbu/kYm/
P1OcHD6zoCA37DJtHRM1BzN5+h9YYMPTUTNcT+rLi2tK6SbnC1F337GB5G/u
Z+XIThaorLvt7G9Oxk/LuzX4kgVz5Ysl4yyYKLUDKU8aWLC2nbWPvZH0O69m
PPYpC8b25bm8sGTi/bFzSYYkXr/p7dzvm5ho4qW6TryKBdWKRy/IWDFxRYj3
iIaQBVOK55MXbWHinPlKtJIKFhw/s83F3JqJlq/eqGuVsUDgNPX2wFYm2oq0
TeuLWPAjuVwqeBu5vtMmtdWFLAiaxv2YYMNEvejibHcWC07pKJ8otGViXe/z
nfqPWdAWO539YjsTI7TnOl7NYoFPfN69L3ZMXCPTNXErnQXmh9abz3Rgor53
VsKBuyyInj2QMH8HEx9WPm1SIfGfkIZU451MnC9JnouSWCC8xNxtv4v0517f
DXm3WfC66m+1lyMTv1tY6rvcJPmpSPhwaTcT9xlHZT2NZYFz8zzu3T1kPwt5
urnvOgvy1xYZFzkx8WNcUPS8KBa4qVzzfbGXiX07opqqrrDAyfXp3s/7mBi8
/OHFpeEsmDYYOzG1n4mBaR93bgxjQZQHYxvtAFl/IYcch4NZoOFx3mHJQbJf
TO24uTiIBcNOY3Lmh5h4jllorObPgr3X7wfvOczE+rgruzf7kP5Zlp/m48JE
t2UjAWtJ7G2xITDclYkjkmzM8mKBblmERIobExv37JzY4MGCr7uyLdhHSH0u
qt5fcoQFa0TPTGvcmegVOO4Q4MICVgjj82sPMv7MZFH+QRbIjZZYDh1lYgFN
89/UfhYcc+vYN8OLiRZlEbs5TizYP5agQz/GRG6QrCY6skA2Z2GO7nFSv7N5
BqcdyHhdsnvXepP8ioqebbJlAaPPosnWh/SrVabl4y0skHy50P+wLxP5eVrP
Xmwk6yfvROPJE0y88zawRW8Dqf9r23eX/ZjIVtGbNrGeBXXJ/ZmJ/qSeRxKw
AFlgQDuolXOSiZ+3tc1dsoYFYdt69pQHMPEBb7/AxoT13+9Dmbj5T+5olBHp
D5/4r28DyXr8SbMaWcmC908ploNBTLzotLTN2oD0R4nRnqnTTJwStj0hlrEg
j6WhJXeWibTMBuU6PVKvsaks1WAmSv5Z4L5AmwUlZUO9i88xcbjjkbaCJgsk
Zqu0m4Yw0fiskkT8fBZQOx+etwplYs26/Ou1TDK+0cpPjueZeNJzq+U9GgtG
qeenHwljYmVwwsgpEm9qpr7yv8DEpecZzVNKLMhKS3cLu0j2cwfHXXsUWJD7
zjrv+iUmvvbonTtNjgUX643zU8JJ/fT0R2/LsmBGRLTHw8tM3JL2qV8gxYIm
qs9bbgQTf43UvaNIsuDM3hmyoitkv500uvJ2OguStY6NNFwl/WzF7TsoxoKf
qi1xnZHkfn5p5daEiXyIbNs59PEaef3zLWLuY/lQz58/80cUE7eZryh7NpIP
GSu2t/2NZuKBhzUuH77nQ7qn/IGZMeT+jR3rVb7kw5zwcxnyN5j47Ey4SthA
PkhfEmUQsUzcuKXIc6wvHwq2iR3UiCP9HXmY8PuQDya5jh2L48n+NF3a40dP
PkyzGZEyvMlEOzm3T6ve5QO3ZmgUbjFR9uai31+78uFkpP9dy9skH74/Ljm+
zoee8fvTbRNIP56LvHO4Ix/W29xb4JjIxL3dZxJsW/MhpeD6lHMSEyOzzjq+
a8qHlmWxt44kk+cJia/DUg35wOc8/3I8hew3YVq/ntfmw3YF54mTd5i4/Kjr
gGZ1PmSKe9eevcvEw+Oijab8fFioNc/uQioTWz6q+b8py4fUqeiEK2lMXC+y
0+sk8eGxD8nX7zExuzPw/ZXifPh/TS2U4Q==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AtfRD6lX7xF8Ldvya1NmEfw/iGC5dg==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.25413062827559246`, -0.513637556169688}, 
     PlotRange -> {{-0.1439323912357338, 
      6.90875477931522}, {-0.39315467262371173`, 7.0767841072268105`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, 
     AxesOrigin -> {-0.25413062827559246`, -0.513637556169688}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
     FormBox["\"Inverse power of two gradient smoothing function with various \
length amounts\"", TraditionalForm], 
     PlotRange -> {{-0.1439323912357338, 
      6.90875477931522}, {-0.39315467262371173`, 7.0767841072268105`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        GridBox[{{"\"Smoothness 2\""}, {"\"Final error: 1011.47\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 3\""}, {"\"Final error: 1.95321\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 4\""}, {"\"Final error: 289.878\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 5\""}, {"\"Final error: 1.58653\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 6\""}, {"\"Final error: 1.03982\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 7\""}, {"\"Final error: 1.05195\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 10\""}, {"\"Final error: 1.06751\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 11\""}, {"\"Final error: 1.07552\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 16\""}, {"\"Final error: 1.08353\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Panel\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6835522287813387`*^9, 3.6835522994604845`*^9}, {
   3.6835523546092763`*^9, 3.683552364358779*^9}, {3.683552462688371*^9, 
   3.683552485568639*^9}, 3.6835526012052774`*^9, 3.6835526663597407`*^9, {
   3.6835530266560855`*^9, 3.683553093436634*^9}, 3.683553239940746*^9, 
   3.683553294545171*^9, {3.68355339899585*^9, 3.683553436228687*^9}, 
   3.6835534987213736`*^9, 3.6835535373231273`*^9, 3.6835536895046444`*^9, {
   3.6835540376398745`*^9, 3.6835540536205335`*^9}, 3.683554156884418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RecordedSmoothnessComparisonData", "[", 
        RowBox[{"[", 
         RowBox[{"sm", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"RecordedSmoothnessComparisonData", "[", 
         RowBox[{"[", 
          RowBox[{"sm", ",", "3"}], "]"}], "]"}], "/", "1000."}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "2", ",", 
       RowBox[{"Length", "@", "RecordedSmoothnessComparisonData"}]}], "}"}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Length of smoothing function\>\"", ",", 
      "\"\<Corrections / Iterations\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Correction Amounts of P2 Smoothing Function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.683552682523522*^9, 3.683552775077264*^9}, {
  3.6835528142403884`*^9, 3.6835528380512714`*^9}, {3.6835528788905144`*^9, 
  3.683552879876172*^9}, {3.68355293815705*^9, 3.683552947575333*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{3., 1.804}, {4., 1.808}, {5., 1.807}, {6., 
      1.7890000000000001`}, {7., 1.793}, {10., 1.807}, {11., 
      1.7770000000000001`}, {16., 1.7890000000000001`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length of smoothing function\"", TraditionalForm], 
    FormBox["\"Corrections / Iterations\"", TraditionalForm]},
  AxesOrigin->{2.7968750000000004`, 1.7754500000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{757.1111111111111, Automatic},
  Method->{},
  PlotLabel->FormBox[
   "\"Correction Amounts of P2 Smoothing Function with various length amounts\
\"", TraditionalForm],
  PlotRange->{{3., 16.}, {1.7770000000000001`, 1.808}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683552697318392*^9, 3.6835527753544464`*^9}, 
   3.6835528434338627`*^9, {3.683552880078307*^9, 3.6835529050449634`*^9}, {
   3.683552939469926*^9, 3.683552947985607*^9}, 3.6835530342051215`*^9, 
   3.683553296462451*^9, 3.683554162734328*^9, 3.683554362881834*^9}]
}, Open  ]]
},
WindowSize->{1584, 814},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 280, 6, 90, "Input"],
Cell[841, 28, 4469, 87, 710, "Input",
 InitializationCell->True],
Cell[5313, 117, 34528, 727, 1894, "Input",
 InitializationCell->True],
Cell[39844, 846, 3971, 90, 210, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[43840, 940, 9506, 144, 153, "Input",
 InitializationCell->True],
Cell[53349, 1086, 3424, 57, 383, "Output"]
}, Open  ]],
Cell[56788, 1146, 12712, 238, 508, "Input"],
Cell[69503, 1386, 999, 21, 110, "Input"],
Cell[CellGroupData[{
Cell[70527, 1411, 3822, 96, 310, "Input"],
Cell[74352, 1509, 4199, 81, 189, "Output"],
Cell[78554, 1592, 425, 8, 25, "Output"],
Cell[78982, 1602, 298, 4, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79317, 1611, 1092, 24, 81, "Input"],
Cell[80412, 1637, 532, 8, 25, "Output"],
Cell[80947, 1647, 57555, 1186, 169, "Output"],
Cell[138505, 2835, 51514, 1048, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190056, 3888, 869, 13, 26, "Input"],
Cell[190928, 3903, 5812, 104, 279, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196777, 4012, 3370, 72, 279, "Input"],
Cell[200150, 4086, 839, 14, 25, "Output"],
Cell[200992, 4102, 217331, 3710, 438, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418360, 7817, 1321, 33, 117, "Input"],
Cell[419684, 7852, 1591, 36, 333, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
