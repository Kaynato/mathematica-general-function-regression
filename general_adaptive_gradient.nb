(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    399551,       7539]
NotebookOptionsPosition[    397432,       7471]
NotebookOutlinePosition[    397805,       7487]
CellTagsIndexPosition[    397762,       7484]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"**", 
   RowBox[{
   "*", "\[IndentingNewLine]", "TEMPLATE", " ", "FOR", " ", "ITERATIVE", " ", 
    "OPTIMIZATION", " ", "ALGORITHMS", "\[IndentingNewLine]", "Zicheng", " ", 
    "Gao"}]}], "\[IndentingNewLine]", " ", "****)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "Settings"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InitIterationSettings", "[", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Controls", " ", "-", " ", 
        RowBox[{
        "zero", " ", "fps", " ", "means", " ", "that", " ", "there", " ", 
         "is", " ", "NO", " ", "DELAY"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"doPrint", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPoint", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doGraph", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doWarn", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doSpace", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"showMistakes", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fps", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Init", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dir", "=", 
        RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"err", "=", 
        RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"*", " ", "Adaptivity"}], " ", "**)"}], "\[IndentingNewLine]", 
       RowBox[{"errorRatio", "=", "1.0"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "In", " ", "what", " ", "ratio", " ", "of", " ", "current", " ", 
         "error", " ", "to", " ", "previous", " ", "error", " ", "should", 
         " ", "it", " ", "be", " ", "considered", " ", "increasing"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"boostRatio", "=", "1.1"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Impatience", "'"}], " ", "Multiplier", " ", "to", " ", 
         "increase", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "not", " ", "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"refineRatio", "=", "0.95"}], ";", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Caution", "'"}], " ", "Multiplier", " ", "to", " ", 
         "decrease", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxRefines", "=", "1000"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Give", " ", "up", " ", "refining", " ", "if", " ", "refined", " ", 
         "too", " ", "many", " ", "times", " ", "in", " ", "a", " ", "row"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Acceleration", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AccelBoost", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelRefine", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelAmt", "=", "0.01"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Tracker", " ", "values"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"historyAmt", "=", "300"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Display", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dispGradientRange", "=", "1."}], ";"}], "\[IndentingNewLine]",
       ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.683453669707604*^9, 3.6834536754316063`*^9}, {
  3.683475391860078*^9, 3.683475415478833*^9}, {3.6834763677667036`*^9, 
  3.68347638801742*^9}, {3.6834766625609846`*^9, 3.683476678659403*^9}, {
  3.6834819022317977`*^9, 3.683481908458951*^9}, {3.6834828069823236`*^9, 
  3.6834828150106783`*^9}, {3.683506294653036*^9, 3.6835062964742503`*^9}, {
  3.683541039822339*^9, 3.6835410400745077`*^9}, {3.6835413793833466`*^9, 
  3.683541380017769*^9}, {3.6835430788782673`*^9, 3.683543078980337*^9}, {
  3.6835443377746286`*^9, 3.6835443442829695`*^9}, {3.6835448579666367`*^9, 
  3.683544858642089*^9}, {3.683551184152491*^9, 3.6835511849680333`*^9}, {
  3.683554222110929*^9, 3.6835542236829777`*^9}, {3.6835860643398304`*^9, 
  3.6835860661930656`*^9}, {3.683586115472941*^9, 3.683586118149725*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{
     "paramVariance_", ",", "manualTrueParams_", ",", "noiseFactor_", ",", 
      " ", "noiseDistribution_", ",", "forceData_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"eFunc", ",", "gFunc", ",", "params"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParamVariance", "=", "paramVariance"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "we", " ", "are", " ", "forcing", " ", "data"}], 
        ",", " ", 
        RowBox[{"use", " ", "data"}], ",", " ", 
        RowBox[{"otherwise", " ", "generate", " ", "data"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "forceData", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Data", "=", "forceData"}], ";", "\[IndentingNewLine]", 
         RowBox[{"DataLength", "=", 
          RowBox[{"Length", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Range", "@", "DataLength"}]}], "/", 
           RowBox[{"N", "@", "SamplingRate"}]}]}], ";"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Else", " ", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Range", "@", "DataLength"}]}], "/", 
           RowBox[{"N", "@", "SamplingRate"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"TrueParams", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "manualTrueParams", "]"}], ">", "0"}], 
            ",", "manualTrueParams", ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "paramVariance"}], ",", "paramVariance"}], "}"}],
               ",", "varamt"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Data", " ", "Generation"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NoiselessData", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Fitfunction", "@@", " ", "#"}], "&"}], ")"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{"TrueParams", ",", " ", "#"}], "]"}], "&"}], " ", "/@",
               "SamplingSet"}], ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AddNoise", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "+", 
             RowBox[{"noiseFactor", "*", 
              RowBox[{"RandomVariate", "[", "noiseDistribution", "]"}]}]}], 
            ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Data", "=", 
          RowBox[{"AddNoise", "/@", "NoiselessData"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"doNormalize", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DataMax", "=", 
          RowBox[{"Max", "@", 
           RowBox[{"Abs", "@", "Data"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Data", "/=", "DataMax"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"DataMax", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Prep", " ", "gradient"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Unique", "[", "\"\<p\>\"", "]"}], ",", 
         RowBox[{"{", "varamt", "}"}]}], "]"}]}], ";", 
      RowBox[{"paramh", "=", 
       RowBox[{"Hold", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Objective", " ", "and", " ", "Gradient", " ", "functions"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"{", "vars", "}"}], ",", "#"}], "]"}]}], ")"}], 
                   "&"}], "/@", "SamplingSet"}], ")"}], "-", "Data"}], ")"}], 
              "2"], "]"}], "]"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"eFunc", "@@", "params"}], ",", "params"}], "]"}]}]}], 
          "]"}]}]}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Global"}], " ", "Iteration", " ", 
    RowBox[{"Reset", " ", "/", " ", "Initialize"}]}], " ", 
   "***)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitIterationData", "[", 
    RowBox[{"factorx_", ",", "manualParams_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totalIter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TotalRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"*", " ", "Modification", " ", "Values"}], " ", "**)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"factor", "=", "factorx"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dirs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "varamt"}], "]"}], ",", "Smoothness"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"dirX", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prevErr", "=", 
      RowBox[{"-", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "History", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"iterParams", "=", 
      RowBox[{"initParams", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "manualParams", "]"}], ">", "0"}], ",", 
         "manualParams", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ParamVariance"}], ",", "ParamVariance"}], "}"}], 
           ",", "varamt"}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugParams", "=", 
      RowBox[{"{", "iterParams", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dir", "=", 
      RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugErr", "=", 
      RowBox[{"{", "err", "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinePlot", "[", 
    RowBox[{"points_", ",", " ", "size_", ",", "amount_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"amount", ">", "0"}], "&&", 
           RowBox[{"size", ">", "amount"}]}], ",", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "amount"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "@", 
      RowBox[{"Line", "@", "points"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReportIteration", "[", "i_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], " ", "&&", " ", 
       "doPrint"}], ",", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<next dir:\>\"", ",", "dir", ",", "\"\<\\nerr:\>\"", ",", "err", 
         ",", "\"\<\\nparams:\>\"", ",", "iterParams", ",", 
         "\"\<\\niteration:\>\"", ",", "i"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayGradient", "[", 
     RowBox[{"xV_", ",", "yV_"}], "]"}], ":=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"eFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "->", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "xV", "]"}], "]"}], ",", 
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], ",", 
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "xV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "yV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"xV_", ",", "yV_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"gFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
          RowBox[{"z", "\[LessEqual]", "\[Epsilon]"}]}], "]"}]}], ",", " ", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], ",", 
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "xV", "]"}], "]"}], ",", 
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Visualize", "[", "]"}], ":=", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Data vs Function\>\"", ",", "\"\<Parameter Space\>\"", ",", 
          "\"\<Error over iterations\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"DataMax", "*", 
                 RowBox[{"(", 
                  RowBox[{"Fitfunction", "@@", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}]}], "&"}],
                "/@", "SamplingSet"}], ",", 
              RowBox[{"DataMax", "*", "Data"}]}], "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotLegends", "->", "None"}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"If", "[", 
           RowBox[{"doPoint", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"varamt", "\[Equal]", "3"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"doGraph", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"1", ",", "2"}], "]"}], ",", 
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"2", ",", "3"}], "]"}], ",", 
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"3", ",", "1"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"LinePlot", "[", 
                 RowBox[{"debugParams", ",", "totalIter", ",", "historyAmt"}],
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<Non-3 dimensions\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<Disabled\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"doEPlot", ",", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"debugErr", ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\"\<Disabled\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Parameters, nGrad, dir, Delta\>\"", ",", 
          "\"\<Iterations, factor, corrections\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{"iterParams", ",", 
             RowBox[{"-", "dir"}], ",", 
             RowBox[{
              RowBox[{"-", "factor"}], "*", "dir"}], ",", 
             RowBox[{
              RowBox[{"-", "factor"}], "*", 
              RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"totalIter", ",", "factor", ",", "TotalRefines"}], 
              "}"}], ",", 
             RowBox[{"ProgressIndicator", "[", 
              FractionBox["ConsecRefines", "maxRefines"], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"Total", "[", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                     "SamplingSet"}], ")"}], "-", "Data"}], ")"}], "2"], 
                "]"}], 
               RowBox[{"DataLength", "-", "varamt"}]], ")"}], "0.5"], ",", 
            "prevErr"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefineFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["refineRatio", "AccelRefine"]}], ";", 
     RowBox[{"ConsecRefines", "++"}], ";", 
     RowBox[{"TotalRefines", "++"}], ";", 
     RowBox[{"AccelRefine", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelBoost", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BoostFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["boostRatio", "AccelBoost"]}], ";", 
     RowBox[{"prevErr", "=", "err"}], ";", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", 
     RowBox[{"AccelBoost", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelRefine", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddToHistory", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"debugParams", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugParams", ",", "iterParams"}], "]"}]}], ";", 
     RowBox[{"debugErr", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugErr", ",", "err"}], "]"}]}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToSpacedString", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"str", ",", 
     RowBox[{"StringDrop", "[", 
      RowBox[{
       RowBox[{"StringJoin", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< \>\""}], ")"}], 
           "&"}], "/@", "str"}], ")"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindMax", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Max", "@", "list"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RecoverFrequency", "[", 
    RowBox[{"data_", ",", "len_", ",", "rate_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "-", "2", "+", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FindMax", "@", 
              RowBox[{"Abs", "@", 
               RowBox[{"Fourier", "[", 
                RowBox[{
                 RowBox[{"data", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{"2", "I", " ", "\[Pi]", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", "2"}], ")"}], 
                    RowBox[{
                    RowBox[{"N", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Range", "@", "len"}], "-", "1"}], ")"}]}], "/", 
                    "len"}]}], "]"}]}], ",", 
                 RowBox[{"FourierParameters", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "/", "len"}]}], "}"}]}]}], "]"}]}]}], "-", 
             "1"}], ")"}], "/", "len"}]}]}], ")"}], "*", "2", "\[Pi]", "*", 
       RowBox[{"rate", "/", "len"}]}], "]"}], "&"}], "@", 
    RowBox[{"FindMax", "@", 
     RowBox[{"Abs", "@", 
      RowBox[{"Fourier", "@", "data"}]}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6815621708931227`*^9, 3.681562330352498*^9}, 
   3.681562497040437*^9, {3.6815628024075775`*^9, 3.681562861147148*^9}, {
   3.681563505498472*^9, 3.6815635060864873`*^9}, {3.681564204873289*^9, 
   3.681564205665312*^9}, {3.681564238331339*^9, 3.681564377763912*^9}, {
   3.6815644138774757`*^9, 3.6815644292445745`*^9}, {3.6815644878469906`*^9, 
   3.681564588196496*^9}, {3.6815646717885714`*^9, 3.6815646780740185`*^9}, {
   3.681564713541422*^9, 3.681564713797474*^9}, {3.6815678952129745`*^9, 
   3.681567901730054*^9}, {3.6815679945018387`*^9, 3.6815680009509993`*^9}, {
   3.681568046370693*^9, 3.681568069228405*^9}, {3.6815681126606717`*^9, 
   3.681568302189334*^9}, {3.681568406977435*^9, 3.681568559202245*^9}, {
   3.681568624287523*^9, 3.681568687110731*^9}, {3.6815687298876343`*^9, 
   3.6815687304258556`*^9}, {3.6815687637696657`*^9, 
   3.6815689406475735`*^9}, {3.681569085676959*^9, 3.681569112045782*^9}, {
   3.6815691668767204`*^9, 3.6815691719411526`*^9}, {3.6815694358957815`*^9, 
   3.6815694710235147`*^9}, {3.6815695217459598`*^9, 
   3.6815696667020826`*^9}, {3.6815697393237906`*^9, 3.681569799451787*^9}, {
   3.681569841287245*^9, 3.681569850879549*^9}, {3.681570039047075*^9, 
   3.681570088500207*^9}, {3.6815711382830825`*^9, 3.6815711500490465`*^9}, {
   3.6815713958243575`*^9, 3.6815713987967715`*^9}, {3.681571651690309*^9, 
   3.6815717326270823`*^9}, {3.681571898861825*^9, 3.681571928476057*^9}, {
   3.6815724885189953`*^9, 3.6815725199839554`*^9}, {3.6815726352377763`*^9, 
   3.6815727468631196`*^9}, {3.681572821962291*^9, 3.6815728347201214`*^9}, {
   3.68157295825967*^9, 3.681573001583455*^9}, {3.681573127364339*^9, 
   3.681573136317957*^9}, {3.68157330345288*^9, 3.6815733771014705`*^9}, {
   3.6815734161908703`*^9, 3.6815734168791714`*^9}, 3.6815735440325766`*^9, {
   3.68157358016744*^9, 3.68157358217618*^9}, {3.6815736253621693`*^9, 
   3.6815736295029173`*^9}, {3.6815738429116826`*^9, 
   3.6815738481884356`*^9}, {3.6815738982460203`*^9, 
   3.6815739593413076`*^9}, {3.68158214733538*^9, 3.6815821526995497`*^9}, {
   3.6815823844986544`*^9, 3.6815824054864826`*^9}, {3.6815824431424513`*^9, 
   3.6815826521113873`*^9}, {3.681582727235224*^9, 3.681582879236921*^9}, {
   3.681582932226347*^9, 3.681582992336873*^9}, {3.6815830598288555`*^9, 
   3.6815830617439795`*^9}, {3.681583092533844*^9, 3.6815830959236803`*^9}, {
   3.6815833722720833`*^9, 3.681583493212161*^9}, {3.681583605117122*^9, 
   3.6815836054494004`*^9}, {3.6815840003979025`*^9, 3.68158400184723*^9}, {
   3.6815840403408365`*^9, 3.6815840878485966`*^9}, {3.681584569134416*^9, 
   3.68158457187665*^9}, {3.681584680540204*^9, 3.681584680884739*^9}, {
   3.68158485376423*^9, 3.6815848548258705`*^9}, {3.6815850206636624`*^9, 
   3.681585021053091*^9}, {3.681585083443123*^9, 3.6815850897336245`*^9}, {
   3.6815851822151766`*^9, 3.6815851853968716`*^9}, {3.6815854451033382`*^9, 
   3.6815854479667807`*^9}, {3.681590686564697*^9, 3.6815906958723764`*^9}, {
   3.681590736721639*^9, 3.681590794978259*^9}, {3.681596566755397*^9, 
   3.6815965699455237`*^9}, {3.681603359934925*^9, 3.6816033694795704`*^9}, {
   3.6816035521915236`*^9, 3.681603552737888*^9}, {3.681603699106743*^9, 
   3.6816037052072525`*^9}, {3.681603941321679*^9, 3.6816039418400245`*^9}, {
   3.6816039943817463`*^9, 3.6816039948670697`*^9}, {3.6816040676890893`*^9, 
   3.6816040733506956`*^9}, {3.6816041113588305`*^9, 3.681604125647503*^9}, {
   3.681604159646594*^9, 3.681604230239973*^9}, 3.6816043214220285`*^9, {
   3.681604397409239*^9, 3.6816043993275185`*^9}, {3.6816044366767387`*^9, 
   3.681604443906561*^9}, {3.6816045017122445`*^9, 3.6816045024397297`*^9}, {
   3.6816475221392946`*^9, 3.68164754050082*^9}, 3.681647987229904*^9, {
   3.6816480232892017`*^9, 3.681648208200461*^9}, {3.6816482411758256`*^9, 
   3.6816482815531654`*^9}, {3.681648491473945*^9, 3.6816484959462447`*^9}, {
   3.681648781538802*^9, 3.6816488050024595`*^9}, {3.681649004645697*^9, 
   3.6816490205770655`*^9}, {3.681649122387348*^9, 3.6816491851514544`*^9}, {
   3.681652758744893*^9, 3.6816527610052285`*^9}, {3.6816529879131775`*^9, 
   3.6816530249518147`*^9}, {3.681653312277938*^9, 3.681653462352562*^9}, {
   3.6816535110093822`*^9, 3.6816535368018627`*^9}, {3.681653580859788*^9, 
   3.6816536148198957`*^9}, {3.6816538214525537`*^9, 3.68165385922288*^9}, {
   3.681653979449232*^9, 3.6816539848178177`*^9}, {3.6816544838783803`*^9, 
   3.6816545077942157`*^9}, {3.6816554625155334`*^9, 3.681655463061796*^9}, {
   3.6816569829339094`*^9, 3.6816570470714865`*^9}, {3.681658433926193*^9, 
   3.681658434074292*^9}, {3.6816586282599716`*^9, 3.6816586622370815`*^9}, {
   3.681659804985428*^9, 3.6816598054017067`*^9}, 3.681724521037159*^9, 
   3.6817247737398834`*^9, {3.681725049850954*^9, 3.6817250542918463`*^9}, {
   3.6817257095161085`*^9, 3.681725712780613*^9}, {3.681725994533414*^9, 
   3.681725999538206*^9}, {3.6817265750936427`*^9, 3.681726577329742*^9}, {
   3.681726609100688*^9, 3.681726610747135*^9}, {3.6817344038238297`*^9, 
   3.6817344071070213`*^9}, {3.681737918367159*^9, 3.6817379195629563`*^9}, {
   3.6817392466712227`*^9, 3.681739247062479*^9}, {3.681739635988923*^9, 
   3.6817396402727823`*^9}, {3.681739747079029*^9, 3.6817397781367493`*^9}, {
   3.681739861167135*^9, 3.6817398712318487`*^9}, 3.6817400131845436`*^9, {
   3.681740081319996*^9, 3.6817400986655645`*^9}, {3.6817401731463575`*^9, 
   3.681740173921876*^9}, {3.681741054818036*^9, 3.6817410630014954`*^9}, {
   3.681741396180751*^9, 3.681741398243129*^9}, {3.6817414314682913`*^9, 
   3.681741442898916*^9}, {3.6825142858697195`*^9, 3.682514297896387*^9}, {
   3.6828709618425407`*^9, 3.6828709787118196`*^9}, {3.6828710151744833`*^9, 
   3.6828710177548676`*^9}, {3.682871056451414*^9, 3.6828710727978697`*^9}, 
   3.6828726919252305`*^9, {3.6828727955305076`*^9, 3.6828728555223036`*^9}, {
   3.682873378546649*^9, 3.6828734076373024`*^9}, {3.682873520868531*^9, 
   3.682873559173211*^9}, {3.6828736112941427`*^9, 3.682873752044176*^9}, 
   3.682873790717617*^9, {3.682873910650232*^9, 3.6828739437132616`*^9}, {
   3.6828739933613586`*^9, 3.682873993735608*^9}, {3.682874050554145*^9, 
   3.6828740794894342`*^9}, {3.6828742201533623`*^9, 3.682874265329564*^9}, {
   3.682874298319532*^9, 3.6828745143659678`*^9}, {3.682874570277046*^9, 
   3.682874596047637*^9}, {3.682874636112135*^9, 3.6828746733459735`*^9}, {
   3.6828747254820137`*^9, 3.682874850242854*^9}, {3.6828748812823844`*^9, 
   3.6828749723224497`*^9}, {3.682875009751096*^9, 3.682875121152584*^9}, {
   3.6828751689186645`*^9, 3.682875281614401*^9}, {3.6828753555464134`*^9, 
   3.6828753968699646`*^9}, {3.682876304769292*^9, 3.682876365490773*^9}, {
   3.6828763966515465`*^9, 3.682876430613188*^9}, {3.6828767330169744`*^9, 
   3.6828767574752793`*^9}, {3.682876864445448*^9, 3.682876870552519*^9}, {
   3.682877651198309*^9, 3.682877664183419*^9}, {3.682877798475026*^9, 
   3.682877816052747*^9}, {3.6828781436847534`*^9, 3.682878165585703*^9}, {
   3.6828782135244203`*^9, 3.682878224199538*^9}, {3.6828797475700393`*^9, 
   3.682879998255912*^9}, {3.68288009267686*^9, 3.682880143406395*^9}, {
   3.6828801903913555`*^9, 3.6828802734871845`*^9}, {3.6828803052799473`*^9, 
   3.68288041799209*^9}, {3.6828805392829494`*^9, 3.6828806302816153`*^9}, {
   3.6828808568225594`*^9, 3.682880951656781*^9}, {3.682881043212818*^9, 
   3.6828812745349383`*^9}, {3.6828821517986603`*^9, 3.682882174328681*^9}, {
   3.6828822145555*^9, 3.682882220983786*^9}, {3.6828824057689743`*^9, 
   3.6828824251168723`*^9}, {3.6828824972309494`*^9, 
   3.6828825619140596`*^9}, {3.682882979695325*^9, 3.6828830600888634`*^9}, {
   3.682883195068556*^9, 3.6828832043139057`*^9}, {3.6830396849966636`*^9, 
   3.6830397732688446`*^9}, {3.6830399066630836`*^9, 3.683039913180719*^9}, {
   3.6830399483475113`*^9, 3.683039948975526*^9}, {3.683040242086508*^9, 
   3.6830402424345293`*^9}, {3.683040324076639*^9, 3.683040324392643*^9}, {
   3.683041010420825*^9, 3.6830410349325366`*^9}, 3.6830411257718563`*^9, {
   3.6830417513831806`*^9, 3.6830417517711535`*^9}, {3.6830418588510437`*^9, 
   3.6830418977140875`*^9}, {3.683041942952117*^9, 3.683041985756014*^9}, {
   3.6830485694199595`*^9, 3.683048569545044*^9}, {3.6830486044225082`*^9, 
   3.6830486130522604`*^9}, {3.683049759526929*^9, 3.683049784091267*^9}, 
   3.6830498387137628`*^9, {3.6830499489338756`*^9, 3.6830499829444623`*^9}, {
   3.683050107443301*^9, 3.6830501080437*^9}, {3.6830502134530907`*^9, 
   3.683050237732626*^9}, {3.6830508463538647`*^9, 3.683050848092024*^9}, {
   3.6830512174741836`*^9, 3.683051318327956*^9}, {3.68305141269347*^9, 
   3.6830514189526434`*^9}, {3.6830514490507092`*^9, 
   3.6830514517945375`*^9}, {3.683051513194645*^9, 3.6830515464718294`*^9}, {
   3.6830528447429323`*^9, 3.6830528655883617`*^9}, 3.6830530458067245`*^9, {
   3.6830690703621416`*^9, 3.6830691417092147`*^9}, {3.6830694416214046`*^9, 
   3.6830694434306107`*^9}, {3.6830694833502245`*^9, 3.683069484821205*^9}, {
   3.683070729955146*^9, 3.6830707740605483`*^9}, {3.6830712713652153`*^9, 
   3.6830712716263876`*^9}, {3.6830719460428877`*^9, 3.683071964236906*^9}, {
   3.6830720005991483`*^9, 3.683072014350318*^9}, {3.68307204839301*^9, 
   3.6830720582609043`*^9}, {3.683072135692527*^9, 3.6830721509567013`*^9}, {
   3.6830728276947327`*^9, 3.683072829097669*^9}, {3.6830735964682264`*^9, 
   3.6830735969445453`*^9}, {3.683073691666543*^9, 3.683073692095833*^9}, {
   3.6830737483087044`*^9, 3.6830738016602697`*^9}, {3.6830738397446594`*^9, 
   3.683073884579549*^9}, {3.6830740536964674`*^9, 3.6830740562001324`*^9}, {
   3.683074113623417*^9, 3.683074136141427*^9}, {3.6831137205409174`*^9, 
   3.6831137283381157`*^9}, {3.683114615466959*^9, 3.683114683204441*^9}, {
   3.683282340518567*^9, 3.6832824072357135`*^9}, {3.6832824475178485`*^9, 
   3.6832825729421616`*^9}, {3.6832826105214677`*^9, 3.683282687613647*^9}, 
   3.6832828174469943`*^9, {3.683282888362079*^9, 3.6832828887951603`*^9}, {
   3.683282922716254*^9, 3.683282927889253*^9}, {3.683282959197586*^9, 
   3.6832829787227917`*^9}, {3.683283115450907*^9, 3.6832831376467*^9}, {
   3.6832845350763054`*^9, 3.683284598197768*^9}, {3.6832846488608637`*^9, 
   3.6832846838701496`*^9}, {3.6834531221145186`*^9, 
   3.6834531225835247`*^9}, {3.6834531627014427`*^9, 
   3.6834532309226456`*^9}, {3.683453374690505*^9, 3.6834533843788047`*^9}, {
   3.683453539085793*^9, 3.6834536630132537`*^9}, 3.683453695691606*^9, {
   3.6834738983736906`*^9, 3.6834739148350773`*^9}, {3.6834739684969196`*^9, 
   3.683473969084311*^9}, {3.6834751355005164`*^9, 3.683475142708455*^9}, {
   3.683475301179598*^9, 3.6834753087796564`*^9}, {3.6834759178912888`*^9, 
   3.683476059550787*^9}, {3.6834762186555815`*^9, 3.683476223096542*^9}, {
   3.683476615545763*^9, 3.683476617722215*^9}, {3.683476842666613*^9, 
   3.6834768881495647`*^9}, {3.683477069632125*^9, 3.6834771669518113`*^9}, {
   3.6834772529809628`*^9, 3.6834772563114014`*^9}, {3.6834821858820133`*^9, 
   3.6834822862699795`*^9}, {3.6834823347393136`*^9, 3.683482392754013*^9}, {
   3.683482751210119*^9, 3.683482753181434*^9}, {3.683482786817873*^9, 
   3.683482801103403*^9}, {3.683482869966338*^9, 3.6834828981661496`*^9}, {
   3.683483063285297*^9, 3.6834830994669647`*^9}, {3.6834832963935027`*^9, 
   3.6834833307854443`*^9}, {3.6834890127908435`*^9, 
   3.6834890216122856`*^9}, {3.683493965713439*^9, 3.6834939814519386`*^9}, {
   3.6834944046024194`*^9, 3.6834944049186287`*^9}, {3.6835409768643427`*^9, 
   3.68354103279165*^9}, {3.683542352696763*^9, 3.6835423564522676`*^9}, {
   3.6835425125263824`*^9, 3.6835426272869368`*^9}, {3.683542769061509*^9, 
   3.6835428376312504`*^9}, {3.683542882745347*^9, 3.6835428870232*^9}, {
   3.6835432670537963`*^9, 3.6835432713906884`*^9}, {3.6835443717663035`*^9, 
   3.6835443858376884`*^9}, {3.683544436760659*^9, 3.6835444599851522`*^9}, {
   3.6835449419844527`*^9, 3.6835449764104195`*^9}, {3.683547403125822*^9, 
   3.683547405181193*^9}, {3.683547447009968*^9, 3.6835474772120934`*^9}, {
   3.683547554671893*^9, 3.6835475550151224`*^9}, {3.6835476722649136`*^9, 
   3.683547676145505*^9}, 3.683554020810647*^9, {3.6835569974081154`*^9, 
   3.6835570021610966`*^9}, {3.6835725278858185`*^9, 3.68357257121698*^9}, {
   3.68358414383438*^9, 3.683584144076541*^9}, {3.6835858200268536`*^9, 
   3.6835858416392717`*^9}, {3.6835858844017982`*^9, 
   3.6835859177690554`*^9}, {3.683585973043927*^9, 3.6835859735662756`*^9}, {
   3.6835860953875403`*^9, 3.6835861110930166`*^9}, {3.683586298403968*^9, 
   3.683586316865286*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"SET", " ", "DATA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varamt", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doNormalize", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DataLength", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SamplingRate", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fitfunction", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"#1", "*", "#3"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"#1", "*", "#2"}], "]"}]}], "+", "#4"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{"10.", ",", 
      RowBox[{"{", 
       RowBox[{"4.73575", ",", "9.87798", ",", 
        RowBox[{"-", "8.94354"}]}], "}"}], ",", "0.", ",", 
      RowBox[{"NormalDistribution", "[", "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RecordedComparisonData", "=", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6835419646529064`*^9, 3.6835419646549087`*^9}, {
   3.6835420064157667`*^9, 3.6835420109077635`*^9}, {3.6835420853294077`*^9, 
   3.6835420860769105`*^9}, {3.6835422873921986`*^9, 
   3.6835422981143527`*^9}, {3.683554709218642*^9, 3.6835547123777494`*^9}, {
   3.6835547637910476`*^9, 3.683554783649292*^9}, {3.683567656024397*^9, 
   3.6835677516671762`*^9}, 3.683567880753562*^9, {3.683568085215626*^9, 
   3.683568085381737*^9}, {3.6835713057158346`*^9, 3.683571305790885*^9}, 
   3.6835713383670073`*^9, {3.6835725418111076`*^9, 3.683572556553466*^9}, {
   3.683572666157154*^9, 3.6835726667105227`*^9}, {3.6835727527798867`*^9, 
   3.683572754232853*^9}, {3.6835815482277555`*^9, 3.683581549655707*^9}, {
   3.6835815863002195`*^9, 3.6835816111238165`*^9}, {3.683581655744582*^9, 
   3.68358165583164*^9}, {3.6835817014055953`*^9, 3.683581701737815*^9}, {
   3.683581750984215*^9, 3.683581832952446*^9}, {3.6835819181963577`*^9, 
   3.683581968554219*^9}, {3.6835820733522367`*^9, 3.6835821006258116`*^9}, {
   3.683582134875126*^9, 3.683582136270055*^9}, {3.683582178932672*^9, 
   3.683582196716383*^9}, {3.6835841616137304`*^9, 3.683584215254002*^9}, {
   3.683584458385864*^9, 3.6835844585019407`*^9}, 3.683584677073697*^9, {
   3.6835861283395233`*^9, 3.6835861516280565`*^9}, 3.6835864512269135`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"BEGIN", " ", "ITERATION"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smoothness", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SmoothingFunction", "[", "l_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", "/", 
           SuperscriptBox["2.", 
            RowBox[{"First", "[", "#2", "]"}]]}], "&"}], ",", "l"}], "]"}], 
       "]"}], "/", "Smoothness"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationData", "[", 
     RowBox[{"0.01", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RecoverFrequency", "[", 
         RowBox[{"Data", ",", "DataLength", ",", "SamplingRate"}], "]"}], ",",
         "1.", ",", "0.1"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"recordAtIter", "=", "200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Visualize", "[", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681582981711115*^9, 3.681582986568472*^9}, {
   3.6815830288923187`*^9, 3.681583033177169*^9}, {3.681583138155509*^9, 
   3.6815831669343147`*^9}, {3.681583254303117*^9, 3.681583294651238*^9}, {
   3.681585139202839*^9, 3.681585158314912*^9}, {3.68158530678191*^9, 
   3.6815853073417172`*^9}, {3.6815888689488974`*^9, 
   3.6815889866626554`*^9}, {3.6815890228020644`*^9, 
   3.6815890583435373`*^9}, {3.6815891217298484`*^9, 3.681589163632318*^9}, {
   3.681589334500104*^9, 3.681589348961054*^9}, {3.6815906212941074`*^9, 
   3.681590665665968*^9}, {3.681603534980042*^9, 3.6816035363699694`*^9}, {
   3.681603864337474*^9, 3.6816038682690973`*^9}, {3.681604243555854*^9, 
   3.68160424704218*^9}, {3.681604329314691*^9, 3.681604341492816*^9}, {
   3.6816044092304306`*^9, 3.6816044107254276`*^9}, {3.6816530292944417`*^9, 
   3.6816530304204016`*^9}, {3.6816570986333294`*^9, 3.681657131603295*^9}, {
   3.68165718855943*^9, 3.6816572324965878`*^9}, {3.681657309278144*^9, 
   3.6816573131817484`*^9}, {3.681657666521865*^9, 3.6816577776820254`*^9}, {
   3.68165782483617*^9, 3.681657954385624*^9}, {3.6816580017865467`*^9, 
   3.6816580506108546`*^9}, {3.6816581666434946`*^9, 3.681658170822795*^9}, {
   3.6816583360697403`*^9, 3.681658337337532*^9}, {3.6816584414643555`*^9, 
   3.6816584541160107`*^9}, {3.6816589278869047`*^9, 
   3.6816589285913744`*^9}, {3.681658984624859*^9, 3.68165898677029*^9}, {
   3.681659038013056*^9, 3.6816590423468595`*^9}, {3.6816594819339275`*^9, 
   3.6816594843655505`*^9}, {3.681659775861001*^9, 3.6816597777292466`*^9}, {
   3.681660572644367*^9, 3.6816605736830606`*^9}, {3.681660606220765*^9, 
   3.6816606758342023`*^9}, 3.6816607353358936`*^9, 3.681677017236003*^9, {
   3.681677124887562*^9, 3.681677189483862*^9}, {3.6816772528319063`*^9, 
   3.681677267550214*^9}, {3.6816773596183596`*^9, 3.6816773728282022`*^9}, {
   3.6816774203410945`*^9, 3.6816774217293653`*^9}, {3.681677473480362*^9, 
   3.6816774771330295`*^9}, 3.6816775189761457`*^9, {3.6816776491617465`*^9, 
   3.681677682774685*^9}, {3.6817249874119425`*^9, 3.6817249882761993`*^9}, {
   3.6817250226257377`*^9, 3.6817250289826703`*^9}, {3.6817265600556955`*^9, 
   3.681726572075122*^9}, 3.681726796595335*^9, {3.6817379065662923`*^9, 
   3.681737907543937*^9}, {3.681739349567865*^9, 3.6817393578093576`*^9}, {
   3.6817394401773014`*^9, 3.6817394468687677`*^9}, {3.681739510376131*^9, 
   3.681739615667372*^9}, {3.681739999609486*^9, 3.6817400007982807`*^9}, {
   3.68174012905984*^9, 3.681740136059509*^9}, {3.6817419469943395`*^9, 
   3.681741952057715*^9}, {3.6828737640986223`*^9, 3.6828737647000227`*^9}, {
   3.682875461848855*^9, 3.6828756006176033`*^9}, {3.6828764354113855`*^9, 
   3.682876436543141*^9}, {3.6828766604259844`*^9, 3.6828766842954245`*^9}, {
   3.682876922117593*^9, 3.6828769346159225`*^9}, {3.682876994450532*^9, 
   3.6828770733282995`*^9}, {3.682877151602738*^9, 3.6828772330235786`*^9}, {
   3.6828775403583255`*^9, 3.682877624288368*^9}, {3.682877916713852*^9, 
   3.6828779544028687`*^9}, {3.682878065220443*^9, 3.682878072332185*^9}, {
   3.6828814401165433`*^9, 3.6828814554397593`*^9}, {3.6828815136255503`*^9, 
   3.682881677529819*^9}, {3.68288172255884*^9, 3.6828817726412277`*^9}, {
   3.6828818052829876`*^9, 3.6828818326892595`*^9}, {3.68288187893756*^9, 
   3.6828818980032716`*^9}, {3.6828819290849905`*^9, 3.6828819380419636`*^9}, 
   3.6828820133227377`*^9, {3.6828820484197435`*^9, 3.6828820737426243`*^9}, {
   3.6828821123523645`*^9, 3.6828821185725107`*^9}, {3.682882266229948*^9, 
   3.682882269393059*^9}, {3.6828823006288815`*^9, 3.6828824004974613`*^9}, {
   3.6828824684167385`*^9, 3.6828824766762457`*^9}, {3.682882938299493*^9, 
   3.6828829432121906`*^9}, {3.682884460763468*^9, 3.682884487530546*^9}, {
   3.6828845209094305`*^9, 3.682884563541955*^9}, {3.682884653926296*^9, 
   3.682884655603948*^9}, {3.682884704152156*^9, 3.6828847264733267`*^9}, {
   3.6828856457691994`*^9, 3.682885649599371*^9}, {3.683040573485735*^9, 
   3.683040584339557*^9}, {3.68304064193865*^9, 3.6830406431586776`*^9}, {
   3.6830407026469884`*^9, 3.683040709387744*^9}, {3.683040784112011*^9, 
   3.6830407868282356`*^9}, {3.683041425354068*^9, 3.683041553893486*^9}, {
   3.683049172974044*^9, 3.683049362232627*^9}, {3.68304940084937*^9, 
   3.6830494027616453`*^9}, {3.683049464699045*^9, 3.683049466438177*^9}, {
   3.6830495610864267`*^9, 3.6830495652051725`*^9}, {3.68304961800137*^9, 
   3.683049678092401*^9}, 3.683049711234733*^9, {3.68304980134577*^9, 
   3.6830498081863317`*^9}, {3.6830723669505258`*^9, 3.683072482054262*^9}, {
   3.683072637656907*^9, 3.6830726449707837`*^9}, {3.683076372548118*^9, 
   3.683076376220566*^9}, {3.683076599486354*^9, 3.683076600303899*^9}, {
   3.683113812300089*^9, 3.683113818312097*^9}, {3.6834738943165803`*^9, 
   3.683473922983458*^9}, {3.6834739738785095`*^9, 3.68347397407164*^9}, {
   3.6834751469622936`*^9, 3.6834751658909864`*^9}, {3.68347521491304*^9, 
   3.6834752862256107`*^9}, {3.6834758806565614`*^9, 3.683475890758298*^9}, 
   3.6834760778700066`*^9, {3.683476111184245*^9, 3.6834761186132*^9}, {
   3.6834765158272057`*^9, 3.683476531901271*^9}, {3.683476623835718*^9, 
   3.683476624398637*^9}, {3.683476868357871*^9, 3.6834768749890203`*^9}, {
   3.683476937855316*^9, 3.6834769388860035`*^9}, {3.6834772869824443`*^9, 
   3.683477290570836*^9}, {3.6834773560896063`*^9, 3.683477397585683*^9}, 
   3.683477446109888*^9, {3.683477637042604*^9, 3.683477648454566*^9}, {
   3.6834822237832956`*^9, 3.683482223927392*^9}, {3.6834882586372824`*^9, 
   3.6834882817872534`*^9}, {3.683493991160005*^9, 3.6834939912690783`*^9}, {
   3.6834940877280064`*^9, 3.683494135284731*^9}, {3.6834943253961697`*^9, 
   3.6834943257273903`*^9}, {3.6834946353849983`*^9, 3.683494639560784*^9}, {
   3.6835034954100933`*^9, 3.6835034979037547`*^9}, {3.683504136606228*^9, 
   3.683504150164277*^9}, {3.68350429772871*^9, 3.6835043028281107`*^9}, {
   3.68350482801584*^9, 3.6835048283790836`*^9}, {3.6835051006222696`*^9, 
   3.683505106859684*^9}, {3.683505703191486*^9, 3.683505724435655*^9}, {
   3.6835057573736277`*^9, 3.68350575937296*^9}, {3.683505799282584*^9, 
   3.683505872292286*^9}, {3.683505940406725*^9, 3.6835059810918646`*^9}, {
   3.683506029663267*^9, 3.683506077217988*^9}, {3.6835061267170086`*^9, 
   3.683506182208025*^9}, {3.6835062368584805`*^9, 3.6835062529201937`*^9}, {
   3.683506392477291*^9, 3.6835064012691545`*^9}, {3.683541045516137*^9, 
   3.683541056417409*^9}, {3.68354116520598*^9, 3.6835411813624287`*^9}, {
   3.6835413112196317`*^9, 3.6835413426615314`*^9}, {3.683541909913392*^9, 
   3.683541910463758*^9}, {3.683541999125903*^9, 3.68354203544413*^9}, 
   3.6835421016563*^9, {3.68354214517733*^9, 3.6835421543864737`*^9}, {
   3.6835422486553593`*^9, 3.6835422521697035`*^9}, {3.68354293171101*^9, 
   3.6835429320572405`*^9}, {3.683543007650754*^9, 3.683543027534017*^9}, {
   3.683543089591416*^9, 3.6835430947878814`*^9}, {3.6835433381962557`*^9, 
   3.6835433479447556`*^9}, {3.683543465132931*^9, 3.6835435069508276`*^9}, 
   3.683544000135397*^9, {3.6835451305795994`*^9, 3.683545130864789*^9}, {
   3.683546877145338*^9, 3.6835468970791984`*^9}, {3.683546945962344*^9, 
   3.6835469461744857`*^9}, {3.683547159392496*^9, 3.683547172371584*^9}, {
   3.683547216453932*^9, 3.6835472309961596`*^9}, {3.6835473228847127`*^9, 
   3.6835473301280003`*^9}, {3.683547769463896*^9, 3.6835477704195323`*^9}, {
   3.683547857704653*^9, 3.6835478581529536`*^9}, {3.6835479456953506`*^9, 
   3.683547948110963*^9}, {3.683550777678563*^9, 3.683550778168889*^9}, {
   3.6835508692942724`*^9, 3.683550901647855*^9}, {3.6835509428253236`*^9, 
   3.6835509462195883`*^9}, {3.683550985118536*^9, 3.68355098537871*^9}, {
   3.683551023248973*^9, 3.6835510539455433`*^9}, {3.6835511059132996`*^9, 
   3.6835511061474543`*^9}, {3.6835511441327953`*^9, 
   3.6835511443859615`*^9}, {3.6835511809093275`*^9, 3.683551181139481*^9}, {
   3.683551994573103*^9, 3.6835519946891837`*^9}, {3.6835520789263744`*^9, 
   3.68355207904345*^9}, {3.6835523801102853`*^9, 3.6835523802303696`*^9}, {
   3.683552494263435*^9, 3.683552494404529*^9}, {3.6835526100001445`*^9, 
   3.683552610316354*^9}, {3.683552964670737*^9, 3.683552976244457*^9}, {
   3.683553157334643*^9, 3.683553157458726*^9}, {3.683554077654566*^9, 
   3.683554080220276*^9}, {3.683554883071704*^9, 3.6835549479149604`*^9}, {
   3.6835550228248367`*^9, 3.683555124118407*^9}, {3.683555164250177*^9, 
   3.683555199409633*^9}, {3.6835552328149176`*^9, 3.6835552508389387`*^9}, {
   3.683555281561434*^9, 3.6835553140831285`*^9}, {3.6835553749052987`*^9, 
   3.6835554217035165`*^9}, {3.683556579973998*^9, 3.683556901670368*^9}, {
   3.6835569335751176`*^9, 3.683556958773926*^9}, {3.683567451357293*^9, 
   3.6835674553959866`*^9}, {3.683570183365841*^9, 3.683570184733753*^9}, 
   3.683584154968811*^9, {3.683584690365562*^9, 3.6835846906667633`*^9}, {
   3.6835860328868484`*^9, 3.683586037622006*^9}, {3.683586328674161*^9, 
   3.683586329570758*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Grid[{{"Data vs Function", "Parameter Space", "Error over iterations"}, {
      ListPlot[{
        Map[$CellContext`DataMax Apply[$CellContext`Fitfunction, 
           
           Prepend[$CellContext`iterParams, #]]& , $CellContext`SamplingSet], \
$CellContext`DataMax $CellContext`Data}, Joined -> True, ImageSize -> Medium, 
       PlotLegends -> None], 
      If[$CellContext`doPoint, 
       If[$CellContext`varamt == 3, 
        If[$CellContext`doGraph, {
          $CellContext`displayGradient[1, 2], 
          $CellContext`displayGradient[2, 3], 
          $CellContext`displayGradient[3, 1]}, 
         $CellContext`LinePlot[$CellContext`debugParams, \
$CellContext`totalIter, $CellContext`historyAmt]], "Non-3 dimensions"], 
       "Disabled"], 
      If[$CellContext`doEPlot, 
       ListLogPlot[$CellContext`debugErr, ImageSize -> Medium, PlotRange -> 
        All], "Disabled"]}, {
     "Parameters, nGrad, dir, Delta", "Iterations, factor, corrections"}, {
      Column[{$CellContext`iterParams, -$CellContext`dir, \
(-$CellContext`factor) $CellContext`dir, (-$CellContext`factor) \
$CellContext`SmoothingFunction[$CellContext`dirs]}], 
      Column[{{$CellContext`totalIter, $CellContext`factor, \
$CellContext`TotalRefines}, 
        ProgressIndicator[$CellContext`ConsecRefines/$CellContext`maxRefines]}\
], {(Total[(Map[Apply[$CellContext`Fitfunction, 
              
              Prepend[$CellContext`iterParams, #]]& , \
$CellContext`SamplingSet] - $CellContext`Data)^2]/($CellContext`DataLength - \
$CellContext`varamt))^0.5, $CellContext`prevErr}}}, Frame -> All, ItemSize -> 
    30], StandardForm],
  ImageSizeCache->{1163., {173.5, 180.5}}]], "Output",
 CellChangeTimes->{{3.6835841982840967`*^9, 3.683584202961216*^9}, 
   3.6835843406703367`*^9, {3.6835845019569283`*^9, 3.6835845175563335`*^9}, {
   3.683584680242807*^9, 3.683584691050016*^9}, 3.6835858520492144`*^9, {
   3.683585932720028*^9, 3.6835859377323723`*^9}, {3.6835860022444057`*^9, 
   3.6835860379532285`*^9}, {3.683586134173413*^9, 3.6835861673675566`*^9}, {
   3.683586323343605*^9, 3.683586330089104*^9}, 3.683586639047007*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "loop"}], " ", "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Iterator", " ", "and", " ", "maximum", " ", "values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "0."}], ";", 
    RowBox[{"UpperBound", "=", "1000."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmallErr", "=", "0.0000000000000001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NoErr", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Forever", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Iteration", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConsecRefines", "<", "maxRefines"}], "&&", 
      RowBox[{"(", 
       RowBox[{"Forever", "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "<", "UpperBound"}], " ", "&&", 
          RowBox[{"(", 
           RowBox[{"NoErr", "||", " ", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"err", 
                   RowBox[{"(", 
                    RowBox[{"err", "-", "prevErr"}], ")"}]}], ")"}], "2"], 
                "+", "1"}], ")"}], "2"], ">", 
             RowBox[{"(", 
              RowBox[{"1", "+", "SmallErr"}], ")"}]}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Obtain", " ", "vector", " ", "from", " ", "gradient", " ", "and", " ", 
       "assign", " ", "into", " ", "running", " ", "array"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dirs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"dir", "=", 
          RowBox[{"gFunc", "@@", "iterParams"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ReportIteration", "[", "i", "]"}], ";", 
      RowBox[{"(*", "Report", "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fps", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"ConsecRefines", "\[Equal]", "0"}]}], ",", 
        RowBox[{
         RowBox[{"Pause", "[", "fps", "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"(*", "Pause", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showMistakes", ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mark", " ", "down", " ", "boost", " ", "vs", " ", "error"}], 
        " ", "-", " ", 
        RowBox[{
        "please", " ", "do", " ", "not", " ", "change", " ", "other", " ", 
         "variables"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"iterParams", "-=", 
       RowBox[{"factor", "*", 
        RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ConsecRefines", "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"i", "++"}], ";", 
         RowBox[{"totalIter", "++"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"err", "=", 
       RowBox[{"eFunc", " ", "@@", " ", "iterParams"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Factor", " ", "Adaptivity"}], " ", "-", " ", 
        RowBox[{
        "check", " ", "to", " ", "see", " ", "whether", " ", "error", " ", 
         "has", " ", "increased", " ", "over", " ", "errorRatio", " ", "to", 
         " ", "determine", " ", "whether", " ", "to", " ", "boost", " ", "or",
          " ", "refine"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         FractionBox["err", "prevErr"], ">", "errorRatio"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "err", " ", "increased"}], ",", " ", "revert", 
          ",", " ", "refine", ",", " ", 
          RowBox[{"and", " ", "retry"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"iterParams", "=", 
          RowBox[{"debugParams", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log10", "[", "factor", "]"}], "<", 
            RowBox[{"-", "100"}]}], ",", 
           RowBox[{"factor", "=", "0.5"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RefineFactor", "[", "]"}], ";"}], ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";", 
         RowBox[{"BoostFactor", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6815830549052362`*^9, 3.6815830569639435`*^9}, {
   3.6815833224915934`*^9, 3.6815833427873363`*^9}, {3.6815835152037477`*^9, 
   3.6815835867637324`*^9}, {3.6815836557592244`*^9, 3.6815836579033656`*^9}, 
   3.681583698624568*^9, {3.681583804126245*^9, 3.681583899175346*^9}, {
   3.681584120809069*^9, 3.6815841278946266`*^9}, {3.681584565742484*^9, 
   3.681584574478776*^9}, {3.681584717851612*^9, 3.6815848728995996`*^9}, {
   3.68158494548003*^9, 3.681584960968948*^9}, {3.6815849967248945`*^9, 
   3.681584998155593*^9}, {3.681585044037255*^9, 3.6815850807786193`*^9}, {
   3.6815851687605925`*^9, 3.6815851749758067`*^9}, 3.681585257436683*^9, {
   3.681588818643874*^9, 3.68158882224041*^9}, {3.6816039209133673`*^9, 
   3.681603978014973*^9}, 3.6816040159742737`*^9, {3.68160425701083*^9, 
   3.681604324912594*^9}, {3.6816043708838124`*^9, 3.681604395329851*^9}, {
   3.6816044410436525`*^9, 3.6816044809352636`*^9}, {3.681604581304495*^9, 
   3.681604581408561*^9}, {3.681657788978179*^9, 3.6816577997986774`*^9}, {
   3.681658388036417*^9, 3.681658388337614*^9}, {3.6816584666423044`*^9, 
   3.681658466801412*^9}, {3.681658543235112*^9, 3.6816585444509244`*^9}, {
   3.6816587162912865`*^9, 3.6816588213786974`*^9}, {3.681658853741133*^9, 
   3.6816588544954505`*^9}, {3.6816589093944664`*^9, 3.681658910498202*^9}, {
   3.6816589538124695`*^9, 3.681658961216242*^9}, {3.681659019321334*^9, 
   3.68165902741212*^9}, {3.6816590914616175`*^9, 3.6816591157677307`*^9}, {
   3.681659258204584*^9, 3.681659461082448*^9}, {3.681659669532071*^9, 
   3.681659671022064*^9}, {3.681659706162506*^9, 3.6816597313162856`*^9}, {
   3.681659808123521*^9, 3.6816598312099223`*^9}, {3.6816599096232305`*^9, 
   3.681659938730646*^9}, {3.6816600065518885`*^9, 3.681660025867775*^9}, {
   3.681660056864452*^9, 3.6816600601386366`*^9}, {3.681660324915262*^9, 
   3.6816603310743704`*^9}, 3.6816603734203887`*^9, {3.6816604871622624`*^9, 
   3.6816605001939564`*^9}, {3.681726019259656*^9, 3.681726117312996*^9}, 
   3.6817261890839434`*^9, {3.6817263633960915`*^9, 3.6817263752591195`*^9}, {
   3.6817265926157346`*^9, 3.681726606880471*^9}, {3.6817266668997264`*^9, 
   3.6817267125406976`*^9}, {3.681737754102071*^9, 3.6817377743956075`*^9}, {
   3.681737807716177*^9, 3.6817378088419275`*^9}, {3.6817384089755154`*^9, 
   3.6817384169598455`*^9}, {3.681738453769399*^9, 3.6817386697234554`*^9}, {
   3.6817387708958917`*^9, 3.681738855176112*^9}, {3.6817390914112206`*^9, 
   3.6817391362351217`*^9}, {3.681739252624189*^9, 3.6817392574333997`*^9}, {
   3.681739661725093*^9, 3.681739693822504*^9}, {3.681739852449319*^9, 
   3.681739852764531*^9}, {3.6817401973837595`*^9, 3.6817402118944373`*^9}, 
   3.6817414009559374`*^9, {3.681741459131745*^9, 3.681741580191125*^9}, {
   3.6817416744515905`*^9, 3.681741705967613*^9}, {3.6817418559296923`*^9, 
   3.6817418856745343`*^9}, {3.6817420325103846`*^9, 
   3.6817421352588587`*^9}, {3.6828756460984926`*^9, 3.682876143225466*^9}, 
   3.682876243323327*^9, {3.6828763113636885`*^9, 3.6828763434921064`*^9}, {
   3.6828764696682243`*^9, 3.682876541840211*^9}, {3.6828765823151927`*^9, 
   3.682876584366561*^9}, {3.682876634735857*^9, 3.682876651010708*^9}, {
   3.6828773139891996`*^9, 3.6828773364101458`*^9}, {3.6828773788808804`*^9, 
   3.682877400381214*^9}, {3.682877489771953*^9, 3.6828774903853636`*^9}, {
   3.6828776060872345`*^9, 3.682877608594906*^9}, {3.682881335946268*^9, 
   3.68288136995558*^9}, {3.682882576135539*^9, 3.6828825770011177`*^9}, {
   3.682882635548149*^9, 3.6828826427649612`*^9}, {3.682882688414392*^9, 
   3.682882696965092*^9}, {3.6828827453663607`*^9, 3.682882758678235*^9}, {
   3.68288280128664*^9, 3.682882801830003*^9}, {3.682882985371976*^9, 
   3.6828829854799776`*^9}, {3.6828830826284523`*^9, 
   3.6828830838046455`*^9}, {3.682883151550181*^9, 3.6828831523661866`*^9}, {
   3.682883219319111*^9, 3.682883240973945*^9}, {3.6828845914540353`*^9, 
   3.682884596048645*^9}, {3.682884740497396*^9, 3.6828847409814034`*^9}, {
   3.6830399252545934`*^9, 3.683040021903536*^9}, {3.683040074129644*^9, 
   3.683040109382766*^9}, {3.6830401521016164`*^9, 3.6830401528138976`*^9}, {
   3.6830403419625387`*^9, 3.683040384081685*^9}, {3.6830405507742767`*^9, 
   3.683040554542845*^9}, {3.6830407646220727`*^9, 3.6830407792434945`*^9}, {
   3.683041005852372*^9, 3.683041006316601*^9}, {3.6830410572708087`*^9, 
   3.683041063595398*^9}, {3.683041710352441*^9, 3.683041710548448*^9}, {
   3.6830417661374545`*^9, 3.6830417802909727`*^9}, {3.6830486378439603`*^9, 
   3.6830486617386465`*^9}, {3.6830494878933363`*^9, 3.683049494385665*^9}, {
   3.683049994565211*^9, 3.6830500492853537`*^9}, {3.683050088724822*^9, 
   3.683050102658111*^9}, {3.6830502789247494`*^9, 3.683050279417079*^9}, {
   3.683051358030029*^9, 3.6830513590497074`*^9}, {3.683071209115715*^9, 
   3.683071236472953*^9}, {3.6830714672728186`*^9, 3.6830714684896317`*^9}, {
   3.6830715354192495`*^9, 3.6830715898175154`*^9}, {3.683071625858543*^9, 
   3.6830716635406637`*^9}, {3.683071701500972*^9, 3.6830717333011713`*^9}, {
   3.6830722228226123`*^9, 3.6830722943002644`*^9}, {3.6830728559445696`*^9, 
   3.683072972508274*^9}, {3.6830731256430845`*^9, 3.6830731527751737`*^9}, {
   3.6830741829346232`*^9, 3.6830742453112097`*^9}, {3.6830743162555017`*^9, 
   3.6830743180837207`*^9}, {3.683075201200184*^9, 3.6830752609750347`*^9}, {
   3.68307547026332*^9, 3.683075482021157*^9}, 3.6830755175598507`*^9, {
   3.6830760734353714`*^9, 3.6830763233887806`*^9}, {3.6830763549573927`*^9, 
   3.68307635783331*^9}, {3.6830764258746705`*^9, 3.6830764272325764`*^9}, {
   3.683076460497753*^9, 3.683076499906025*^9}, {3.683076584187575*^9, 
   3.683076587354686*^9}, {3.683113789162665*^9, 3.683113799528575*^9}, {
   3.683473868679073*^9, 3.6834738695539455`*^9}, {3.683474127010831*^9, 
   3.6834741301785593`*^9}, {3.6834742561450167`*^9, 3.683474327471419*^9}, 
   3.683475086419007*^9, {3.683475422019196*^9, 3.683475446846759*^9}, {
   3.6834756211749306`*^9, 3.6834757009501467`*^9}, {3.6834757318607655`*^9, 
   3.6834757544768524`*^9}, {3.6834769318898134`*^9, 
   3.6834769348793306`*^9}, {3.6834769968695316`*^9, 
   3.6834769969916124`*^9}, {3.683481894355544*^9, 3.6834818948128486`*^9}, {
   3.6834819270643625`*^9, 3.6834819273225355`*^9}, {3.683482000056054*^9, 
   3.6834820309506626`*^9}, {3.6834824427203465`*^9, 3.683482445979519*^9}, {
   3.683482476911153*^9, 3.683482477036238*^9}, {3.6834825422897654`*^9, 
   3.683482542403841*^9}, {3.6834939977710204`*^9, 3.6834940006869664`*^9}, {
   3.683494176985549*^9, 3.6834941785385847`*^9}, {3.6835408777038684`*^9, 
   3.6835408802965975`*^9}, {3.6835409304023485`*^9, 
   3.6835409306685247`*^9}, {3.6835409642379184`*^9, 
   3.6835409644720783`*^9}, {3.6835410665411644`*^9, 3.683541068398403*^9}, {
   3.6835431122035*^9, 3.683543112450664*^9}, {3.6835440067658195`*^9, 
   3.6835440271264057`*^9}, {3.683544474519847*^9, 3.6835444860975714`*^9}, {
   3.683544617029913*^9, 3.6835446228367863`*^9}, {3.6835450588397436`*^9, 
   3.683545061975836*^9}, {3.6835472214513702`*^9, 3.683547229002435*^9}, {
   3.6835474251021185`*^9, 3.6835474434665327`*^9}, {3.68354748080097*^9, 
   3.6835475052560797`*^9}, {3.68355064698372*^9, 3.6835506821411705`*^9}, {
   3.683551242334303*^9, 3.6835512425704584`*^9}, {3.6835565254745216`*^9, 
   3.6835565260569096`*^9}, {3.683556674143777*^9, 3.683556674699147*^9}, {
   3.683556765853693*^9, 3.6835567663390145`*^9}, {3.6835842910102105`*^9, 
   3.683584332636979*^9}, {3.6835844874292374`*^9, 3.683584488194749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Data", " ", "Recording"}], " ", "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RecordedComparisonData", "=", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"RecordedComparisonData", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Smoothness\>\"", ",", "Smoothness"}], "}"}], ",", 
          "\[IndentingNewLine]", "debugErr", ",", "\[IndentingNewLine]", 
          "debugParams", ",", "\[IndentingNewLine]", "TotalRefines", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<BoostRatio\>\"", ",", "boostRatio"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<RefineRatio\>\"", ",", "refineRatio"}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6835512635774727`*^9, 3.6835512766051617`*^9}, {
  3.6835513068123145`*^9, 3.6835513199550796`*^9}, {3.6835513562472906`*^9, 
  3.683551464884759*^9}, {3.683551511272703*^9, 3.683551571884137*^9}, {
  3.683551613722046*^9, 3.683551762925576*^9}, {3.6835517985283265`*^9, 
  3.683551982519062*^9}, {3.683552039785263*^9, 3.6835520591141562`*^9}, {
  3.68355704362202*^9, 3.683557044894872*^9}, {3.6835864512419243`*^9, 
  3.6835864512429247`*^9}, {3.6835865192084756`*^9, 3.683586551951908*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "Diagnostic"}], " ", "Tools"}], "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "History"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"debugParams", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "10"}], ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<Best Parameters\>\"", " ", "Generated", " ", "with", " ", 
     "NMinimize"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoParams", "=", 
     RowBox[{"params", "/.", 
      RowBox[{
       RowBox[{"NMinimize", "[", 
        RowBox[{
         RowBox[{"eFunc", " ", "@@", " ", "params"}], ",", "params"}], "]"}], 
       "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Compare", " ", "current", " ", "data"}], ",", " ", 
     RowBox[{"auto", "-", 
      RowBox[{"fitted", " ", "data"}]}], ",", " ", 
     RowBox[{"and", " ", "generated", " ", "data"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Fitfunction", "@@", 
            RowBox[{"Prepend", "[", 
             RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
         "SamplingSet"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fitfunction", "@@", 
           RowBox[{"Prepend", "[", 
            RowBox[{"AutoParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
        "SamplingSet"}], ",", "\[IndentingNewLine]", "Data"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.681583907879587*^9, 3.681583908109586*^9}, {
   3.6815841498431664`*^9, 3.6815843369873466`*^9}, {3.6815843715436563`*^9, 
   3.6815844247768803`*^9}, {3.6815845055957317`*^9, 
   3.6815845398777423`*^9}, {3.681585388456995*^9, 3.681585416260584*^9}, {
   3.6815854638012447`*^9, 3.68158558561312*^9}, {3.6815856333774595`*^9, 
   3.6815856567101574`*^9}, {3.681585697816263*^9, 3.6815857095368476`*^9}, {
   3.6815908238964005`*^9, 3.6815908354548683`*^9}, {3.6828752895787106`*^9, 
   3.6828753192775946`*^9}, {3.6828767617321186`*^9, 
   3.6828767631860867`*^9}, {3.6828768492823505`*^9, 
   3.6828768503120255`*^9}, {3.6828850410059423`*^9, 3.682885107966795*^9}, {
   3.6828851904843426`*^9, 3.6828852104902706`*^9}, {3.683040664212844*^9, 
   3.6830406713056135`*^9}, 3.683053624434885*^9, {3.683074224863575*^9, 
   3.6830742270330205`*^9}, {3.683488171174701*^9, 3.6834881803566556`*^9}, {
   3.683541086143239*^9, 3.6835410865385046`*^9}, {3.68354173096402*^9, 
   3.68354175174288*^9}, {3.6835521884124084`*^9, 3.683552189038827*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(-10\\)\[NoBreak] \
through \[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({\\({0.`, 1.`, \
0.629`}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68358448188354*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(-10\\)\[NoBreak] \
through \[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({\\({0.`, 1.`, \
0.629`}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6835844819125695`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Function", "::", "fpct"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Too many parameters in \[NoBreak]\\!\\({p345, p346, \
p347}\\)\[NoBreak] to be filled from \[NoBreak]\\!\\(\\(\\(Function[\\(\\(\\(\
\\({p345, p346, p347}\\)\\), \\(\\(N[\\(\\(Mean[\\(\\(\\((\\(\\(\\(\\((\\(\\(\
\\(Apply[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) \
&\\))\\)\\)/@SamplingSet\\)\\) - \
Data)\\)\\^2\\)\\)]\\)\\)]\\)\\)\\)\\)]\\)\\)[\\(\\({0.`, 1.`, 0.629`}\\)\\)]\
\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Function/fpct\\\", ButtonNote -> \
\\\"Function::fpct\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683584481960588*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Function", "::", "fpct"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Too many parameters in \[NoBreak]\\!\\({p345, p346, \
p347}\\)\[NoBreak] to be filled from \[NoBreak]\\!\\(\\(\\(Function[\\(\\(\\(\
\\({p345, p346, p347}\\)\\), \\(\\(N[\\(\\(Mean[\\(\\(\\((\\(\\(\\(\\((\\(\\(\
\\(Apply[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) \
&\\))\\)\\)/@SamplingSet\\)\\) - \
Data)\\)\\^2\\)\\)]\\)\\)]\\)\\)\\)\\)]\\)\\)[\\(\\(\\(\\(-10\\)\\), \\(\\(-1\
\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Function/fpct\\\", ButtonNote -> \
\\\"Function::fpct\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683584481995613*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pkspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \
\[NoBreak]\\!\\(\\(\\(Function[\\(\\(\\(\\({p345, p346, p347}\\)\\), \\(\\(N[\
\\(\\(Mean[\\(\\(\\((\\(\\(\\(\\((\\(\\(\\(Apply[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) &\\))\\)\\)/@SamplingSet\\)\\) - \
Data)\\)\\^2\\)\\)]\\)\\)]\\)\\)\\)\\)]\\)\\)[\\(\\(\\(\\(-10\\)\\), \\(\\(-1\
\\)\\)\\)\\)]\\)\[NoBreak] cannot be used as a part specification. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Part\\\", ButtonNote -> \
\\\"Part::pkspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683584482058654*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(-10\\)\[NoBreak] \
through \[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({\\({0.`, 1.`, \
0.629`}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683584482087676*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Function", "::", "fpct"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Too many parameters in \[NoBreak]\\!\\({p345, p346, \
p347}\\)\[NoBreak] to be filled from \[NoBreak]\\!\\(\\(\\(Function[\\(\\(\\(\
\\({p345, p346, p347}\\)\\), \\(\\({\\(\\(0.01`\\\\ \\(\\((\\(\\(0.02`\\\\ \
2.718281828459045`\\^\\(0.01`\\\\ p346\\)\\\\ \\(\\(Cos[\\(\\(0.01`\\\\ \
p345\\)\\)]\\)\\)\\\\ \\(\\((\\(\\(-3.610600095363894`\\)\\) + p347 + \
\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(0.04`\\\\ \
2.718281828459045`\\^\\(0.02`\\\\ p346\\)\\\\ \\(\\(Cos[\\(\\(0.02`\\\\ \
p345\\)\\)]\\)\\)\\\\ \\(\\((\\(\\(-3.619206524629098`\\)\\) + p347 + \
\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(0.06`\\\\ \
2.718281828459045`\\^\\(0.03`\\\\ p346\\)\\\\ \\(\\(Cos[\\(\\(0.03`\\\\ \
p345\\)\\)]\\)\\)\\\\ \\(\\((\\(\\(-3.6280817680227253`\\)\\) + p347 + \\(\\(\
\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(0.08`\\\\ \
2.718281828459045`\\^\\(0.04`\\\\ p346\\)\\\\ \\(\\(Cos[\\(\\(0.04`\\\\ \
p345\\)\\)]\\)\\)\\\\ \\(\\((\\(\\(-3.637231564852779`\\)\\) + p347 + \
\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(0.1`\\\\ \
2.718281828459045`\\^\\(0.05`\\\\ p346\\)\\\\ \\(\\(Cos[\\(\\(0.05`\\\\ \
p345\\)\\)]\\)\\)\\\\ \\(\\((\\(\\(-3.646661749884801`\\)\\) + p347 + \
\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(\[LeftSkeleton] 42 \
\[RightSkeleton]\\)\\) + \\(\\(0.96`\\\\ 2.718281828459045`\\^\\(0.48`\\\\ \
p346\\)\\\\ \\(\\(Cos[\\(\\(0.48`\\\\ p345\\)\\)]\\)\\)\\\\ \
\\(\\((\\(\\(-4.417657804110118`\\)\\) + p347 + \\(\\(\\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Sin[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \
\\(\\(0.98`\\\\ 2.718281828459045`\\^\\(0.49`\\\\ p346\\)\\\\ \
\\(\\(Cos[\\(\\(0.49`\\\\ p345\\)\\)]\\)\\)\\\\ \
\\(\\((\\(\\(-4.446870166236814`\\)\\) + p347 + \\(\\(\\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Sin[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \
\\(\\(1.`\\\\ 2.718281828459045`\\^\\(0.5`\\\\ p346\\)\\\\ \
\\(\\(Cos[\\(\\(0.5`\\\\ p345\\)\\)]\\)\\)\\\\ \
\\(\\((\\(\\(-4.476744386224474`\\)\\) + p347 + \\(\\(\\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Sin[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(\
\[LeftSkeleton] 50 \[RightSkeleton]\\)\\))\\)\\)\\)\\), \\(\\(0.01`\\\\ \
\\(\\((\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\) + \\(\\(\[LeftSkeleton] \
49 \[RightSkeleton]\\)\\) + \\(\\(\[LeftSkeleton] 50 \
\[RightSkeleton]\\)\\))\\)\\)\\)\\), \\(\\(0.01`\\\\ \\(\\((\\(\\(2\\\\ \
\\(\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\\))\\)\\)\\)\\) + \\(\\(\
\[LeftSkeleton] 49 \[RightSkeleton]\\)\\) + \\(\\(\[LeftSkeleton] 50 \
\[RightSkeleton]\\)\\))\\)\\)\\)\\)}\\)\\)\\)\\)]\\)\\)[\\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Function/fpct\\\", \
ButtonNote -> \\\"Function::fpct\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6835844821317043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Function", "::", "fpct"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Too many parameters in \[NoBreak]\\!\\({p345, p346, \
p347}\\)\[NoBreak] to be filled from \[NoBreak]\\!\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Function/fpct\\\", ButtonNote -> \
\\\"Function::fpct\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683584482166726*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pkspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\[NoBreak] cannot be used as a part specification. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Part\\\", ButtonNote -> \
\\\"Part::pkspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6835844822477818`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1yw1M1HUcx/EbTzI85EGeDg55mMihgCHEg5f44eGEA4/jnjgkCCOpbsV4
TkTCI1EkGInoImD4PClOnipLCHdqiLLFHBGiVKOTMRQQEzpDkVXr9/1vv/33
+r1/H6+sXHm2CYfD2ffv+e////d051RApeQTAxfsAh2m07XeS2RL3Px7uk9q
Yc1si3D/8V+5PLIDKs89WE33J7tAuLgmMgZkPlaCm2/eUJI9scXD9dbvGrI3
XhaVVzcdIm9E6qnMzOVT5E0wlfEvrerIArz51Gz48o/kzXiWc0Rq9RvZH/KH
0m+djeRAzPlUfX7fZh3za8g88ahFsZkcBHOzldJqEXkbuo0hxvK3ycEovutr
CCsnhyBY1uX1fTP5dZz02XDJtJccCuvmvUUb7pPDkF6wrZm7TA7H8k+iHSM8
G+YI9ETk1RYKydvRf3tsaCmDLIQyzjUxrYL8Bv4oO5zXdpG8Ax0Ht3Y+HCJH
wvBCWGv7J3knrk0sD/O4tszAoQ9fDQg8mbUAr72/6rsQ6lEIa287cFtMPQpj
A25Wb2VSj8ag/kBXaTH1aOieYN6zlnoM8kReCYrz1GNgpbFPc+ijHouyNs3V
d3+mHosrjxesJXPURfCpfm4xZG7Hugh1jgUZkx7MnF3osrQYPbGd+i4o1RvD
plTU42Az655xL596HHxXwjfl1lGPx4T4VllHO/V4xAWGqhrvUBfjr08DOrbO
UBcjpKbp+P419qwnwC/ijk2hL7M2AUWG/WKfeOqJEIpns+s11BMhazVp7K2h
vhtOUYnuFzqo78bJKIdI2Qh1CdLOVkgGjNQlyJSe/tKUv571JARMFPbZRDNr
k9AwYf987n3qUoyYdU60Hqcuhfxx+6LgKvVkXHivc7TOwIxkdOt6PEa5Dux9
Ms7P2FeshDHrk+H02dmutfuYOTI4Bn+Tb17PDBlcFoMb5q/RXgZ5vm5hcJ72
MsgUaTmN7o5sL4d5bMRqVhIz5DAU2J3ZomXWysGpqUw39jDr5ejlu4oHp2mv
wJ6ixKpzbk5sr4DdeF1srYxZq0CTb1bvsWPMegVK7ikDW/TMHCUmo+yeDS3T
XgnLuOx3eCHObK/EF6EJczW5zHolrr+cNfHVMXNUSDjS6bfwiBkqLGWFL8wI
XNheBdf6nCcuGma9Cm0ffDx8+CtmTgocrk9GB84zIwUvXqWvdQ/isX0KxjTm
S8qPmPUp8M4R/vLgB2aOGsbxyw1fm7myvRouArXnlIRZq4ayu7Qkv5FZr0br
jTMX904xc1JR0VLffyXIje1TwRVJDSVaZm0q4v3WRevuMutTIaj0d07x5rP9
HhytELQdLObjH+uCkMw=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1ywlM02ccxvGGS8MNQ6GlSCEiFRHlGOfEh6NCwVJ6MwLimGxrNoJcHqis
DAwiBESDEiF4TAOOU5xzwiQdG4okI8YxQZnGFEJQQJwQGMjIWPb+/smbfz7v
933c0rPkGUYcDufA2vnv///3dvfY9hLJNwZLsAu0Gk9UuM+T16P374luqZkV
sy2CvEf+tOSSHVB89dlqijfZCaFz68KjQOZjxb/ul14lWQAvV979F1qyO97n
FZZd/Jq8GZqatLSlGvIWGMv4jastZCGS35oMtv5K9sK7zJNS8+dkb8jHpLcd
F8g+mPYovfDUxpp5J9LOvqpXeJF9YWqyUlAmIvvh5kLAQuEnZH/kP/I0BBWS
AxAg63D7sY78IWo8NjUad5EDYVW3P2/TU3IQUnL86iyXyMFY/k206zHXhjkE
t0IOVuSGkUPR0/9kYD6VHAZVDC8+uYj8EQzHiw82XSfvQsexHe1jA+RwjC2H
Vdj+Rd6NntGlQa6lLTOg++qfPqGAWQfwmu+V3gmgHoHg5qaj/WLqERjuczbf
l0Y9Ev36ox0F+dQj0foGM4IK6lHIFrnFKb6lHgULrX2yQzf1aJxo0t797Hfq
0bjzetZKMk1dBM+yRbMBUzvWRajakJP60pWZswed682GzoZS3wO1ZnPQuIp6
DOymXFKHs6nHQLgSvCWrknosnovvH29rph4LsU+gqvYhdTEWT29v2zFJXYzA
8otnDq+zZz0O20Ie2uR6MuvicMhwWOwRSz0e4eKpjGot9XgoG4xqu8qp74VT
RLzLtTbqe3EhwiFc9pi6BPuuFEn6FqhLkC69dMOY/wHrCdg5mtttE8msS8D5
UfvF6S+oS/HEpH204Qx1KVSvm+eEd6knovHz9qFKAzMScbul03XI0oG9X+uT
9kUrQcz6RPCqrnRYHGDmyMD1/z7btJoZMvDn/M/N9NBeBnV2y+yDGdqvWZGc
Weuyge3lMI8OWU1PYIYcEzl2l7fpmHVymJSXpCx0Muvl0PN54gcTtFcgLS++
9KrzRrZXYONIZXSFjFmnwCXP9K5Tp5j1ChQOK33q9cwcJSYi7N4NLNFeCeuY
jE+5AY5sr0RDYNx0eRazXon+91NGni3MHBVkJ9u3zr5ihgrL6cGzk0IntldB
UJ35xknLrFeh48sTg8XfMXPU4P/8MtJnhhlqGK2mWLj4ctlejRda03nlIWa9
Gl6ZYX88+4mZo8HqSOu5WyY8ttdAINQIxiXMOg1SbhYcya5l1mvQ2Hv5+v5x
Zk4STtdX3/vB15ntk+AgkhqO6Jh1SZBvtY5secSsT4Jfibej2p3P9h+jqkjY
dCyfj38B0WCQ+A==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.435393623831263},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{},
  PlotRange->{{0., 100.}, {3.610600095363894, 7.114729526016517}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.6835417522141943`*^9}, 
   3.683584482512956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dispGradientRange", "=", "3."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dispGradientThresh", "=", "1.5"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradient", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"1", ",", "2", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"2", ",", "3", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"3", ",", "1", ",", "dispGradientThresh"}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.6834827674949846`*^9, 3.6834827724803104`*^9}, {
  3.6834828277811995`*^9, 3.683482833842241*^9}, {3.6834831095158396`*^9, 
  3.683483126677289*^9}, {3.683483342535281*^9, 3.683483348471242*^9}, {
  3.683541120765334*^9, 3.683541135063873*^9}}],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.683586643390905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwNw8mO0gAAAFCGZQChO9CFAt0LXSnQhQItdEGgbGMCh7nMZBL1pHPx6hcY
/8KTMcb5Af015yWPfXp+95TP5XLfXxde12/yHE4IJOVqOly6HYpSq1a3JLlR
fYNVqhQEkyBEACBeB6BiCSwUJwNFpNq2oqLlijWffbn/sQ3CaRKrDKv0mH6n
K9MdR9VMQWRbuMELGstJbVrneD9NmGarizXm1iic2CvHXdrOfhXNhla2XAXj
CXJb3oXLZOrH3jT1Z+vZPHK9QxS/3H24P51Hct/TjQ6KtWGERlDfHE4N85yu
T0kK5AvHOOEJ8vFyvWb7yy77d/282LydrdNguymAQAmGKhh6i8BlFMkDdazb
KUJgtYHBbcqNVgjdRjt0HW8NJuMm02uxjGAaBM+RAk+JQlsSaVnq9OWeMmBU
hdVUTtd4QwdJQhyakjWURxbOsQCB11pNxZ6Mg8UkDJbZLjrsb+o1exl+3P4a
znzdc8Pd1osjZ7Vc7TPTnxpTD6LI5+Of95uf6fmUXS9/H759Ovz+eveSnI6q
Y2uuEx8Pm0VweXz4DwKsUPc=
              "]], 
             
             PolygonBox[{{176, 78, 79, 114}, {102, 81, 71, 169}, {146, 96, 86,
               191}, {106, 74, 85, 108}, {108, 85, 95, 190}, {174, 77, 78, 
              111}, {110, 86, 76, 173}, {173, 76, 77, 109}, {169, 71, 72, 
              101}, {170, 72, 73, 103}, {172, 73, 74, 106}, {114, 79, 90, 
              116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7663828605875176, 0.2783322162818792, 0.05204309905278229], 
           GraphicsGroupBox[{
             
             PolygonBox[{{101, 82, 169}, {108, 84, 106}, {173, 87, 110}, {195,
               87, 113}, {169, 82, 102}, {107, 84, 133}, {190, 84, 108}, {116,
               89, 114}, {117, 82, 182}, {182, 82, 105}, {115, 89, 158}, {158,
               89, 204}, {143, 87, 195}, {114, 89, 176}, {106, 84, 172}, {109,
               87, 173}}], 
             
             PolygonBox[{{175, 174, 111, 112}, {147, 146, 191, 192}, {171, 
              170, 103, 104}}], 
             
             PolygonBox[{{192, 191, 110, 87, 143}, {112, 111, 176, 89, 115}, {
              204, 89, 116, 164, 165}, {105, 82, 101, 170, 171}, {133, 84, 
              190, 139, 140}, {113, 87, 109, 174, 175}, {178, 177, 102, 82, 
              117}, {104, 103, 172, 84, 107}, {121, 91, 125, 177, 178}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8029657077933638, 0.3432058232293944, 0.08675140800998064], 
           GraphicsGroupBox[{
             
             PolygonBox[{{150, 88, 201}, {175, 88, 113}, {104, 83, 171}, {126,
               83, 188}, {107, 83, 104}, {171, 83, 105}, {165, 100, 204}, {
              112, 88, 175}, {115, 88, 112}}], 
             
             PolygonBox[{{144, 143, 195, 196}, {134, 133, 140, 141}, {122, 
              121, 178, 179}, {148, 147, 192, 193}, {193, 192, 143, 144}, {
              179, 178, 117, 118}, {118, 117, 182, 183}}], 
             
             PolygonBox[{{183, 182, 105, 83, 126}, {201, 88, 115, 158, 159}, {
              159, 158, 204, 100, 166}, {188, 83, 107, 133, 134}, {196, 195, 
              113, 88, 150}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8395485549992099, 0.40807943017690956`, 0.12145971696717899`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{127, 126, 188, 189}, {180, 179, 118, 119}, {160, 
              159, 166, 167}, {145, 144, 196, 197}, {149, 148, 193, 194}, {
              189, 188, 134, 135}, {194, 193, 144, 145}, {197, 196, 150, 
              151}, {184, 183, 126, 127}, {151, 150, 201, 202}, {119, 118, 
              183, 184}, {202, 201, 159, 160}, {123, 122, 179, 180}, {135, 
              134, 141, 142}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8780733399749292, 0.5041588649308337, 0.2181942080887163], 
           GraphicsGroupBox[{
             
             PolygonBox[{{135, 94, 189}, {142, 94, 135}, {145, 97, 194}, {194,
               97, 149}}], 
             
             PolygonBox[{{181, 180, 119, 120}, {152, 151, 202, 203}, {185, 
              184, 127, 128}, {124, 123, 180, 181}, {203, 202, 160, 161}, {
              198, 197, 151, 152}, {120, 119, 184, 185}, {161, 160, 167, 
              168}}], 
             
             PolygonBox[{{128, 127, 189, 94, 136}, {155, 97, 145, 197, 
              198}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9174278503207856, 0.613571511195855, 0.3414304222587004], 
           GraphicsGroupBox[{
             
             PolygonBox[{{168, 99, 161}, {181, 92, 124}, {161, 99, 203}, {120,
               92, 181}}], 
             
             PolygonBox[{{156, 155, 198, 199}, {199, 198, 152, 153}, {129, 
              128, 136, 137}, {186, 185, 128, 129}}], 
             
             PolygonBox[{{153, 152, 203, 99, 162}, {131, 92, 120, 185, 
              186}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9567823606666418, 0.7229841574608762, 0.4646666364286845], 
           GraphicsGroupBox[{
             
             PolygonBox[{{200, 199, 153, 154}, {154, 153, 162, 163}, {187, 
              186, 129, 130}, {157, 156, 199, 200}, {130, 129, 137, 138}, {
              132, 131, 186, 187}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.8431369999999999, 0.5999999999999999], 
           GraphicsGroupBox[{
             
             PolygonBox[{{138, 93, 130}, {163, 98, 154}, {187, 93, 132}, {154,
               98, 200}, {200, 98, 157}, {130, 93, 187}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{132, 187, 130, 138}], 
             LineBox[{157, 200, 154, 163}]}, "350"], 
           Annotation[#, 350, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{162, 153, 199, 156}], 
             LineBox[{131, 186, 129, 137}]}, "300"], 
           Annotation[#, 300, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{124, 181, 120, 185, 128, 136}], 
             LineBox[{155, 198, 152, 203, 161, 168}]}, "250"], 
           Annotation[#, 250, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{149, 194, 145, 197, 151, 202, 160, 167}], 
             LineBox[{123, 180, 119, 184, 127, 189, 135, 142}]}, "200"], 
           Annotation[#, 200, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{166, 159, 201, 150, 196, 144, 193, 148}], 
             LineBox[{122, 179, 118, 183, 126, 188, 134, 141}]}, "150"], 
           Annotation[#, 150, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{121, 178, 117, 182, 105, 171, 104, 107, 133, 140}], 
             
             LineBox[{147, 192, 143, 195, 113, 175, 112, 115, 158, 204, 
              165}]}, "100"], Annotation[#, 100, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{125, 177, 102, 169, 101, 170, 103, 172, 106, 108, 190, 
              139}], 
             
             LineBox[{164, 116, 114, 176, 111, 174, 109, 173, 110, 191, 
              146}]}, "50"], Annotation[#, 50, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0., 1.}], 
        ArrowBox[{{0., 1.}, {-0.0062862063307488735`, 1.}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7663828605875177, 
                0.2783322162818792, 0.05204309905278229}}, {{
                0.8029657077933638, 0.3432058232293944, 
                0.08675140800998064}}, {{0.83954855499921, 0.4080794301769095,
                 0.12145971696717899`}}, {{0.8780733399749292, 
                0.5041588649308337, 0.2181942080887163}}, {{
                0.9174278503207854, 0.6135715111958547, 
                0.3414304222587003}}, {{0.9567823606666418, 
                0.7229841574608762, 0.46466663642868455`}}, {{1., 0.843137, 
                0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.}, {7.5, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{
                    7.5, -22.500000000000007`}, 
                    Offset[{4., 0}, {7.5, -22.500000000000007`}]}, {{7.5, 
                    22.500000000000007`}, 
                    Offset[{4., 0}, {7.5, 22.500000000000007`}]}, {{7.5, 
                    67.49999999999999}, 
                    Offset[{4., 0}, {7.5, 67.49999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.500000000000007`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.500000000000007`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["350", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.027895889481561565`", ",", "379.9081146653228`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "50.`", ",", "100.`", ",", "150.`", ",", "200.`", ",", 
                 "250.`", ",", "300.`", ",", "350.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxdlAtMlWUYgH8uPxwR8a8UYcwIlWYbLjaFyCx+NUi0JShmpKGCosTUTfDa
dKjhDZ2ZVhpJWzU0pvNMm2Ie5R86pymQc4aGSgeVUQiBBy/IpTrY87LvfNsZ
e/bwvXvOt503ImPptAXemqZ1/fdx//3/WKN7j7/1/gz3eVgOz+zle8LP/t3u
gKc/8/Fw6rP7wj3/9B4Pr5vwj6XuE2Cq8w0P1qzbt9zHS/pg+mD6YPpg+mD6
VK+bMH3qfMODNev559yno5w+mD6YPpg+mD6YPtXrJkyfOt/wYM2qvuw+96UP
pg+mD6YPpg+mT/W6CdOnzjc8WLMae9+zUvpg+mD6YPpg+mD6VK+bMH3qfMOD
Nev4KfepjacPpg+mD6YPpg+mT/W6CdOnzjc8WLP27nOfNumD6YPpg+mD6YPp
U71uwvSp8w0P1qwJb7tPl/TB9MH0wfTB9MH0qV43YfrU+YYHa9aKle7jY9IH
0wfTB9MH0wfTp3rdhOlT5xserFmVvb8Xm/TB9MH0wfTB9MH0qV43YfrU+Ybp
2dNVdW36gSBf2Ycwfaq3O2D6YPpg+lSvmzB96nxDmL7DM7/onrVMkz6YPtXb
HTB9MH0wfarXTZg+db4hTF9W/syD0asfy76B6VO93QHTB9MH06d63YTpU+cb
wvRd2xj2amFeu/xeYPpUb3fA9MH0wfSpXjdh+tT5hjB9SQEb3giI7BH+O88n
O+5nb/n94GE8/XhYvW93qPftDjzfDw/j+b54GM/3x8Pqfd1U7+smnvfBw2q/
Yar9hnjeKy3/1rQfjunCKfll/s58m7wfHsbzXnhYvW93qPftDjzvhYfxvBce
xvNeeFi9r5vqfd3E8154WO03TLXfEL/rtYTxjcc7ZL9VhcaM+iSkRbhtS/mR
KZuuCJ+MaHqaPuKG7LPQ3AXZFa5W4bNDjUGLizuFY+d/VFc4wkf22faTR8c4
V9uE64Ns22KrBwjvdy2J7xrZLfvMNencnpR1D4SHrc46WPRenbCRucX3xbLz
sr9Cl6z8bbZPk/CJeQ2D06KeCEdvmvTH+hwv2V8Ftftjaiw/4dpo17ao4EDh
1KWJX4Uv6pH9VXqu6H7eaZdwz+j6jXsi64XLAvYV+q07Kfvq0IoLLwcXNApr
DUFnYpofCc+4MHtM6yVN9lXp0KNbEyL8+vZZrn/d1yv6C58dvO7joMhu2Veh
OVfLM9c8ED7l9X3q3bfqhG+nDDy0vea87KfLr6Tlx/VvEt4VX/NXYvQT4aEP
rV9WLfaS/bRscvBLVRV+whe+zVk+PCRQuOP1CtvY8B7ZP/M/fHPZ1epHsn+m
7hySvjPPJT5vTuTOlMmN4pMu3si6uNsp/klyfpXzwAnxGXNv5s4JPCP7JXZK
QVja3HrZL/Ocv050Bv8pPjF5cVzN7y7xs8J2vxsW+1h869Mhd9YX9Ij3uVPc
mdGqyX6pnOZMDN7rK/vlg7j25LIEP/HDDsZ+k9PcT/zhHUklA4r6i1/VXdhm
TRgoflzL6KSSzZ2yX6a2rK2Lau7bT59P3FrcebNV/KTNJdm+BQ3iizPXVE+8
eF18XPgLCW1PvxMf+E50bZbziuyPjOG+40si78r+qF3VXGFLbBE/yxF1ae3p
dvEhCyMCj1R2iNcX1iwfuahv/zhtWbVR47xlf1y3jf8su1/f/olNPxW9YZe/
+FHpX947k963f7YfMzbVNASK//RY09hBPw0U/y9ZNBeh
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{35, 46, 45}, {46, 35, 36}, {47, 36, 37}, {42, 31, 
              32}, {132, 61, 208}, {131, 62, 209}, {45, 34, 35}, {139, 69, 
              216}, {133, 63, 210}, {138, 68, 215}, {44, 33, 34}, {68, 57, 
              58}, {38, 49, 48}, {42, 53, 52}, {41, 52, 51}, {39, 50, 49}, {
              37, 48, 47}, {43, 32, 33}, {124, 34, 201}, {70, 59, 60}, {48, 
              37, 38}, {137, 67, 214}, {135, 65, 212}, {57, 46, 47}, {49, 38, 
              39}, {55, 44, 45}, {53, 42, 43}, {64, 53, 54}, {54, 43, 44}, {
              66, 55, 56}, {60, 49, 50}, {52, 41, 42}, {63, 52, 53}, {50, 39, 
              40}, {69, 58, 59}, {136, 66, 213}, {134, 64, 211}, {36, 47, 
              46}, {58, 69, 68}, {59, 48, 49}, {56, 45, 46}, {62, 51, 52}, {
              58, 47, 48}, {65, 54, 55}, {59, 70, 69}, {123, 33, 200}, {32, 
              43, 42}, {121, 32, 199}, {31, 42, 41}, {57, 68, 67}, {49, 60, 
              59}, {125, 35, 202}, {127, 37, 204}, {130, 40, 207}, {129, 39, 
              206}, {128, 38, 205}, {126, 36, 203}, {48, 59, 58}, {67, 56, 
              57}, {51, 62, 61}, {46, 57, 56}, {55, 66, 65}, {44, 55, 54}, {
              54, 65, 64}, {47, 58, 57}, {56, 67, 66}, {45, 56, 55}, {43, 54, 
              53}, {53, 64, 63}, {52, 63, 62}, {34, 45, 44}, {33, 44, 43}}], 
             
             PolygonBox[{{202, 35, 34, 124}, {203, 36, 35, 125}, {199, 32, 31,
               122}, {201, 34, 33, 123}, {204, 37, 36, 126}, {200, 33, 32, 
              121}, {211, 64, 65, 135}, {209, 62, 63, 133}, {214, 67, 68, 
              138}, {208, 61, 62, 131}, {206, 39, 38, 128}, {210, 63, 64, 
              134}, {216, 69, 70, 140}, {213, 66, 67, 137}, {215, 68, 69, 
              139}, {212, 65, 66, 136}, {205, 38, 37, 127}, {207, 40, 39, 
              129}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7919336506499893, 0.3236423011526482, 0.07628464347382614], 
           GraphicsGroupBox[{
             
             PolygonBox[{{117, 27, 195}, {133, 73, 209}, {136, 76, 212}, {137,
               77, 213}, {138, 78, 214}, {155, 78, 231}, {135, 75, 211}, {153,
               77, 229}, {151, 76, 227}, {149, 75, 225}, {157, 79, 233}, {143,
               71, 217}, {140, 80, 216}, {141, 72, 219}, {121, 22, 200}, {147,
               74, 223}, {145, 73, 221}, {139, 79, 215}, {134, 74, 210}, {131,
               72, 208}, {111, 22, 190}, {114, 24, 192}, {127, 27, 205}, {124,
               24, 202}, {113, 23, 191}, {115, 25, 193}, {116, 26, 194}, {120,
               30, 198}, {126, 26, 204}, {123, 23, 201}, {128, 28, 206}, {129,
               29, 207}, {118, 28, 196}, {122, 21, 199}, {125, 25, 203}, {119,
               29, 197}}], 
             
             PolygonBox[{{201, 23, 24, 124}, {205, 27, 28, 128}, {203, 25, 26,
               126}, {206, 28, 29, 129}, {202, 24, 25, 125}, {233, 79, 80, 
              159}, {204, 26, 27, 127}, {191, 23, 22, 111}, {199, 21, 22, 
              121}, {207, 29, 30, 130}, {193, 25, 24, 114}, {200, 22, 23, 
              123}, {194, 26, 25, 115}, {197, 29, 28, 118}, {190, 22, 21, 
              112}, {192, 24, 23, 113}, {217, 71, 72, 141}, {212, 76, 75, 
              135}, {221, 73, 74, 147}, {196, 28, 27, 117}, {209, 73, 72, 
              131}, {210, 74, 73, 133}, {211, 75, 74, 134}, {208, 72, 71, 
              132}, {214, 78, 77, 137}, {216, 80, 79, 139}, {215, 79, 78, 
              138}, {213, 77, 76, 136}, {231, 78, 79, 157}, {229, 77, 78, 
              155}, {219, 72, 73, 145}, {227, 76, 77, 153}, {223, 74, 75, 
              149}, {198, 30, 29, 119}, {225, 75, 76, 151}, {195, 27, 26, 
              116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8467160848861445, 0.4207898546568075, 0.12825997612622878`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{108, 18, 187}, {118, 18, 197}, {119, 19, 198}, {110,
               20, 189}, {107, 17, 186}, {109, 19, 188}, {103, 13, 182}, {101,
               12, 181}, {112, 11, 190}, {113, 13, 192}, {117, 17, 196}, {116,
               16, 195}, {115, 15, 194}, {114, 14, 193}, {106, 16, 185}, {105,
               15, 184}, {111, 12, 191}, {104, 14, 183}}], 
             
             PolygonBox[{{222, 221, 147, 148}, {187, 18, 17, 107}, {186, 17, 
              16, 106}, {188, 19, 18, 108}, {198, 19, 20, 120}, {197, 18, 19, 
              119}, {228, 227, 153, 154}, {191, 12, 13, 113}, {195, 16, 17, 
              117}, {224, 223, 149, 150}, {192, 13, 14, 114}, {189, 20, 19, 
              109}, {194, 15, 16, 116}, {226, 225, 151, 152}, {196, 17, 18, 
              118}, {154, 153, 229, 230}, {185, 16, 15, 105}, {184, 15, 14, 
              104}, {183, 14, 13, 103}, {156, 155, 231, 232}, {152, 151, 227, 
              228}, {232, 231, 157, 158}, {158, 157, 233, 234}, {234, 233, 
              159, 160}, {150, 149, 225, 226}, {230, 229, 155, 156}, {148, 
              147, 223, 224}, {142, 141, 219, 220}, {182, 13, 12, 101}, {220, 
              219, 145, 146}, {146, 145, 221, 222}, {218, 217, 141, 142}, {
              190, 11, 12, 111}, {144, 143, 217, 218}, {181, 12, 11, 102}, {
              193, 14, 15, 115}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9053623713493014, 0.5800273006054154, 0.3036481213857891], 
           GraphicsGroupBox[{
             
             PolygonBox[{{156, 88, 230}, {106, 6, 186}, {107, 7, 187}, {104, 
              4, 184}, {173, 87, 247}, {108, 8, 188}, {171, 86, 245}, {167, 
              84, 241}, {109, 9, 189}, {103, 3, 183}, {163, 81, 235}, {165, 
              83, 239}, {161, 82, 237}, {101, 2, 182}, {105, 5, 185}, {177, 
              89, 251}, {142, 82, 218}, {175, 88, 249}, {158, 89, 232}, {160, 
              90, 234}, {152, 86, 226}, {154, 87, 228}, {148, 84, 222}, {102, 
              1, 181}, {169, 85, 243}, {146, 83, 220}, {150, 85, 224}}], 
             PolygonBox[{{187, 7, 8, 108}, {188, 8, 9, 109}, {185, 5, 6, 
              106}, {224, 85, 84, 148}, {189, 9, 10, 110}, {226, 86, 85, 
              150}, {182, 2, 3, 103}, {228, 87, 86, 152}, {239, 83, 84, 
              167}, {222, 84, 83, 146}, {234, 90, 89, 158}, {183, 3, 4, 
              104}, {243, 85, 86, 171}, {241, 84, 85, 169}, {245, 86, 87, 
              173}, {247, 87, 88, 175}, {181, 1, 2, 101}, {232, 89, 88, 
              156}, {249, 88, 89, 177}, {251, 89, 90, 179}, {237, 82, 83, 
              165}, {186, 6, 7, 107}, {184, 4, 5, 105}, {220, 83, 82, 142}, {
              235, 81, 82, 161}, {218, 82, 81, 144}, {230, 88, 87, 154}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9642953423886204, 0.7438716035075518, 0.4881930738410208], 
           GraphicsGroupBox[{
             
             PolygonBox[{{248, 247, 175, 176}, {174, 173, 247, 248}, {178, 
              177, 251, 252}, {166, 165, 239, 240}, {176, 175, 249, 250}, {
              162, 161, 237, 238}, {168, 167, 241, 242}, {170, 169, 243, 
              244}, {252, 251, 179, 180}, {238, 237, 165, 166}, {250, 249, 
              177, 178}, {246, 245, 173, 174}, {172, 171, 245, 246}, {242, 
              241, 169, 170}, {236, 235, 161, 162}, {244, 243, 171, 172}, {
              240, 239, 167, 168}, {164, 163, 235, 236}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{176, 98, 248}, {166, 93, 238}, {162, 92, 236}, {168,
               94, 240}, {170, 95, 242}, {174, 97, 246}, {172, 96, 244}, {178,
               99, 250}, {180, 100, 252}}], 
             
             PolygonBox[{{242, 95, 94, 168}, {244, 96, 95, 170}, {250, 99, 98,
               176}, {240, 94, 93, 166}, {238, 93, 92, 162}, {236, 92, 91, 
              164}, {248, 98, 97, 174}, {252, 100, 99, 178}, {246, 97, 96, 
              172}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{164, 236, 162, 238, 166, 240, 168, 242, 170, 244, 172, 
              246, 174, 248, 176, 250, 178, 252, 180}]}, "10"], 
           Annotation[#, 10, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{179, 251, 177, 249, 175, 247, 173, 245, 171, 243, 169, 
              241, 167, 239, 165, 237, 161, 235, 163}]}, "8"], 
           Annotation[#, 8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{102, 181, 101, 182, 103, 183, 104, 184, 105, 185, 106, 
              186, 107, 187, 108, 188, 109, 189, 110}], 
             
             LineBox[{144, 218, 142, 220, 146, 222, 148, 224, 150, 226, 152, 
              228, 154, 230, 156, 232, 158, 234, 160}]}, "6"], 
           Annotation[#, 6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{112, 190, 111, 191, 113, 192, 114, 193, 115, 194, 116, 
              195, 117, 196, 118, 197, 119, 198, 120}], 
             
             LineBox[{159, 233, 157, 231, 155, 229, 153, 227, 151, 225, 149, 
              223, 147, 221, 145, 219, 141, 217, 143}]}, "4"], 
           Annotation[#, 4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{122, 199, 121, 200, 123, 201, 124, 202, 125, 203, 126, 
              204, 127, 205, 128, 206, 129, 207, 130}], 
             
             LineBox[{132, 208, 131, 209, 133, 210, 134, 211, 135, 212, 136, 
              213, 137, 214, 138, 215, 139, 216, 140}]}, "2"], 
           Annotation[#, 2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1., 0.1}], 
        ArrowBox[{{1., 0.1}, {1., 0.09622530305709945}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7919336506499893, 
                0.32364230115264814`, 0.07628464347382614}}, {{
                0.8467160848861444, 0.4207898546568075, 
                0.12825997612622878`}}, {{0.9053623713493014, 
                0.5800273006054155, 0.3036481213857892}}, {{
                0.9642953423886204, 0.7438716035075518, 
                0.48819307384102073`}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.00000000000001}, {7.5, 90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -60.}, 
                    Offset[{4., 0}, {7.5, -60.}]}, {{7.5, -30.}, 
                    Offset[{4., 0}, {7.5, -30.}]}, {{
                    7.5, -1.1203851362875822`*^-14}, 
                    Offset[{4., 0}, {7.5, -1.1203851362875822`*^-14}]}, {{7.5,
                     30.}, 
                    Offset[{4., 0}, {7.5, 30.}]}, {{7.5, 59.999999999999986`}, 
                    Offset[{4., 0}, {7.5, 59.999999999999986`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -60.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -30.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -1.1203851362875822`*^-14}], {-1, 
                    0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 30.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 59.999999999999986`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.06458277106188802`", ",", "10.211703974250959`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "2.`", ",", "4.`", ",", "6.`", ",", "8.`", ",", "10.`"}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxll3s0lOkfwMdcXdpckqRIZVOiJOmq58mtknIpv6LbRkq1lVRIG1GpxKaW
iKgNoWh1kxTPG4pVFI0UJopFLrmPZTC/tOf7Omfm+8+cz3necT7ve2a+HzPV
5aCDG5PBYCyWYTBGXuf/GB7F+DGy1CfByMjQrKI8Mv0E+M3rkWmluenH9cU0
ZzwdmSoEHHV1ZDppNrMYmUGavbxHhoWBi3/8fVmawe/O7ZFh0n7A4AcMfsDg
Bwx+wOAHDH7A4AcMfsDgl/qDBwj4AYMfMPgBgx8w+AGDHzD4AYMfMPgBgx/z
x/PsoP2AwQ8Y/IDBDxj8gMEPGPyAwQ8Y/IDBb5vjyJTTfsDgBwx+wOAHDH7A
4AcMfsDgBwx+wOBn8x8j8AMGP2DwAwY/YPADBj9g8AMGP2DwAwY/kXhk2mk/
YPADBj9g8AMGP2DwAwY/YPADBj9g8Ev+7/NI+wGDHzD4AYMfMPgBgx8w+AGD
HzD4AYNfyn/fZwx+wOAHDH7A4AcMfsDgBwx+wOAHDH7AEvsZS+xnLLGfscR+
xhL7GUvsZyyxn7HEfsYS+xlL7GccFG9aXmDJGu2Hc1dcA48r1ZNwl3Pxd9ey
KLv/OVlvWMOm9/cfRYNpbQ1cSnKfhmiPiYoJYVGfLby4guTR/nQ41jonLWBI
9WmF8uxHd8RcKt7Dz0sgGqT3feDEm7s5t0Z78dRRY8B8UqdUz1pnn2TaObGo
i3WnYoxlhfT7PedptU+9VSHVuxkzVmkGT2VTmo335AQlLfT1IRkl/a5/5dN8
2vzKfrWh0b5ZDXLHqezhYMmepTzQXFO6g0HtWeZcFjWZSfdjcUWNXWE+m5Lc
58YX02t5C8VEvr7p6vCnIam+lMkuUs6/LSZhqV5WfUfb6PPUsJyqtF4hzYbq
4URf6RXNujNnJSSlsLFkzxoGsz5tWtdJKlPvJlmYMul+jLEVKfrN4VCS+7z4
8J5lN590jfYvaYWSzt4+crHi9ZExG4fonrx9Jr/NRK5Xqjf/zNpqMNNkgPgK
85QqX9cRyZ54LtxybWxYD9H/WvpSewtTqi9d3UzHeae6yZ+vVyXwvvKwZP/s
Y21aLmR9IVPcT3u/pViU5L5XLrfz9VR/T3OLWWBy1LFG+n5Mlr5+EVzdSOTH
8aOPbhZL9elI5ZeKvO2N5OG7lsy9d3rocy3PXRd+6xrtD/g2LTE4v7Cihvxx
avef93JHe3TFKdxpWhYPS/ZRiZuxLvr+LaKz4ENNUBabkuzB4LkDdW8isun9
Whunu0Tr059ExmrzcIX/MJHqz45PFg80y1GAwaUuHCzdo+LLN1laf5fRz1/J
u3x9ifo7mjuU9n67N+clSjr4dLWe/Wi/ni//u2/RFKZUvwqPlfZmitLo+w/5
/GRJ7GY+Qq+uLiLnOfT11/vd7jikjvYO7t/zhZ//weJm5Jx2yzLk+/dIsjdz
LqquznNponvBDh/bcr6yFQkdv4Q3V7+T6puGgoX1zKpvyM/B7n6VsEOqd+EK
c6/PPjf6PJiMkt3qrs1ocMn06Qbr+6V6+GleSPwZpTqag3Lqr9u9bEfXMqt0
o+Yx6D7Kv+Cxa9yl+9kYykDbu+ppzjA+YKyU0o6c52Tr7VDm0tfHZ9Tftn08
2ttCXYHyi0g23VeOuUJxg0Ye3c/KwvdFOY/qpHpZPOudYohSH5q9JXOlVmkX
fR7w0ifqake/VE8NL91978DuR0HzMm2QCoPuaVZ978Ix3Uyp3jbwngjZsX1o
qqqpdqgnhz4XyZk+fVbNo/lyqbzjViMu3d8P4pKGnGPZdF/VlWTedP5VR/fT
Sj/wp41XumhO/e2kce25fpqnJlyM9ksX09z0qGPx2u+vwOfbebkX9Dg0J4i4
rvbBPJqtNpgPHIrk0L3dabd7bMPX13QfWf43lG67t0n1MzLtzA0+xcEWsbkF
Ti1CqZ5umFxSOj6CjQ8/7AkJFQ3R5zf2+HAnDclI9XYgOuKVeTEHB2Q0uyY9
ZdPnX8umahgu5dG8ssE5j3uOQ6k+0A17t4FLvdExvLOXKybBxlneGxM51L25
whxrczZ+sTIgU9+YR7lPr5rbrsakni9IXFc8WURmjB+wyAxgU8sm1vls7xKT
eu5E54BWLrXFL6z0X1cmZb5NoBN6aIgI+rxyZiiIScIir5/fpchQhzjmXde9
mFRyoe8qvLuNRCUHuNf3DZDfWhxdVBYKSe2EtevvmMpQ+8asGEivbCGXs3gZ
0w8wKZsN2vXb+flEuWzsKxUNJkWYQdhCi4Ndplz7LGB9/x3l6jIx87tfnIKc
98NDHeQL1bHkSgWLkn/5c5ZHdzdR1/LfciSKQ3mdNBvSP9pHgstjvD6GiYhv
frBboX8XUbff683/ICay2GlXXoGQVO7XMXLU6yJHeDmvvuV1kz+yb1a0JfcR
g43LDp016yetybo1hrOqyck5Y38LW9dNbjR22p5vfkXqZrep418HSEnFGoOy
YCZ2QBvDrT92kpIXBrd757Px0E/LLe/O6ye2qvHCgSmyeMhjfWq8Uyd5P+RX
okSY1CTHbZWt26rJ4p6gycG72ZQG2zZxc2k9udb8+16WEpdKEhwQ4MMt5Hp2
WOTyehEpZN1+zLGvJXb80Cltcgyq6CPhmqY3kaL7fYsreJ2kKSg6Xr2qhoS7
Wx448FBIeH+5Z2VZtRDxYSMVPbNGYpzkZrn1aDPJYqh1p6gx8I0zhs9qDZqI
UclB/WNxHDwhUUu/37WRsHQL7+7/7pt+ytdyHVVJPstVeMyexqJcmyccL3V7
iaw9Ly0qMuJQ1os0ZUxWPSI2MW9F951FpGDT3Q0xWwtR9r5Q40VnGVTiufjx
dvgF4TSa8ZNVhGSD8+J898e55Ibqy1cJFzvR3hU8rUCDcuRSL1TsGe5FmfYy
NZvFaSRSfcn+oQuDSI7td8/DhE8UVA2nOfgxsI/hnKTbcfGkaFJeaGLG9z3Q
vlMxJLYE6elmOnVGsnBuha15kD2f7Gwzem63joP5kQ2a+r5ZJO5B2sx0Ng+7
zPUspeyfoQ/HZoYpPpXFt7KNPPYV8NFNNa+eOAsm1TL5eqJo5zf0LcN1o/AE
h8qKaZoY5/8ZGZSd/MU0VEzyT2jvSOLVoVVbTiQVzapAFm9rj/IetyGt2Ef5
wop/UNOewEt5CV/QZcaa+mXLO9G3YpcIq9XtKCBFmR87WYiOFUVPeZBeh/Yb
Fpnmxw8guw8K3eKcVuSg03NZxnoQhZarhln/Wo42nI5IGHgrRkV6a/dNyP+M
ZntOquq/I4NLmi/+LlfWhPSntbp6HWThsttl90Q17SjQcUd8wT42TrZMePi+
rxrZF/9ddUHAwWOZPUsHzeqRtqWRqp0tD6/+HKH5k3wzan8WbaP6XBafohaK
NUvb0TubtAUrv/9fnfNaQVSxtg+ln9x8/PmmRERFXikI2NWDcsPa4442N6FD
H8/VrgnqRSGxZ9+elhWiLtY3k5YDPagkPPjspqcDyFjU0ZYztR8tPK7dG5Y+
jLpNqtNtfu1C1m6C/O3LZLBdkJflcWMh+jdET9Fbm4VTy5UqUwb7kfHlMu3N
HA72WZDhUDCpG3nIKy/YH83F7T/PP95iKUSpgbar/efK4l1q6fGKHv3IZGeA
xiotDnVz1djqk/xhZPxR40z0QC5ZrpA3fhxvELmTXGfZS3Xo4CTNr+j0EPJl
TsmryutCweMM+a18EXLkd896EtGPHngGarqtl8HeYYLssHYxEgjNdfoch9H8
YPmQlfeYeFe2KfGtl8H7lq7xEazn4EtGDqlersPowhA2S4ji4d1VWtqBXjLY
rYRhFWfCpXwUBZEoiYV/MY2o89a8gfwEau7DhWzsGzPtRJ/aV6RSeVyl04eD
T7DS4oe3daNr2x/O3RrKwkL+2RbncTLYf6vSkboYDk7zPKhTsI6LaxNvbhwI
4OD/A6bExtY=
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJw1kalOg1EQhf/LUor7W1BtSWi6GFqKoIuireviujiWhAcAAQlYkCwWcGwW
Ak8AHiQvgAXZBNcEzuR+iC83986dmTNn0tu7vZ2JIAi6YlKkREzERUfURUMs
uSDo6XwTLdEP/H1NtHmrk2P3B2Kh8grO138VyyIjsuJCFMRYrIicyItfznNq
Deh3Qu5IfIs5cShK1Mvxt42Oa1EWU87fh8StdpJZ2+g07bPO67hiZsutiB+x
II7Fp/0TB9QI8avKLEW0tqjdwNsO+hLkmY4tsSlW1Xdd5we59rZBzzhzDqnR
xXeLW868cms67wJ/FvH4Fl+izu/AZnwkXkOv1Z6xP+KeHZgHCbRm6WczNNGd
J1Z2XtO72BPTYh+vzbcb8kvoyVG/hE9VvM0QL+JjBE1nzG/ej8m5xIsoO0g7
r+sZP3r4V0ZznR5N7l/4fySe8MH8C9Ef4W8FfYvO7/GFXQ3YQ4gXCTw0nSn2
1udfjLckdWPkRZnh3/s4sRFenIo/Q/A/Hw==
              "]], 
             PolygonBox[CompressedData["
1:eJwt0LFOAkEQxvE9giAd0Y4ciReJjXdoARwVFzsSu0voSEh4AG3IxVZKwFbs
FGwl8ATaY8sD2EKrtfDf3Ff8MruZ3ZnZ9fr38V3GGFNCFn9wUcYEQ61PscOD
1gX8IO8YUyVeYYYVbhDac+SmRB8N5Ni/EK9xgT3maJq0hq31SWwjxqWT3rF3
63jFLyo4xwj/CNTjGSecj4gtfGiGUD2W+MKtZvTIPertFdVe6K6d4Yz8m3pH
qn3spG+1b3jHWLMEmmWAIxSR4ElvdfW3iXK25xYb9NCxfaj9rbWd0We/1l90
UWN/AE4hJ1s=
              "]]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7597140062148782, 0.26650611004890945`, 0.045715962822687306`], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwt0bsrxXEYx/Hnd8gxKIV0LHIsBgwK5ZTFYrEwmOUPcCnJRGxuWdw6kWsm
ctsxY/QHmBSTYjLg/en7GV49T8/v+X0vz7c4PjkykYuIdlRgBU34Qj6L6CMe
4w9d2EVVlvp38IlWLCNHvZu4jw80Ywk1Wfq3jDr3HGLT+/6Y8i2cR+pR7zex
Dev49V6r2HauWoG+EvFMa5APEu9QTz5AvMKpz6+zRJbW3ECRfIh4j+tI922k
1oJ+8gvt43Vu8Kb9sKAzUh8mPuIVDZhDp9d8wCxqMYNe6qPEZ7y7ru+3kc6v
exz5DJp9h/ufsOY5aB491MeIL34nvdciTrxONd8PPE+91RSxEtPY82z1VpeR
7qU5zfteut8/OZU2JA==
              "]], 
             PolygonBox[CompressedData["
1:eJwt0LGOQVEQxvFzRbHZRiPsbQSNAoUEyUo0Go2GQqMRD0AEoSJa4gW28wYS
PWp0sv2WViVegP/EV/xyztw5M/fMSXR6jW7AORdFEA98wccCY3wijD+MEFL+
iqFiqx1gjxqayHjOfaDE/htrnJRro0Buw1pRTYJ4rt7W8x9LJHUnu9sFLdSR
5/xZ/aw+S3zQ3nomiWeqtR53HFVbRZr8D2sOKTjilfb27Ym+Zgtp9oj3nsVm
2mKnXmXEvfeb+PrnFBO9XQw3/Gp2u3OR8y9fLiPR
              "]], 
             
             PolygonBox[{{246, 245, 130, 30, 142}, {266, 265, 152, 49, 164}, {
              157, 52, 172, 272, 273}, {253, 252, 151, 43, 148}, {261, 260, 
              160, 52, 156}, {143, 39, 140, 245, 246}, {137, 34, 150, 252, 
              253}, {277, 276, 162, 57, 177}, {178, 66, 175, 276, 277}, {149, 
              43, 159, 260, 261}, {166, 58, 163, 265, 266}, {273, 272, 173, 
              61, 174}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7923935907487393, 0.3244579285699952, 0.0767210158250374], 
           GraphicsGroupBox[{
             
             PolygonBox[{{291, 67, 181}, {135, 33, 238}, {107, 3, 109}, {238, 
              33, 136}, {277, 67, 178}, {144, 42, 247}, {310, 97, 213}, {261, 
              42, 149}, {302, 77, 194}, {148, 33, 253}, {126, 14, 232}, {290, 
              77, 192}, {246, 40, 143}, {273, 51, 157}, {117, 14, 113}, {301, 
              87, 204}, {253, 33, 137}, {142, 40, 246}, {174, 51, 273}, {232, 
              14, 117}, {247, 42, 145}, {177, 67, 277}, {311, 87, 205}, {156, 
              42, 261}}], 
             
             PolygonBox[{{165, 164, 268, 269}, {269, 268, 154, 155}, {194, 77,
               67, 291}, {231, 230, 127, 128}, {281, 280, 166, 167}, {109, 3, 
              14, 114}, {279, 278, 179, 180}, {204, 87, 97, 310}, {192, 77, 
              87, 301}, {180, 179, 280, 281}, {178, 67, 77, 290}, {205, 87, 
              77, 302}, {113, 14, 3, 112}, {267, 266, 164, 165}, {167, 166, 
              266, 267}, {155, 154, 256, 257}, {215, 97, 87, 311}, {128, 127, 
              240, 241}}], 
             
             PolygonBox[{{251, 250, 149, 42, 144}, {257, 256, 143, 40, 153}, {
              114, 14, 126, 230, 231}, {181, 67, 177, 278, 279}, {259, 258, 
              157, 51, 158}, {145, 42, 156, 258, 259}, {241, 240, 137, 33, 
              135}, {136, 33, 148, 250, 251}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8250731752826005, 0.382409747091081, 0.10772606882738747`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{217, 98, 214}, {153, 50, 257}, {257, 50, 155}, {144,
               32, 251}, {193, 68, 293}, {158, 41, 259}, {235, 32, 132}, {267,
               59, 167}, {259, 41, 145}, {231, 13, 114}, {165, 59, 267}, {311,
               98, 215}, {284, 59, 170}, {251, 32, 136}, {131, 32, 235}, {114,
               13, 109}, {228, 23, 125}, {293, 68, 184}, {279, 68, 181}, {182,
               59, 284}, {241, 23, 128}, {223, 13, 110}, {135, 23, 241}, {180,
               68, 279}}], 
             
             PolygonBox[{{206, 205, 302, 303}, {128, 23, 13, 231}, {195, 194, 
              291, 292}, {303, 302, 194, 195}, {110, 13, 23, 228}}], 
             
             PolygonBox[{{292, 291, 181, 68, 193}, {125, 23, 135, 238, 239}, {
              132, 32, 144, 247, 248}, {108, 107, 109, 13, 223}, {184, 68, 
              180, 281, 282}, {214, 98, 311, 205, 206}, {170, 59, 165, 269, 
              270}, {239, 238, 136, 32, 131}, {282, 281, 167, 59, 182}, {270, 
              269, 155, 50, 168}, {248, 247, 145, 41, 146}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8583022579715265, 0.44919168626428996`, 0.1562822880894322], 
           GraphicsGroupBox[{
             
             PolygonBox[{{223, 2, 108}, {312, 88, 207}, {101, 2, 103}, {131, 
              22, 239}, {121, 22, 225}, {239, 22, 125}, {304, 78, 197}, {193, 
              78, 292}, {292, 78, 195}, {206, 88, 214}, {303, 88, 206}, {225, 
              22, 122}}], 
             
             PolygonBox[{{185, 184, 282, 283}, {111, 110, 228, 229}, {249, 
              248, 146, 147}, {207, 88, 78, 304}, {183, 182, 284, 285}, {236, 
              235, 132, 133}, {133, 132, 248, 249}, {294, 293, 184, 185}, {
              195, 78, 88, 303}, {271, 270, 168, 169}, {285, 284, 170, 171}, {
              283, 282, 182, 183}, {171, 170, 270, 271}}], 
             
             PolygonBox[{{103, 2, 223, 110, 111}, {197, 78, 193, 293, 294}, {
              122, 22, 131, 235, 236}, {229, 228, 125, 22, 121}, {218, 217, 
              214, 88, 312}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8934577788198491, 0.5469303833802382, 0.2663696264515876], 
           GraphicsGroupBox[{
             
             PolygonBox[{{196, 69, 296}, {283, 69, 185}, {229, 12, 111}, {271,
               60, 171}, {249, 31, 133}, {296, 69, 188}, {121, 12, 229}, {222,
               12, 104}, {312, 99, 218}, {220, 99, 216}, {169, 60, 271}, {183,
               69, 283}, {111, 12, 103}, {147, 31, 249}}], 
             
             PolygonBox[{{198, 197, 294, 295}, {208, 207, 304, 305}, {123, 
              122, 236, 237}, {305, 304, 197, 198}, {226, 225, 122, 123}}], 
             
             PolygonBox[{{188, 69, 183, 285, 286}, {237, 236, 133, 31, 134}, {
              216, 99, 312, 207, 208}, {286, 285, 171, 60, 186}, {102, 101, 
              103, 12, 222}, {104, 12, 121, 225, 226}, {295, 294, 185, 69, 
              196}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9286132996681717, 0.6446690804961865, 0.37645696481374313`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{134, 21, 237}, {222, 1, 102}, {313, 89, 209}, {305, 
              89, 208}, {196, 79, 295}, {208, 89, 216}, {306, 79, 200}, {295, 
              79, 198}, {237, 21, 123}}], 
             
             PolygonBox[{{209, 89, 79, 306}, {198, 79, 89, 305}, {105, 104, 
              226, 227}, {189, 188, 286, 287}, {297, 296, 188, 189}, {287, 
              286, 186, 187}}], 
             
             PolygonBox[{{106, 1, 222, 104, 105}, {200, 79, 196, 296, 297}, {
              227, 226, 123, 21, 124}, {221, 220, 216, 89, 313}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9637688205164944, 0.7424077776121348, 0.4865443031758985], 
           GraphicsGroupBox[{
             
             PolygonBox[{{105, 11, 106}, {287, 70, 189}, {124, 11, 227}, {227,
               11, 105}, {187, 70, 287}, {313, 100, 221}}], 
             
             PolygonBox[{{201, 200, 297, 298}, {307, 306, 200, 201}, {210, 
              209, 306, 307}}], 
             
             PolygonBox[{{219, 100, 313, 209, 210}, {298, 297, 189, 70, 
              199}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{307, 90, 210}, {210, 90, 219}, {298, 80, 201}, {199,
               80, 298}}], 
             PolygonBox[{{201, 80, 90, 307}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{199, 298, 201, 307, 210, 219}]}, "20"], 
           Annotation[#, 20, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{106, 105, 227, 124}], 
             LineBox[{221, 313, 209, 306, 200, 297, 189, 287, 187}]}, 
            "17.5`"], Annotation[#, 17.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{102, 222, 104, 226, 123, 237, 134}], 
             
             LineBox[{186, 286, 188, 296, 196, 295, 198, 305, 208, 216, 
              220}]}, "15"], Annotation[#, 15, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{218, 312, 207, 304, 197, 294, 185, 283, 183, 285, 171, 
              271, 169}], 
             
             LineBox[{101, 103, 111, 229, 121, 225, 122, 236, 133, 249, 
              147}]}, "12.5`"], Annotation[#, 12.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{108, 223, 110, 228, 125, 239, 131, 235, 132, 248, 146}], 
             
             LineBox[{168, 270, 170, 284, 182, 282, 184, 293, 193, 292, 195, 
              303, 206, 214, 217}]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{153, 257, 155, 269, 165, 267, 167, 281, 180, 279, 181, 
              291, 194, 302, 205, 311, 215}], 
             
             LineBox[{158, 259, 145, 247, 144, 251, 136, 238, 135, 241, 128, 
              231, 114, 109, 107}]}, "7.5`"], 
           Annotation[#, 7.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{112, 113, 117, 232, 126, 230, 127, 240, 137, 253, 148, 
              250, 149, 261, 156, 258, 157, 273, 174}], 
             
             LineBox[{142, 246, 143, 256, 154, 268, 164, 266, 166, 280, 179, 
              278, 177, 277, 178, 290, 192, 301, 204, 310, 213}]}, "5"], 
           Annotation[#, 5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{115, 116, 118, 233, 129, 243, 138, 242, 139, 254, 150, 
              252, 151, 262, 159, 260, 160, 274, 172, 272, 173, 288, 190, 299,
               202, 308, 211}], 
             
             LineBox[{119, 224, 120, 234, 130, 245, 140, 244, 141, 255, 152, 
              265, 163, 264, 161, 263, 162, 276, 175, 275, 176, 289, 191, 300,
               203, 309, 212}]}, "2.5`"], 
           Annotation[#, 2.5, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0.1, 0.}], 
        ArrowBox[{{0.1, 0.}, {
         0.09622530305709945, -0.0062862063307488735`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7597140062148781, 
                0.2665061100489094, 0.045715962822687306`}}, {{
                0.7923935907487393, 0.3244579285699952, 
                0.0767210158250374}}, {{0.8250731752826005, 0.382409747091081,
                 0.10772606882738747`}}, {{0.8583022579715265, 
                0.44919168626428996`, 0.1562822880894322}}, {{
                0.8934577788198491, 0.5469303833802382, 
                0.26636962645158757`}}, {{0.9286132996681717, 
                0.6446690804961865, 0.3764569648137431}}, {{
                0.9637688205164944, 0.7424077776121348, 
                0.4865443031758985}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -50.000000000000014`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -50.000000000000014`}]}, {{
                    7.500000000000001, -10.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -10.00000000000001}]}, {{
                    7.500000000000001, 29.999999999999982`}, 
                    Offset[{4., 0}, {7.500000000000001, 
                    29.999999999999982`}]}, {{7.500000000000001, 
                    69.99999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    69.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -50.000000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -10.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.999999999999982`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    69.99999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.06382965066837774`", ",", "21.32649286721024`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "2.5`", ",", "5.`", ",", "7.5`", ",", "10.`", ",", "12.5`", 
                 ",", "15.`", ",", "17.5`", ",", "20.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.683586643944274*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
4sspUXYUHvgfxk4QgA==
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{119, 35, 138}, {198, 35, 123}, {67, 14, 86}, {191, 
              35, 119}, {14, 3, 4}, {91, 25, 88}, {164, 4, 68}, {192, 25, 
              91}, {65, 1, 162}, {64, 2, 163}, {138, 35, 198}}], 
             
             PolygonBox[{{162, 1, 2, 64}, {163, 2, 3, 66}, {123, 35, 25, 
              192}, {88, 25, 14, 69}, {69, 14, 4, 164}, {66, 3, 14, 67}, {89, 
              25, 35, 191}, {86, 14, 25, 89}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7620732569878286, 0.2706898496707547, 0.047954323447663184`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{196, 37, 139}, {191, 24, 89}, {69, 15, 88}, {66, 13,
               163}, {154, 37, 229}, {165, 5, 70}, {64, 12, 162}, {164, 15, 
              69}, {139, 37, 154}, {82, 11, 171}, {80, 12, 173}, {174, 15, 
              71}, {67, 13, 66}, {87, 24, 115}, {229, 37, 148}, {89, 24, 
              86}}], 
             
             PolygonBox[{{173, 12, 13, 84}, {163, 13, 12, 64}, {171, 11, 12, 
              80}, {84, 13, 24, 87}, {162, 12, 11, 65}, {86, 24, 13, 67}, {71,
               15, 5, 165}, {193, 192, 91, 92}, {68, 5, 15, 164}, {124, 123, 
              192, 193}, {199, 198, 123, 124}}], 
             
             PolygonBox[{{115, 24, 191, 119, 120}, {92, 91, 88, 15, 174}, {
              120, 119, 138, 37, 196}, {148, 37, 138, 198, 199}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.799960541456963, 0.33787665957456503`, 0.08390022912046809], 
           GraphicsGroupBox[{
             
             PolygonBox[{{84, 23, 173}, {165, 16, 71}, {176, 16, 74}, {111, 
              23, 190}, {90, 16, 176}, {166, 6, 72}, {87, 23, 84}, {85, 23, 
              111}}], 
             
             PolygonBox[{{155, 154, 229, 230}, {197, 196, 139, 140}, {149, 
              148, 199, 200}, {74, 16, 6, 166}, {140, 139, 154, 155}, {200, 
              199, 124, 125}, {116, 115, 120, 121}, {125, 124, 193, 194}, {
              121, 120, 196, 197}, {70, 6, 16, 165}, {93, 92, 174, 175}, {194,
               193, 92, 93}, {83, 82, 171, 172}, {230, 229, 148, 149}, {172, 
              171, 80, 81}}], 
             
             PolygonBox[{{81, 80, 173, 23, 85}, {175, 174, 71, 16, 90}, {190, 
              23, 87, 115, 116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8378478259260973, 0.40506346947837524`, 0.11984613479327297`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{175, 26, 93}, {109, 21, 185}, {168, 7, 76}, {85, 22,
               81}, {122, 26, 214}, {73, 7, 168}, {214, 26, 95}, {105, 22, 
              188}, {116, 34, 190}, {90, 26, 175}, {81, 22, 172}, {121, 34, 
              116}, {117, 34, 134}, {197, 34, 121}}], 
             
             PolygonBox[{{177, 176, 74, 75}, {185, 21, 22, 105}, {201, 200, 
              125, 126}, {141, 140, 155, 156}, {75, 74, 166, 167}, {231, 230, 
              149, 150}, {172, 22, 21, 83}, {150, 149, 200, 201}, {126, 125, 
              194, 195}, {156, 155, 230, 231}}], 
             
             PolygonBox[{{112, 111, 190, 34, 117}, {167, 166, 72, 7, 73}, {95,
               26, 90, 176, 177}, {195, 194, 93, 26, 122}, {188, 22, 85, 111, 
              112}, {134, 34, 197, 140, 141}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8776470235091289, 0.5029736281622997, 0.21685922445350297`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{77, 9, 170}, {195, 36, 126}, {97, 18, 181}, {122, 
              36, 195}, {145, 36, 226}, {181, 18, 78}, {94, 17, 179}, {226, 
              36, 207}, {167, 17, 75}, {73, 17, 167}}], 
             
             PolygonBox[{{189, 188, 112, 113}, {168, 18, 17, 73}, {113, 112, 
              117, 118}, {170, 9, 10, 79}, {169, 8, 9, 77}, {78, 18, 8, 
              169}, {106, 105, 188, 189}, {96, 95, 177, 178}, {215, 214, 95, 
              96}, {118, 117, 134, 135}, {135, 134, 141, 142}, {232, 231, 150,
               151}, {110, 109, 185, 186}, {157, 156, 231, 232}, {151, 150, 
              201, 202}, {186, 185, 105, 106}, {142, 141, 156, 157}, {76, 8, 
              18, 168}, {179, 17, 18, 97}}], 
             
             PolygonBox[{{178, 177, 75, 17, 94}, {202, 201, 126, 36, 145}, {
              207, 36, 122, 214, 215}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.91840480051394, 0.6162876091719897, 0.34448968134181257`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{235, 39, 212}, {94, 27, 178}, {210, 31, 221}, {127, 
              27, 218}, {160, 39, 235}, {100, 19, 184}, {132, 33, 224}, {218, 
              27, 99}, {169, 19, 78}, {221, 31, 108}, {118, 33, 113}, {113, 
              33, 189}, {178, 27, 96}, {205, 39, 158}, {77, 19, 169}, {158, 
              39, 160}, {114, 33, 132}, {79, 20, 170}}], 
             
             PolygonBox[{{184, 19, 20, 103}, {233, 232, 151, 152}, {136, 135, 
              142, 143}, {170, 20, 19, 77}, {208, 207, 215, 216}, {203, 202, 
              145, 146}, {227, 226, 207, 208}, {180, 179, 97, 98}, {187, 186, 
              106, 107}, {98, 97, 181, 182}, {152, 151, 202, 203}, {146, 145, 
              226, 227}}], 
             
             PolygonBox[{{212, 39, 157, 232, 233}, {108, 31, 110, 186, 187}, {
              182, 181, 78, 19, 100}, {216, 215, 96, 27, 127}, {107, 106, 189,
               33, 114}, {99, 27, 94, 179, 180}, {143, 142, 157, 39, 205}, {
              224, 33, 118, 135, 136}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9591625775187509, 0.7296015901816794, 0.472120138230122], 
           GraphicsGroupBox[{
             
             PolygonBox[{{187, 32, 108}, {114, 32, 107}, {220, 28, 102}, {98, 
              28, 180}, {103, 30, 184}, {180, 28, 99}, {104, 30, 130}, {107, 
              32, 187}, {129, 28, 220}, {131, 32, 223}}], 
             
             PolygonBox[{{217, 216, 127, 128}, {211, 210, 221, 222}, {128, 
              127, 218, 219}, {133, 132, 224, 225}, {236, 235, 212, 213}, {
              206, 205, 158, 159}, {234, 233, 152, 153}, {159, 158, 160, 
              161}, {137, 136, 143, 144}, {153, 152, 203, 204}, {144, 143, 
              205, 206}, {161, 160, 235, 236}, {228, 227, 208, 209}, {209, 
              208, 216, 217}, {183, 182, 100, 101}, {213, 212, 233, 234}, {
              147, 146, 227, 228}, {204, 203, 146, 147}, {225, 224, 136, 
              137}}], 
             
             PolygonBox[{{101, 100, 184, 30, 104}, {223, 32, 114, 132, 133}, {
              102, 28, 98, 182, 183}, {219, 218, 99, 28, 129}, {222, 221, 108,
               32, 131}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{101, 29, 183}, {56, 43, 29}, {183, 29, 102}, {104, 
              29, 101}, {147, 38, 204}, {204, 38, 153}}], 
             
             PolygonBox[{{131, 45, 57, 222}, {137, 48, 59, 225}, {222, 57, 46,
               211}, {228, 60, 38, 147}, {234, 62, 51, 213}, {129, 42, 54, 
              219}, {159, 50, 61, 206}, {128, 40, 53, 217}, {236, 63, 52, 
              161}, {223, 58, 45, 131}, {213, 51, 63, 236}, {217, 53, 41, 
              209}, {219, 54, 40, 128}, {161, 52, 50, 159}, {144, 49, 48, 
              137}, {133, 47, 58, 223}, {206, 61, 49, 144}, {209, 41, 60, 
              228}, {153, 38, 62, 234}, {225, 59, 47, 133}, {220, 55, 42, 
              129}}], 
             
             PolygonBox[{{130, 44, 56, 29, 104}, {102, 29, 43, 55, 
              220}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{130, 104, 101, 183, 102, 220, 129, 219, 128, 217, 209, 
              228, 147, 204, 153, 234, 213, 236, 161, 159, 206, 144, 137, 225,
               133, 223, 131, 222, 211}]}, "1.4`"], 
           Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{103, 184, 100, 182, 98, 180, 99, 218, 127, 216, 208, 
              227, 146, 203, 152, 233, 212, 235, 160, 158, 205, 143, 136, 224,
               132, 114, 107, 187, 108, 221, 210}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{79, 170, 77, 169, 78, 181, 97, 179, 94, 178, 96, 215, 
              207, 226, 145, 202, 151, 232, 157, 142, 135, 118, 113, 189, 106,
               186, 110}]}, "1"], Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{76, 168, 73, 167, 75, 177, 95, 214, 122, 195, 126, 201, 
              150, 231, 156, 141, 134, 117, 112, 188, 105, 185, 109}]}, 
            "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{72, 166, 74, 176, 90, 175, 93, 194, 125, 200, 149, 230, 
              155, 140, 197, 121, 116, 190, 111, 85, 81, 172, 83}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{70, 165, 71, 174, 92, 193, 124, 199, 148, 229, 154, 139,
               196, 120, 115, 87, 84, 173, 80, 171, 82}]}, "0.4`"], 
           Annotation[#, 0.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{65, 162, 64, 163, 66, 67, 86, 89, 191, 119, 138, 198, 
              123, 192, 91, 88, 69, 164, 68}]}, "0.2`"], 
           Annotation[#, 0.2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0., 1.}], 
        ArrowBox[{{0., 1.}, {-0.0062862063307488735`, 1.}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7620732569878286, 
                0.2706898496707547, 0.047954323447663184`}}, {{
                0.799960541456963, 0.33787665957456503`, 
                0.08390022912046809}}, {{0.8378478259260974, 
                0.40506346947837524`, 0.11984613479327297`}}, {{
                0.8776470235091289, 0.5029736281622997, 
                0.21685922445350297`}}, {{0.9184048005139399, 
                0.6162876091719895, 0.34448968134181246`}}, {{
                0.9591625775187509, 0.7296015901816795, 
                0.472120138230122}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -89.99999999999999}, {
                  7.500000000000001, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -67.5}, 
                    Offset[{4., 0}, {7.500000000000001, -67.5}]}, {{
                    7.500000000000001, -22.49999999999999}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -22.49999999999999}]}, {{
                    7.500000000000001, 22.500000000000007`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    22.500000000000007`}]}, {{7.500000000000001, 
                    67.50000000000003}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    67.50000000000003}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -67.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -22.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    22.500000000000007`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 
                    67.50000000000003}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.03318617211003633`", ",", "1.5003908234564838`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2`", ",", "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", 
                 ",", "1.2`", ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{168, 2, 108}, {65, 1, 149}, {223, 7, 55}, {73, 4, 
              162}, {55, 7, 198}, {192, 6, 132}, {61, 2, 153}, {198, 7, 
              138}, {79, 5, 211}, {174, 3, 114}, {186, 5, 126}, {92, 7, 
              223}, {180, 4, 120}, {86, 6, 217}, {69, 3, 157}}], 
             
             PolygonBox[{{120, 4, 3, 174}, {108, 2, 1, 49}, {162, 4, 5, 79}, {
              138, 7, 6, 192}, {153, 2, 3, 69}, {149, 1, 2, 61}, {132, 6, 5, 
              186}, {217, 6, 7, 92}, {211, 5, 6, 86}, {126, 5, 4, 180}, {157, 
              3, 4, 73}, {114, 3, 2, 168}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7596436593099185, 0.2663813614902026, 0.0456492205568986], 
           GraphicsGroupBox[{
             PolygonBox[{{56, 8, 204}, {204, 8, 144}, {229, 8, 56}, {98, 8, 
              229}}], 
             
             PolygonBox[{{175, 174, 114, 115}, {158, 157, 73, 74}, {218, 217, 
              92, 93}, {181, 180, 120, 121}, {121, 120, 174, 175}, {154, 153, 
              69, 70}, {163, 162, 79, 80}, {115, 114, 168, 169}, {212, 211, 
              86, 87}, {109, 108, 49, 50}, {127, 126, 180, 181}, {150, 149, 
              61, 62}, {187, 186, 126, 127}, {66, 65, 149, 150}, {62, 61, 153,
               154}, {80, 79, 211, 212}, {74, 73, 162, 163}, {133, 132, 186, 
              187}, {70, 69, 157, 158}, {139, 138, 192, 193}, {193, 192, 132, 
              133}, {169, 168, 108, 109}, {93, 92, 223, 224}, {87, 86, 217, 
              218}, {199, 198, 138, 139}}], 
             PolygonBox[{{144, 8, 55, 198, 199}, {224, 223, 55, 8, 98}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8054475322054265, 0.34760692685358624`, 0.08910606148970283], 
           GraphicsGroupBox[{
             
             PolygonBox[{{81, 80, 212, 213}, {159, 158, 74, 75}, {128, 127, 
              181, 182}, {88, 87, 218, 219}, {155, 154, 70, 71}, {200, 199, 
              139, 140}, {140, 139, 193, 194}, {75, 74, 163, 164}, {134, 133, 
              187, 188}, {225, 224, 98, 99}, {164, 163, 80, 81}, {205, 204, 
              144, 145}, {122, 121, 175, 176}, {116, 115, 169, 170}, {151, 
              150, 62, 63}, {94, 93, 224, 225}, {194, 193, 133, 134}, {188, 
              187, 127, 128}, {182, 181, 121, 122}, {213, 212, 87, 88}, {71, 
              70, 158, 159}, {145, 144, 199, 200}, {170, 169, 109, 110}, {230,
               229, 56, 57}, {63, 62, 154, 155}, {219, 218, 93, 94}, {57, 56, 
              204, 205}, {99, 98, 229, 230}, {67, 66, 150, 151}, {176, 175, 
              115, 116}, {110, 109, 50, 51}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8513083345632523, 0.4297473160726854, 0.13438124967081294`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{82, 81, 213, 214}, {146, 145, 200, 201}, {58, 57, 
              205, 206}, {68, 67, 151, 152}, {226, 225, 99, 100}, {72, 71, 
              159, 160}, {195, 194, 134, 135}, {111, 110, 51, 52}, {129, 128, 
              182, 183}, {141, 140, 194, 195}, {117, 116, 170, 171}, {64, 63, 
              155, 156}, {123, 122, 176, 177}, {231, 230, 57, 58}, {76, 75, 
              164, 165}, {183, 182, 122, 123}, {177, 176, 116, 117}, {214, 
              213, 88, 89}, {220, 219, 94, 95}, {89, 88, 219, 220}, {95, 94, 
              225, 226}, {100, 99, 230, 231}, {165, 164, 81, 82}, {152, 151, 
              63, 64}, {160, 159, 75, 76}, {189, 188, 128, 129}, {156, 155, 
              71, 72}, {201, 200, 140, 141}, {206, 205, 145, 146}, {171, 170, 
              110, 111}, {135, 134, 188, 189}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9005824924658251, 0.5667383740536331, 0.2886802264071976], 
           GraphicsGroupBox[{
             
             PolygonBox[{{209, 10, 234}, {105, 12, 238}, {72, 12, 156}, {103, 
              11, 236}, {238, 12, 78}, {64, 11, 152}}], 
             
             PolygonBox[{{90, 89, 220, 221}, {96, 95, 226, 227}, {118, 117, 
              171, 172}, {156, 12, 11, 64}, {166, 165, 82, 83}, {227, 226, 
              100, 101}, {101, 100, 231, 232}, {112, 111, 52, 53}, {161, 160, 
              76, 77}, {77, 76, 165, 166}, {130, 129, 183, 184}, {196, 195, 
              135, 136}, {236, 11, 12, 105}, {221, 220, 95, 96}, {184, 183, 
              123, 124}, {152, 11, 10, 68}, {207, 206, 146, 147}, {234, 10, 
              11, 103}, {178, 177, 117, 118}, {59, 58, 206, 207}, {147, 146, 
              201, 202}, {124, 123, 177, 178}, {172, 171, 111, 112}, {136, 
              135, 189, 190}, {202, 201, 141, 142}, {215, 214, 89, 90}, {83, 
              82, 214, 215}, {190, 189, 129, 130}, {232, 231, 58, 59}, {142, 
              141, 195, 196}}], 
             PolygonBox[{{78, 12, 72, 160, 161}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.949856650368398, 0.7037294320345806, 0.44297920314358186`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{107, 13, 240}, {77, 13, 161}, {161, 13, 78}, {240, 
              13, 85}}], 
             
             PolygonBox[{{228, 227, 101, 102}, {104, 103, 236, 237}, {106, 
              105, 238, 239}, {185, 184, 124, 125}, {167, 166, 83, 84}, {191, 
              190, 130, 131}, {113, 112, 53, 54}, {60, 59, 207, 208}, {235, 
              234, 103, 104}, {148, 147, 202, 203}, {222, 221, 96, 97}, {237, 
              236, 105, 106}, {84, 83, 215, 216}, {91, 90, 221, 222}, {97, 96,
               227, 228}, {131, 130, 184, 185}, {203, 202, 142, 143}, {233, 
              232, 59, 60}, {125, 124, 178, 179}, {137, 136, 190, 191}, {208, 
              207, 147, 148}, {173, 172, 112, 113}, {216, 215, 90, 91}, {143, 
              142, 196, 197}, {197, 196, 136, 137}, {119, 118, 172, 173}, {
              179, 178, 118, 119}, {102, 101, 232, 233}, {210, 209, 234, 
              235}}], 
             
             PolygonBox[{{239, 238, 78, 13, 107}, {85, 13, 77, 166, 
              167}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             PolygonBox[{{167, 14, 85}, {84, 14, 167}, {23, 24, 48}}], 
             
             PolygonBox[{{143, 38, 21, 203}, {97, 27, 41, 222}, {137, 37, 20, 
              197}, {228, 42, 27, 97}, {235, 44, 30, 210}, {148, 39, 22, 
              208}, {131, 36, 19, 191}, {233, 43, 28, 102}, {240, 47, 32, 
              107}, {239, 46, 31, 106}, {237, 45, 29, 104}, {113, 33, 15, 
              173}, {125, 35, 18, 185}, {91, 25, 40, 216}, {185, 18, 36, 
              131}, {54, 16, 33, 113}, {119, 34, 17, 179}, {106, 31, 45, 
              237}, {102, 28, 42, 228}, {107, 32, 46, 239}, {104, 29, 44, 
              235}, {60, 9, 43, 233}, {173, 15, 34, 119}, {222, 41, 25, 91}, {
              208, 22, 9, 60}, {179, 17, 35, 125}, {203, 21, 39, 148}, {191, 
              19, 37, 137}, {197, 20, 38, 143}, {85, 14, 47, 240}}], 
             PolygonBox[{{216, 40, 26, 14, 84}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{210, 235, 104, 237, 106, 239, 107, 240, 85, 167, 84, 
              216, 91, 222, 97, 228, 102, 233, 60, 208, 148, 203, 143, 197, 
              137, 191, 131, 185, 125, 179, 119, 173, 113, 54}]}, "1.4`"], 
           Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{53, 112, 172, 118, 178, 124, 184, 130, 190, 136, 196, 
              142, 202, 147, 207, 59, 232, 101, 227, 96, 221, 90, 215, 83, 
              166, 77, 161, 78, 238, 105, 236, 103, 234, 209}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{68, 152, 64, 156, 72, 160, 76, 165, 82, 214, 89, 220, 
              95, 226, 100, 231, 58, 206, 146, 201, 141, 195, 135, 189, 129, 
              183, 123, 177, 117, 171, 111, 52}]}, "1"], 
           Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{51, 110, 170, 116, 176, 122, 182, 128, 188, 134, 194, 
              140, 200, 145, 205, 57, 230, 99, 225, 94, 219, 88, 213, 81, 164,
               75, 159, 71, 155, 63, 151, 67}]}, "0.8`"], 
           Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{50, 109, 169, 115, 175, 121, 181, 127, 187, 133, 193, 
              139, 199, 144, 204, 56, 229, 98, 224, 93, 218, 87, 212, 80, 163,
               74, 158, 70, 154, 62, 150, 66}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{49, 108, 168, 114, 174, 120, 180, 126, 186, 132, 192, 
              138, 198, 55, 223, 92, 217, 86, 211, 79, 162, 73, 157, 69, 153, 
              61, 149, 65}]}, "0.4`"], 
           Annotation[#, 0.4, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1., 0.1}], 
        ArrowBox[{{1., 0.1}, {1., 0.09622530305709945}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7596436593099185, 
                0.26638136149020253`, 0.0456492205568986}}, {{
                0.8054475322054265, 0.34760692685358624`, 
                0.08910606148970283}}, {{0.8513083345632523, 
                0.4297473160726854, 0.13438124967081294`}}, {{
                0.9005824924658252, 0.5667383740536333, 
                0.2886802264071976}}, {{0.949856650368398, 0.7037294320345805,
                 0.44297920314358175`}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.00000000000003}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -64.28571428571428}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -64.28571428571428}]}, {{
                    7.500000000000001, -38.57142857142856}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -38.57142857142856}]}, {{
                    7.500000000000001, -12.857142857142847`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -12.857142857142847`}]}, {{
                    7.500000000000001, 12.85714285714287}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    12.85714285714287}]}, {{7.500000000000001, 
                    38.57142857142859}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    38.57142857142859}]}, {{7.500000000000001, 
                    64.2857142857143}, 
                    Offset[{4., 0}, {7.500000000000001, 64.2857142857143}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {
                    7.500000000000001, -64.28571428571428}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -38.57142857142856}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -12.857142857142847`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    12.85714285714287}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.2\"", 1.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    38.57142857142859}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    64.2857142857143}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.2899100828452562`", ",", "1.5035279820742864`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", ",", "1.2`", 
                 ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxtlgs0lOkfx417pxtS1EYp1FChhGz1DLK1jS6bpLWLUnJpS1QobelvWSRt
dHGNvckl0bKSJs8kchk1bhMjjEFyaRhmXGbMsN55m8fZ/+zvnDnO53zf+c3z
fH+e7/voefgd8pSXk5Nrmv1gfxMSsRoBcpJSpUo5JxsreartLqxEiKX6IwkL
oVSXslSXl/Tjwr52rN7AAkxuZcCi51i9B25OWDEgvRarT9ABZyB9Xsoa6lgJ
4NQMVsOIM/HfQ5yFr48k5c/7IUn7S/k91n5HF9qvhMOH0P44Q7NVKkC6dH9H
sOV8UML37zmDnrfDZE3uv/04PI1Y0l/chfyQ9nPG+hEnoOT3SiaQLvUnD/t6
9CDyU8LCHhgROVud/TL+JWD6QBXuh80I8k/abxTTjbJgPYZfFv23v6xBQMH0
3VPIb2l/CYMhoL9mtjyGkS6d1ziG7u3A69RslYrQfF5g/XImEEdh69eUo/5r
XvbjaH6S79+b/u/5CZVJl4Nmq7kf6RI/8nvx+dCUqBLmDgMCJjuIcP8MZvB5
WhPweS8cxOejwcfncY6P+9/0eR6XxThfEEBtbL9dNUAR4zo23m8rH+eqAdz/
XcO4n5514AGmX3oH7TC+SwOmW2ZrfjfwwnisAkr2O0+I+7d4CPdXsw//fkUH
iMfWv74C9zOPifvpJoSOmO4qwOf1bBxOY7rzKJD6JcaYPoPr1z/7bS3C/ebK
USXP31cg/f95lP5/vYgIikknqKDzrcULK/ZyV0Ic4P5Lz6YXCtRAYphlN3Eu
H1wX6e+LqR5GPNVifickbhSdn8VKMD3XmI94rdnXuazyMcSWro3P1N0mEJOj
XF/bTUzK5JHmwKudJypmIHFVbGxo8dx522Md/+JJgUAmf9RDwv8kKfAQnzU9
khD5zThi2gfDG3VpAuia4H+pijmMzp/2E2Iyf8MnxA3VbMrq0D7EN7sSOxwa
e2TOs3HHa0JWwFweOu4UucXbTMJj7CecGhsGWG/O9IzzYcCwLl4372wNGG8Y
/O2v/zHgL4qqzN8LC0G5/zSrIZkBy4PyjEn9GTBeTV2HV8iAxqXfyY++rYDH
89a6LHk7N6+w6MPpD4o5iC8TW59dsZrLC/8q90aX4j7E3l4fPllZ9cIL+3V/
rZ83jM7/KoORJ8fyuTL56/OdkZHZtXLE897+6Of41WuUTzd/dXweGdeAWCd6
78Ple98i1qvnNOv5VSI20L6tanSHivhQqXfAyYACOLLjpniT5Vy+H12yx1A1
QSiTP01R8ytE5C7EgU7+ppn2A2h9/UmvNj7zbkZsrhs7PODzHuWbVvDjjY+j
RkD0q2S2drJQ5v3h4XR36VF9AilVf2A/bYUQ5dHfgjJKt8G0zPvlKefi37Eh
yohLxA4tm8iKpMTzKbl1wrn3z1Nrl9PKDlOIGQRt4vZUEWJeFaPXf0iMmFRS
tkv7wTjijq13F6Qu5SEWeNAz7VYMIz5vciXSyY8LSt23FdQCBWp0R4Rt4rIB
wIAMw/oRRWpIafWzHmU+uMX56OdSrUzNPrbb97jiJAhamaWVUqNIbZGvWNFB
EIFjZF/YTpt9n9kKXBdmcgFBntxrkTIFIyjlbfSXXKDZ3kSpbubCqgBgp5Y9
DCw6BUG3y0fgTz+M1YbWccDRbt0t3z4ZheBUzpGR8UFwudduaPUDHqxN6dmS
fYsJ9lzY0H7qejM0NHehHmh/B4baig6+3NIKQ2l0hzGjJnDH3qb8i9422Oph
z0wKrgfWj2mWgQks6MO/SAuNeQPOzc9x8jZgw4OtzdE+ZRy41xowv/BtBO8o
ZeZrXg3BnRd9wrO960Ezz9PPg10HvQ92NLE9GgGIjBtS+b0JygWfyAm2pQPq
i32RL/UEMD0jQj2tYxjo+Gq9BhQB/LCPd/e3rCFg6h15ziJVAKMdt5DDdYXA
rJIQaNUpgEkHNk8us5MnWS6dWLxORQzvZ1rmpOXJkbjFpcFLIoRQbQOx9qq9
CukKP63IJF0E98Za5Z6zUiapml7nk0um4U/c3bEexkqkmq1my8195ailh5z9
Dusqkh5cHLOocOXDk8HF9w8qKpFaMqK2hd3jovxzSz2go8nkIF7AuVGpFz6A
uGR7lb+J2UfE3jGKK3e0d8vcXxZneHnS+xUQ+yoELtEHStSz5dvSZoLEKL/9
kz2bVr2cRrxoxWmFG55z9zuDk1nx/X+JERPyF90qbB9FeXj0jOcCZxs+4jwj
SpTgjzHEyn0aKimqsvedPsU4k9zAVsQPv2W33fPtRMzMF+g1J3YjXqCq4aVV
3Yt4p7vRI+fJfqhSt8hE/zgL3Y/IlfuShDw24nhDTZ0Tlj2IW8Nb02iXexGv
+ZC+xry0T+Z+Fax27dGPrHqUP8Enj7wnhtUCtZJbZNq8apSfD0Py8tcFQJn7
VeZ1YkFm8dz99drUaSsbfQ7wjVwZEu03ifJuJV25jZwwiti9PcrdPmQS5dWp
zeR31zMnUR79nGhHsVCfQCxd39ONNYQMHxUSdGsYOKA1iPIiKNVBb7W7GKhd
NaRs15GntqRbGmfcnAbHRKZPBeEE6suSr+3v7eCBsCjhdK6yAOaE3r6a6SwC
dmddz311XwgLBRvXcZaLwZdj1EoCQwBbo8rI9LWjIHTV4+Q7g0PwDZMgCHw+
CpKumdjYUziQSrTJ0HXkgQJWfu9YzCdYeCnU8fUAD7wBm2MyXAfhlFlBl+3+
drCc5brpbVkj7NhX1zFtwwIWr0ibNej1kF0YeKY9qRNk7N/9w6MiOmywDT/9
/A4bsJYtvGBOp8HyunifxNguoM1qCKF8rIQbkmqJ5WMDMK7EKfmUAhNQ9z8M
PjOvH57+Jl28pK0NgAS37+vSaXD1pOaytvPvQPaJzEc7DlRCXw3umT9TWkCf
6fojCX2TcF1nX0nwei7Y6NI8Peo/AbuKtmnopo2A0IK+lu+9J6G1amOXm+MU
+AcAD9/L
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{100, 8, 201}, {135, 8, 87}, {154, 1, 65}, {169, 8, 
              135}, {127, 1, 70}, {174, 8, 169}, {201, 8, 174}, {87, 8, 
              100}, {65, 1, 127}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7798547734903954, 0.3022224175440922, 0.06482469892789602], 
           GraphicsGroupBox[{
             
             PolygonBox[{{131, 6, 81}, {165, 6, 78}, {78, 6, 131}, {197, 6, 
              165}, {149, 14, 118}, {81, 6, 92}, {116, 14, 149}, {122, 14, 
              116}, {92, 6, 197}}], 
             
             PolygonBox[{{88, 87, 100, 101}, {101, 100, 201, 202}, {128, 127, 
              70, 71}, {175, 174, 169, 170}, {155, 154, 65, 66}, {136, 135, 
              87, 88}, {202, 201, 174, 175}, {66, 65, 127, 128}, {170, 169, 
              135, 136}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8321922816347966, 0.3950343004701883, 0.11448038571750889`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{166, 165, 78, 79}, {89, 88, 101, 102}, {156, 155, 
              66, 67}, {171, 170, 136, 137}, {203, 202, 175, 176}, {79, 78, 
              131, 132}, {82, 81, 92, 93}, {132, 131, 81, 82}, {129, 128, 71, 
              72}, {102, 101, 202, 203}, {150, 149, 118, 119}, {93, 92, 197, 
              198}, {117, 116, 149, 150}, {137, 136, 88, 89}, {176, 175, 170, 
              171}, {123, 122, 116, 117}, {67, 66, 128, 129}, {198, 197, 165, 
              166}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8871080230550983, 0.5292769155755978, 0.24648575915213536`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{96, 9, 107}, {210, 11, 185}, {161, 3, 159}, {5, 2, 
              3}, {181, 10, 98}, {113, 13, 147}, {188, 13, 113}, {109, 10, 
              208}, {105, 11, 111}, {77, 5, 85}, {85, 5, 195}, {140, 9, 96}, {
              179, 9, 140}, {195, 5, 163}, {147, 13, 114}, {153, 13, 188}, {
              107, 9, 206}, {111, 11, 210}, {183, 11, 144}, {192, 3, 161}, {
              144, 11, 105}, {68, 2, 75}, {125, 2, 68}, {185, 11, 183}, {208, 
              10, 181}, {98, 10, 142}}], 
             
             PolygonBox[{{129, 3, 2, 67}, {206, 9, 10, 109}, {163, 5, 3, 
              192}, {75, 2, 5, 77}, {142, 10, 9, 179}, {172, 171, 137, 138}, {
              204, 203, 176, 177}, {90, 89, 102, 103}, {138, 137, 89, 90}, {
              199, 198, 166, 167}, {167, 166, 79, 80}, {83, 82, 93, 94}, {94, 
              93, 198, 199}, {151, 150, 119, 120}, {80, 79, 132, 133}, {177, 
              176, 171, 172}, {103, 102, 203, 204}, {133, 132, 82, 83}}], 
             
             PolygonBox[{{157, 156, 67, 2, 125}, {159, 3, 129, 72, 73}, {124, 
              123, 117, 13, 153}, {114, 13, 117, 150, 151}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9434108306019098, 0.6858088889557592, 0.4227945173664488], 
           GraphicsGroupBox[{
             
             PolygonBox[{{130, 4, 76}, {146, 12, 112}, {191, 15, 190}, {77, 4,
               75}, {212, 12, 187}, {153, 15, 124}}], 
             
             PolygonBox[{{162, 161, 159, 160}, {115, 114, 151, 152}, {143, 
              142, 179, 180}, {134, 133, 83, 84}, {126, 125, 68, 69}, {86, 85,
               195, 196}, {182, 181, 98, 99}, {184, 183, 144, 145}, {141, 140,
               96, 97}, {145, 144, 105, 106}, {97, 96, 107, 108}, {200, 199, 
              167, 168}, {186, 185, 183, 184}, {209, 208, 181, 182}, {108, 
              107, 206, 207}, {110, 109, 208, 209}, {205, 204, 177, 178}, {
              139, 138, 90, 91}, {158, 157, 125, 126}, {95, 94, 199, 200}, {
              164, 163, 192, 193}, {84, 83, 94, 95}, {180, 179, 140, 141}, {
              173, 172, 138, 139}, {193, 192, 161, 162}, {196, 195, 163, 
              164}, {152, 151, 120, 121}, {91, 90, 103, 104}, {207, 206, 109, 
              110}, {160, 159, 73, 74}, {104, 103, 204, 205}, {99, 98, 142, 
              143}, {148, 147, 114, 115}, {178, 177, 172, 173}, {211, 210, 
              185, 186}}], 
             
             PolygonBox[{{190, 15, 153, 188, 189}, {189, 188, 113, 12, 212}, {
              187, 12, 111, 210, 211}, {76, 4, 80, 133, 134}, {112, 12, 113, 
              147, 148}, {194, 4, 77, 85, 86}, {168, 167, 80, 4, 194}, {69, 
              68, 75, 4, 130}, {106, 105, 111, 12, 146}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9999999999999999, 0.8431369999999999, 0.5999999999999999], 
           GraphicsGroupBox[{
             
             PolygonBox[{{145, 56, 33, 184}, {207, 57, 35, 108}, {162, 20, 47,
               193}, {134, 48, 21, 76}, {86, 24, 49, 194}, {184, 33, 36, 
              186}, {189, 41, 43, 190}, {106, 34, 56, 145}, {196, 50, 24, 
              86}, {91, 7, 51, 139}, {76, 21, 46, 130}, {164, 22, 50, 196}, {
              130, 46, 17, 69}, {211, 60, 39, 187}, {115, 40, 61, 148}, {212, 
              62, 41, 189}, {139, 51, 26, 173}, {112, 38, 59, 146}, {121, 42, 
              63, 152}, {209, 58, 37, 110}, {168, 25, 52, 200}, {126, 45, 16, 
              158}, {194, 49, 25, 168}, {193, 47, 22, 164}, {160, 19, 20, 
              162}, {187, 39, 62, 212}, {148, 61, 38, 112}, {186, 36, 60, 
              211}, {110, 37, 57, 207}, {152, 63, 40, 115}, {141, 53, 29, 
              180}, {104, 31, 7, 91}, {182, 32, 58, 209}, {146, 59, 34, 
              106}, {108, 35, 30, 97}, {143, 54, 64, 99}, {178, 28, 55, 
              205}, {99, 64, 32, 182}, {69, 17, 45, 126}, {173, 26, 28, 
              178}, {205, 55, 31, 104}, {180, 29, 54, 143}, {200, 52, 27, 
              95}, {74, 18, 19, 160}, {95, 27, 23, 84}, {97, 30, 53, 141}, {
              190, 43, 44, 191}, {84, 23, 48, 134}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{158, 126, 69, 130, 76, 134, 84, 95, 200, 168, 194, 86, 
              196, 164, 193, 162, 160, 74}], 
             
             LineBox[{191, 190, 189, 212, 187, 211, 186, 184, 145, 106, 146, 
              112, 148, 115, 152, 121}], 
             LineBox[{91, 139, 173, 178, 205, 104, 91}], 
             LineBox[{97, 141, 180, 143, 99, 182, 209, 110, 207, 108, 97}]}, 
            "1.4`"], Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{124, 153, 188, 113, 147, 114, 151, 120}], 
             LineBox[{73, 159, 161, 192, 163, 195, 85, 77, 75, 68, 125, 157}], 
             LineBox[{83, 133, 80, 167, 199, 94, 83}], 
             LineBox[{90, 138, 172, 177, 204, 103, 90}], 
             LineBox[{140, 96, 107, 206, 109, 208, 181, 98, 142, 179, 140}], 
             LineBox[{144, 105, 111, 210, 185, 183, 144}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{72, 129, 67, 156}], 
             LineBox[{119, 150, 117, 123}], 
             LineBox[{82, 132, 79, 166, 198, 93, 82}], 
             LineBox[{89, 137, 171, 176, 203, 102, 89}]}, "1"], 
           Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{118, 149, 116, 122}], 
             LineBox[{71, 128, 66, 155}], 
             LineBox[{131, 81, 92, 197, 165, 78, 131}], 
             LineBox[{88, 136, 170, 175, 202, 101, 88}]}, "0.8`"], 
           Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{70, 127, 65, 154}], 
             LineBox[{135, 87, 100, 201, 174, 169, 135}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0.1, 0.}], 
        ArrowBox[{{0.1, 0.}, {
         0.09622530305709945, -0.0062862063307488735`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7798547734903954, 
                0.3022224175440922, 0.06482469892789602}}, {{
                0.8321922816347966, 0.3950343004701883, 
                0.11448038571750889`}}, {{0.8871080230550983, 
                0.5292769155755979, 0.2464857591521355}}, {{
                0.9434108306019099, 0.6858088889557592, 
                0.4227945173664487}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -89.99999999999999}, {
                  7.500000000000001, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -60.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -60.00000000000001}]}, {{
                    7.500000000000001, -29.999999999999996`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -29.999999999999996`}]}, {{
                    7.500000000000001, 0.}, 
                    Offset[{4., 0}, {7.500000000000001, 0.}]}, {{
                    7.500000000000001, 29.999999999999996`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    29.999999999999996`}]}, {{7.500000000000001, 
                    59.99999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    59.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -60.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -29.999999999999996`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 0.}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.2\"", 1.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.999999999999996`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    59.99999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.43890322289749767`", ",", "1.5010172205037566`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6`", ",", "0.8`", ",", "1.`", ",", "1.2`", ",", "1.4`"}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.6835866447358065`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinePlot", "[", 
  RowBox[{"debugParams", ",", 
   RowBox[{"Length", "@", "debugParams"}], ",", 
   RowBox[{"Length", "@", "debugParams"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6830692319356985`*^9, 3.6830692410077477`*^9}, {
  3.683069288780509*^9, 3.6830693884828587`*^9}, {3.6830695073112*^9, 
  3.6830695356883616`*^9}, {3.683069599773278*^9, 3.683069663057469*^9}, {
  3.683069789201457*^9, 3.6830698576584196`*^9}, {3.683070163231711*^9, 
  3.6830702045470853`*^9}, {3.6830702361531553`*^9, 3.6830702640967865`*^9}, {
  3.68307035266383*^9, 3.683070352766901*^9}, {3.683070419108245*^9, 
  3.6830704319868298`*^9}, {3.683070465875395*^9, 3.6830705107849436`*^9}, {
  3.68307054256513*^9, 3.6830705500821414`*^9}, {3.683070588742916*^9, 
  3.6830706078446493`*^9}, {3.6830710863168488`*^9, 3.6830710973852262`*^9}, {
  3.6834826901238575`*^9, 3.6834827184722815`*^9}, {3.683586455641859*^9, 
  3.683586473513995*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1:eJxcd2k8ld/39jmRSMpUFAkZKkOpVIR1Z0gqmTM2oJGSkFAZUyk0UEgIKanI
mSe2efgmCZVESoYMlXnm/PfvxfPmOS+vzzprX+ta11p730oeF2xPLiKRSA1L
SCQB0v//G4LHKf/7sWEdUr54fNMe9P/wO8lDW+ausyH3vPKJKPphNJVmu/d/
OJz0CJb0ZEN+FD88xfMEYh4r3UXGuGPzilnOTjZ0XfvvfOCCDxpKTTkkgPF9
69WO9QuyIUksfW489BI6lnhj+RKMPzBoDot6xwLSkT2Lbmy6ilbv+SohhnEH
pYK4+jssaIkr+8zhRKAcI+ulqzBOdcvYYbWXBaGHDm/vY0QjM+vpcmWMSzmy
k2NnmHCxR1PzmMRtJBIjsGU7xr+sXxQklMsE8kHjJxsa49FWWX+fAxj37VC0
2nmICTe3OlS3kx6g3vGCL2cxvnx1afyjQQb4vlt58WJzIqIv8RS6j/EbvjSP
1EgGqESMZVr/TkJCr3k/yzDupkQ2LVnBAH89sRzBPanoJ108l0weAtau/c9u
JtBB+ue1K4K/0hHp1OppK4z7hNi0R4jRQTStRd/ibCYi1Vp3vMV4+MDuIvtr
NPjeZiBVE5ON0lT2fFFfNAT/vs9PVHRSgfKjPim7OQf9W2ncxMJ4xF354lJD
KoQ++VgheSAXGSqn6Z0RGIIgfep7v3gKmFoKKzP+5KEHmxJa9QWHIPBToLDF
p0KIrWbrnuG9Qd2+5t90Fw/BAWGFIgmpQsgWS+QIuL5FLqGWD44KDcHL5Gvu
yyzewtfRlvC1g4Xo6bW3tpwlQ3BE//s1wZF8UO+VPf34LhVVnBNbf0hkCLhH
ZlcV738DGUYjNRxjOvoloXJcQXQIgkM1g+9nvYIzDKfMOjITZXmFWWqLDYFX
3tWp0+Q88GsS+bSmhoVys7tSw1YMwYv6XtVfvrlgpSD7Z+AuB23yNRyTkByC
OZom79jcc2AFLN+ebMtD1/bYpndKD4FSbuOZ5rc5kFnfZl4iXIySn6R5DsoM
wetHzqdCnzyDJl1FvTd5CIn77vqkLjcEbPu0HMv6bBASTM3yTS5BZsrG8rEK
Q6C2IkRisUM2hFA2+pzfX4oyZeZ8xZWHoCcyYq2oUTbUla1uJPWVIq0yJb18
1SEYuNBjNJ6QDSZRs/W2/mXIKr0zw3PjEIjtdvH95/YMgp3bSX79ZaiiZ7XR
Di3sZ0c1mlFKDpQf/hGfZFOO1LLTtHV1hqBVZw/P0PgFPFQ1N5TKL0dfaYtq
g3WH4FPC6R6L/S9BQbJ5NUuoAmWseGutpj8EXR4ZQ+Lpr6CGFU5jeFSgZ+HL
TDxgCCKDTXv91fPhiEDEJlJNBZJVTXtsbzYEx099534+8xZY2+SPJehVopMC
8hZrDw4BxbROo6GqEPSDFk25MSpR7h63LQ12QyC6bzpr+yYqKJ4s/3Barwr9
5jfHBrgNgUJKyfflCTQYSNjUzuZWoXCvp8Kip4bg+xXul24yAwZbazNhZzUK
zJokUnyHQPuwa7+zPxNeBIXrT+VWI1V53+FtV4eg6ma48Op2FpBLY5LsxWsQ
87DS7oVbeK4Z+q8NN3NgaGibFde7Bl3ISFkvnzQEd8fNT5i6cMFvM6ugml6D
8krns148H4LLrCb5SHse7Iha01jZW4PWfw/YVcwcghrJTedZskWwcZ3T0xh+
DerVl9r99L8huEW/deLy0yIwyhBE5zAeuGqYR+8YgkOGfC3R3iL4r8Nc9+Dv
GuTcHvHn0uQQNGbbFO0ZKwJmud3GRUU1SNHv0/MQyWHo8pohRFqKYCr4y2jn
jRo0alNunKQzDJf5VoF1mUVwqPSp1tV9Nag7eXtyisMwrLOPsXt1rggshoXW
+IjVoAFzGfnEsGFY9uipmglRBMYBy7ccqahG4g/XaGu9HYaVjx2S/+oXgUdK
4LWa/GrUSdwzft43DMr/qa64OcmDl+pSTqXrq9GiC+Z5khPDwHqe6Xj0QRE4
2uYNjJyuRuSW9yaPl4xA2A7LDUpyRdB2TmtY+2o1+mZVvHxk9QgkVjVJ6Xzn
gVzI+6B/K3Ff1nltHdUYgSGuIfns7iJYZe1hFqRUjQzvTw5P7BmB/lMvgi3J
RfDzTNEb4aXV6EKp46V05xGQrPzv3PxfHly8trbGobYK/SWtBzH/ERjdFBq1
ZhnmszxY429TFZpybj4ad28E1L2TXUYqeCB4yP97sEcVsvFLoZIKRmDVipDK
D1JFsFurP+HE9yrEMEtr7GseATX9s1s6t/Pgb/U26zWtlehj2RMDw68j4NFo
6ap7sgiSw1hVh35WokRfdaXRzhEw4qUF0fcXQSjZr8DFvwq9GlgyM/NvBK67
/V3yPYoHD5+Irzl9rQqJahV2fZkdAUW/J3e83HlAdI9Wdy+vQrTGLwJdQqNg
d+KtU+cHHnypfVv+a6oSnTuwPKpWehREyndI7W3gQdUS3p19ylXoz/UlWqA6
CvtKgwXFI3jgTt1c6dpfiTo7Pa8g3VGIvOm7M+gZD2wauE0a/1Wileq7X4Tv
GwWH96/jFHN5sNMn6w76UomiexkKK4+OwteLzX91L/KAEZEzInqvEv3auE3i
bsAovM556xWRygPx/uvUrIxKJJITenzp3VEQSo4I2uvCgzdeNdJ5eK69q9xH
gvJGocAgxINI58Eh+c3Xn+ZVoijB2K3JdaNgLjhIMurkAnW5ueOnigr0eoeo
bH0D5qk2Y9LVzoP+FG+VR7UVqOR9rMTDr6Nw6G93M7WWB9nH2pQP7K9E+sl7
Dxl2j0J/ge5BO1UedLUWvWx3qESXyfe3LxkaBR1TY27uYh5YLDbxdhuvQIYe
S6e0ZkYh2XbZp2/HeDAmkH/nbkcFCucUC5QLjUGu8fuSOg8eqCjkdaYJViIV
FYZkzsoxuBmzfkO0Ig9M1N80aXyuQPeV/+6lq4zB6R8RScH6PLi9Td80nFmB
Qtbmq9N1x0Dqe/yvf8CDsq3vAlm4LlKc3DJzizEgPbKz6hHngcEpiejYmxXo
xw2KRMWRMWB4C09f1+HBr02LNP3uVyCIeP6HdmkMLihWc4P5XAjTZW4231OB
CkSmMr7Gj0Ge04XbXZpY5xfuQZbxFah/OFzA5c0YNKzfa6P5kgvDv855vW4v
R5q3Y0k2lDGwGJLxUj3CA6u08JsO/eWIXcl9NMEZg4wAyqYNxjyIK9rpPX+w
Akkl5ZW9qxyDiy+n9kXWcCHPpmrvebMKdMW48Nr4hzE4pFPzzaiECw4BUiLV
E+WIedowQ6Z1DNa6nQ4WFcC+bc/SVxstR77eF5/d7RmDA77/dduOciHdWbDd
TKQCMX5IXiwaGwPXTzd6Ryq5cNt4tvPB53IkIsR3MRUYB/6VsCTo4oLeMHl2
dV05ym46uyAsPQ5eE9Qcq09coNf9HTtfW454HIvtRWrjsE3c+rYplwudmut+
3HhYjt7f02Gy9cfh05NeU7FGLtDcnbR/5JQjOFi1nWQ7Dj1bHbwn07gw5MAY
zzAuR7KJDeUSXuPAmf7iWv6dC4YKczm7Xpej8Ol+F3P/cRj976S46CkulG6V
N0m8U44C304Va18Zh967nr/WXOHC1MilbQs7y5H5g8eLtKPGwfJcxqLIci5c
VUErqzC+/L51m2vcOIgl6udU0bjgJZlfpeBUjgoer5qXSBmH95ddO2SiuMC6
Oiz4BscfVRjbOf9sHARSGmoXP+DCe5trCi9ky9GdLdet9CnjQHPRi8zB/KNX
VZpIqeH7+umVkHul4+Cp6zU+EsyFkt74sOukchTzNnZX+cdxCFucUxh7kwvn
R43k9o6WoZn1S+vlu8bBVFv+plYIFyJrzu5o/VmGzjB2wpmpcRjUeeeq54P5
rFGeOFJWhj7TKKpFyyfAxWexy6bzXNg5IbDbiVOGLAZShvvUJ+CC/TcPLxsu
zBlmm647X4ZM9s/TuownIHT4S8uGQKx/gL/3iqoypFCjwBA7OAEmWy+v2SPN
hV7rvnj1lDKkqde7XNp+AhxOXh6b2saFWh+zkG92GLfYMpDlNgHBqrefHfDi
QpfvhnLpM2Vo54v51b6nJ6DE9oOU9T4uuMWkEPWBZWjY30Ue/CfAJ/1Pq84m
LszcNp0f3leGvsl1cU6GTUC79HYRATMu3NLvWSFlVoaqPd51hcRNgISCTEmq
LhdmKa1zZ0zKkEPpMGlV2gQ4Esd/CitzocBo+VWaTBkSVizsKHszAfctXO39
t3MhP8R8j5x6GVpzMOL22tIJOFSl/M1sGRfs5c70D7WVomWXYLXFpwlI9Uwn
du/gwtLM7rk2/TKUtiC1RebvBChu64nvLuZAy7qjAztvl6I34vFVXsMT0JGf
TH3kxgXrp0EVV+NLUXXQs5qGSazD508il6y5wNiccPrqaClSiTIy1CFNggJd
/OKuPg54mL5MecgvRYXpQe7SwpOwg3pssrmJA+QV/osDmKVoU9YL49QVk6AU
LN5DF+WCMEf4pv6LUiS98kN5newkUJ1PmqYv50JMpb3YvqpStEpXTztr/SQw
P2TWX+/igIqkyqei56XojPSiOIb2JKjMKv5sGuHAhcfFucS9UtQgTnqrunsS
xMw0Ag9McsCnx+XHcFop0t77cvKixSTUFhw0/tDCAbnGg4Yf/UvRwVDp7iin
Seh/1DjoMsCBl3p1DaeulKLk0Ft7p85Owi6D3qzEeg4sWWsTWWdRivx3Vy+7
f3USIt+ZHbb4xYHgddA4d6kU3b21oeLeg0lQrwnc9OEpB96dvb43QKQU7au+
+Wdd0iTQH7fvTJ/hQHryOqfEVaVIjPg11Js2CSmQeqm+hwOLSs0qK2xLUdyT
jffnciZB66FnknwuB5be//bA0KwUpWwYPNj8ZhJe25IqdudxIKv+0cxT6VL0
6lrDaWHGJEizpsMT/uNAl8VQ7L/VpSjk7vGyDjQJRf6vPIfYWP8Xifu/K5Wi
QM/2rKr/JuHe/bpgXg4HhCX2rU2cL0FhUYddd3+eBGVOqqcJkwNXBFRC0vgl
yGTa7fjlX5OgdqpNPxbHs82i1lWPlKC0a1azg8OTMFKyIntDBtafbiPQ8LUE
Kbyam/hAnoLpTdw3VzM54KaVr8FsLcH3zr+7H6Sm4N7I95g9dzggteKIc19O
CTqnMr9GRn0KaOz3amY4fmL55KvHgyWofyI5ZYvRFPwR0LOE/RzYpW2c7eNS
gohnb89575kCp3fMliulHNA7VOLfebwEOVwVKlIyx/kXm1hcpXNgq7UezYhe
gobvVymfOzQFUdrWq/VOcSB+52Xps9wS5Nml3OvsMAVtLlvH/zlhHbRrDt8N
LUFLmZc/r3ObApFO+2eDURyw/LelbMOlErSu3zHR5cQUnOyIMtobiX1SEZAW
E1+CnqWc6vh9fgoSX9q5yXtwYHn56s31viUoYJeNJ+/yFOgtl/wUeYEDr4ms
zCb3EqQa2Mj9EjkFKcyUdCOMBykNT0mfK0EFq+W0r92dAh9k0W+H+Vyvn728
xrwEeX/Xc+h6MgV9U3Mtwac5cPmbnWWgbQmK7mujn389BRdk6v3vHORA9Tkx
T2JdCRJxztHt4E1BuPMZ1RZPDvRbzmqau5YgOanN9PSGKTh9UubKB3kO2MdJ
9piXIfRk65lDK5unwD1248XhKxwIVNzh8eMTQoNfZtWoX6fA033x6abzHJBP
aiBidErQBdO3Dtk/sG4bKlaIa3Hg3Imh8S2bS9CmuYpYi94pkGsZcIhW54DY
SuqyxeMI6Y9ckuf/mYJH250bw3AfV0YfubViBCH7+PnutRNTsKmkXq7ImAPN
5b86g0RL0KAkLcuRPwUmO24fqdyIdRbYe2/wC0JvfIrudAtPA/uBWXD4Lg6Y
uf0t5b1DKHL7YHSz1DTY8ZZmX9ThgOmHfXuoH3F8ykMpccVpuExjFbCUsB9u
OD3/ehchueFL9Zpa00BqbODdw/yZx9Xbt79G6EHDywhng2nYZclX+CvBAWON
z9ustyNUfLvKxPTgNOh89//Fx99fUyeZjseKEfIp19h+znYaDLnSi3VH2cDY
6DSpGofQCnG/22OO0/DnLyP1BokDlYHHt25ej1BKZ7UV98g0CPR86Pq4ngOr
ftOalm1B6KNPg1jXiWnglp+b2irDgU2Zn8IknBDSeDBhNXJuGm73RIaL8Nmg
YC/wo10VIee6eT2TS9PAn4n9VCyCfdtjuTFwKULSTVVGGaHToFSYnhyxlANn
TC1P0NYilK7tUWEWMw2TuyV31E+y4f6biwLh3cVIfAUz9lHiNIjO7jzzkMyB
42ZPFAd/FyPlFyn11zOnoTo1M4M9wgZpi67MXG4xsr3skxtfMA2sgCi23zgb
xup+dWuVF6Oi4WH1K2ga5JJZzQKdbBjYTLQeOFyMpA9uP3qpYRri/hzp/jPN
hqvTD/vOdhSjNVV6HvGfpyFh2pCfgdjQs3fMMOxZMZoodfpNapsGp0j2+KEG
NnyM8+4RNSpGWqayzOqf0yASX7JdfZgNDS+Zay2di9GL5yESs7+nYS6ptfBm
Bxv8TUW2RwQXo70t6+WGhqbB1E/g5d53bKgRMPRJNixGc9vumKlPT8MJv6Xl
/l/ZkCk2rmS8rRi9fjLddXfRDCyyylCqb2ID+/q9iq/4XIrAjPUasRnYUf7v
Y1UFGzTMPq3LIRcj3eQWB3vZGXC7f+uCOeZZ6fyls3B1MUpY/XntIdUZiOAI
fNrHYUPKDYHzlMoidK3lQ4HIthmoDO9aR8V82udiPE1UilE8IyfmmMkMWLk0
a3onsyF5yGmj7PkiFFb7Ii9g7wzsuX9vsqOFDambmreHXSpCPtVFspIHZuDY
37t/jT6yIUTw9WhZexHyay9aTbeegZdDF+bsc9jg/s0x2ayzCH148KDF/PAM
jJ/WWbw+nQ2S1w/teJRYhKY+fwgZcZ2BjEuRmQJ0Noh4EJvUY4rQshJnz2yP
GYhc/SQ6ncIGn7aW5fTnRUj21P1V5l4zEPDq5JTlUzZYJL/X3BNahNIS+vUs
/Wbg+7XePTov2HB8NvykpHcRquPpTtlfmQGylm3HEcyndt/lsMqAIrRz7dv6
qOgZOKJk1NSXxAbFB35Hs02KkE7P/meX7s2AQdD7D6IZbBAyy4vUsi5Cmhwh
NP9kBoIuxG87Fs+Gdf8lhd1aWoTc3+VMns+bAUUr5aHAx7jvU5efuDgWoRAH
iyUEZwZE3kwtyr/Ahsmoy0sf0XnI/ZbjBY+iGbj1Y8/XG8/ZIHP5zXBWKQ+d
sp4V6i+dgV877f4MprFhQlxCr3dtEZIjvjq6VM9A92Y6NF5mg98H1iPdNUWI
76HTh+pmwPRcetSkPxu6EmTMW5p4SO7D8fN2jTPwbyHWJv8mG66YOi7yaeCh
rK1rfvS2zEDW9kdnnkfiPBfmRgp6ecjvED3N/scM6Jd5iLniPKOsZ2wo4qEn
K1VeqP+egdCLaUnTIWyYXp4ULUvloYzDZzcJDc/ARPy/NTsC2XCSamsyiOvy
DjT482dmBp7cX5H/y5sNFMFnD2m3eCg0fCMte/EsCDysvMG8yIZDhvEBT5N5
aKbo3PVuiVnQSVoR/uo4G5YYdsV0WfBQRPECf1JhFjIizG8tYN0kJsVt2nH+
ftcuvyTtWXieviGsYzcbYrQUH0/3cxFzzv66hs4svBG8+HogjA1mlLXOamNc
ZHqsqPyg7iyQiuIyxoPYEO376+geLx4ysevX99efhSHGhr6DB9jQPfdoMDOA
h8REHE9chlkwmzCYWmHChqO7NVpMlHiIHSyxI9h0Fi6ffPgdXNlARD5foyXN
Q+l+F5kX989C72Lhcwdc2JDlL/OqZhcPCaiwX9vZzEK7/fXcY+ZsmPlms31B
godorw+OhDnNQtmbnec3HGJDzmfF37vnuejGyReG947Pwo4Ru+BRSzaUre9S
jxPjoS+Zz3oZZ2ehweqdiQjBBiU1h+2jbVx0jl9xONR/FoZHuw+W4PxnphOF
8we4KCt3sT87dBbirC4fu7eLDfvIWnXGb7gozP7Qvorbs5AnqHW3z5gNDzYc
MJYf4aKQouc7+5Jn4UD8keRWBTaYKOcejnPjovsz12ImU2eBFynn/BzzFA3c
KNPty0VWil3PHJ7OgoVA60gP1mfEtmKxYTUXnV4eGRCaMwtCmv1qm5XZoGM+
mu3C5CL/u4pPE/KwbllK56cxvmPZ2/vegVw0qUuW/1MwC3WLFkqEt7MBJKIj
joZzUeeSm917GbPwU2nZ4DINNth49D93vMtFqatn1WyKZsF/5HhR5To2PLKv
vzp7nIteP3raXFYxCxTnBMPCDWzYACuusk5h/gIzFlbvZ0E++1O+AY5/Os7+
T8eVi/SKEtUKPs/Cmuq7h+rXsOFfe9SxpN2Yz7VA3Zkfs8Csez8H8riubsEG
X1MuWtK0c1X24CysVdquI7uCDXNdi8czFzjoSdHG9g3Ts/AwKiJaT44NevtP
SC3z4iLN+avvJYTnwDHzXvznfhaMKulse5LJQWealRVtls7BxX1rfrI34Tnt
8vi7JJeDxr8uaeSLzYFPbf58gCobvAyyQ6XXcpFA8Om9zyTnQM5dKlhilgXz
HsnFMlpYB/OO8o0yc9B3/uDfrmEWTFoRFqvbOWhs5HduptwcjNqL7NARZsPZ
+MIB5zoOOm6erzeqOAfDM6pfV4mwwXJG0njPCAc5SUlMK6rPwZW92RpnJllw
4MGl92KNHPSlPOrdfa05qB3oXHN0jgWm+Il2j8NB+j/dq8u3z0F/FXVD2zwL
WOQriY/ecxB/wpA2bTAHJrnyxXlDLHiXsvJEQxYHHZI1lS42mwMFlzVFQjj/
GpfgEqnXHKQu1lVfaTUH4fgLMHSABWGUz7UWYRxk0KjHz3CZgx3ZO18ycZ5G
P6cxkxwOemj8ckHt9BxsTH68sucrC9RTfC9aLOKgiAvb1woEzIFFVibZTIAN
N8U3KUx84SDJq7FUy6A5SPB/8v0YlwVb8xt8XSo4KCMisvHtlTkwuuwnXVTM
guQptXMyuhyU/B8TakPnwFvltP+HPhb0+AsZ3JLhoHu7ifgfkXOAst53fvzH
Avr03MFEDw76+6Vk6djNORi8NMOkNrGgzbbeUsqTg9a3ldopx80BLbeC2PmB
BaDI+8lU4yBK0Vu7Ow/m4PG18+t/tLPAqiuF7rGLgx7/LOiZTJ6DCTtZyX+N
LEg1kS+Y1eegijNddgsZcyB4MTrRuI4FJo3C72+LcdCm+fKaGy/mwG/mlcuR
Zhb85+lrfmk9B90/3Lpqz9s5eC+Zrm9UxYJbUb9pz6fY6GjgZ0hmz0HzilqL
+XcsUFpTveUvzsO9Yf7IrmIO9tNI7YE8FlxzsIFhGhtd9fJ79ubDHBxPrjWY
r8c68JkGUkocdP7uYFt80xwcPNXwe1keC1Y4BhvyhTnohPwp/qovc3BOQifq
eT4LuISuwWIOG9k27PmP3joH30LK1Q5WsPD/ftUJMtlIO0Caq9QxBw+vfU/N
KmXB7uXGerFtbHTQfc3Mzq45WP7KxaKpkAWDOxdnVdSwkbVM5ovovjlYMbMw
nUNlwTfhgpnDeWw0tcK7/vC/OZiOeTrhxmJBUlOO/E987u79l62XTGC/Xbp8
sOENC7I1+ERrDhvJ+qBXu+fnwGbptNtlzLNO/0GCRCIbHbsqYmm0eB5epAnd
DcHxlqz9Jj+SsG5vq9qMls9Dj+L7a8tyWMApLq8JvshGVE6X/WLZeZAPafSe
zmXB8m8652vj2ejTOMvbaP08bLDybJx9xALVAlVHS3E2eii7Jbpfex5e11Zq
HqDhuha8nnu8YaO6ozLed7fOw3Wp5p6ICBYQ5zUuzmWxkVmNoEWO7jy8pF57
sTmSBScr1wqs1WejvCKRvAe75oGTudquJIMFGYuSyL5r2WimdbrB0GAe0vee
2nEP87z1o1E51oaNrgQU5dCJeYh13zK89QHuy+8P9r6ObDRwgvLbw2weyh5p
JFFjWVBY6vrEeBMbGTy6W31g/zzY33DLjsD8f6oYZ1VsZqPrFmxrsvU8ZNGl
x+3usaD8KnU0R5eN1L8u3Wp3eB7IHxfbxsWw4HPFM89qSTYSD0trUDgyDzeK
336nx+P9kPv873c5rI+FpET3iXmY9/SntkWzYOZ2TPRHQTZaWFtIcjs/D+Fh
mvXrb7Ag5cWiXavJbFSut/RkR+A8SDBWDL8LY8HSh8PNX3+y0K3vx5fYRMzD
Y8Nm/dlwFkQtmU69M8NCButdlxrEYT56ifO2vjg+0yDljQ8LHZCQEM1PmYdo
Ml/NGPP/6OkvuEOFjUYf/JCGtHnwUv9OyXJkwZ7ntisy5NmoakytSfXpPEyr
yzqkYrzhxXUn3+cs9Pv0dY33WfNQeGPr59tBLIj4NTspU8hCfVtKM4jn8yC3
Ulec58eC7vDOeg5iIcUXZc/F8+ahX7soJNibBf6rb6tdpbCQRWXpdYX8eaih
v/c3O8cCfVWpvKEcFjpt8qw3mTIPw+q3lW9hPK7POfAIxhfT182kMOdBhSSq
8u0MCwqsZhU3prLQvbs9MtJF8+BLfXYm9zQLNLTlH03fY6GhrRVPlMvnwU9T
/L7AKRYEUFsdR++w0P4wklx77Ty0/9GkOHqwYHyPgn1PKAv92K/ivPfjPPBd
aVPhx1lQquD84MIlFtqR/PF65Nd5+NlfUjbvxgKRaD+y42kWqt9AKcnonIdr
UlvsNFxYsHqHQ4rYERbSf/dcuGJwHrR5TwUuO+C9fdwp2N2MhSw/rBqbmpwH
OxW/wVY7FjxOWStz4hALHXZNvfJYcAFkpC5wGeYsmBN88ovczkQ79dt+r5Bc
gMna5su2R1nw582nH+zLLOTvU7MneOUCqCi/79u9mQXrf2nMXcJ8Vl90/msn
uwCblxbrIR3sw9PP/L8sMNFz3Xt/xeQWQO375dulliwYdhr6GDTARCT5T743
FBbA8Or9S1xrFtig6r97lVkokipznqW8AHq83u5OQxZ43LFNblvHQp9761LF
1BdA+YCFr9NuFgTKmmb/GmWi/V/0/j3TWAAd1a82101ZMPDDv/P8IhZyLH51
U0hnAU7lnDN2M2DBxgqDJERmofGXHNPeHQvQL7LaQHsXC8yVX4q9/8FEJibu
20wMFyDgtWZ/K47X2MtXPj3MREcNnl27b7oAEUeuOnC2smAH34H0pZ6JJkL8
h88dXIA9osf38nawQE6AtPhnJxM1fxro8XFYgMNX/PzObGLBlxFnha6HTPT5
1bG9M0cXQGjtmYYNeiyoLKgq2TDJRLcHOl/oeyyA49qicWs5fC9rxwhl/GSi
J3ali7aeXICV33IvbFvHgrVDDVvyUplo09nju43OLMDs0c3Vb7awYOFJwLqU
x5inrNWFCe8FeOzJeWSizYIPfY7Rf3lMdLyv69du3wXgDX86clWJBd5Dlk+d
XzERlS6q8jZgAY5c8inRWM8CnuzIoxf3mci9p5GVGIzze6naflRjwXfht7UD
mUz0ddxceHvYAvjH3dmzUQHXxeHGRt5lIrHcimt7orF/PgYa9WL8r/Ft99YI
Jhp1XRW4cGcBbp+W821ay4I0g9nvojeYaKtKGyM+YQGusUiOmjIsqPp6N3bN
KSa6E9goUJO6AE53zanya1igEkt3X4Lz7Fa7y9TNWYD091beH0VZkHCJuj9K
momyhcLviRYsQGviee8GZRbIj/r7lKcxkcjVVxYrKQtwXD28IneGCRlJ3W8U
sf4Mff+t+bQFKHeIN984y4RKcSERfX0mqo3dbLaRuQBaA8k+VyRZ0HXkhh1N
CfclleJDcLA/5eJ+LMU8CXO+aLoVE/Gs27eQihcgdtkJMeoSFuRcGIrzc2Ci
MM3IZf9KF7BvIlaYC+B3wk6DH++0mYh47wSSVQswoKZ+ZWIp3lfTwu6btzNR
l5WwTsd/C6ArLmCzXIgFzPR9Dw0xH2HByYXNDRin69Ukk1hga/dJ8pM8E6UP
tpP7Pi1Ad83e6oeCLDguNmIUpMpEV7nCr/3aFuChlLJTwjwTdvNEdAWkmOgf
1dcv4ReOj0/YfRfjMTfzQuXEmWjjy6CqhAHc99PpdW+mmOASuDdv6RQDZXrM
KrqPYZ5fn3eSp5lw9blqxpmlTGQX+uqMx8ICDL0wiRgbZMJso0YK/ykDFfY0
3xwV5sNrr2zPVYtYsPdQh7CoDhPN3H7bJ7CMD39udH+dbmGCyqVGuwJF3MfK
xpsPl/PhXmhu94NvTJDWau31RAyk+2f77DIJPqwX5aXKjzHhS4tBFq+AgXJV
t6nqSOM8tUupKhNMWNxTtC7hFwPd/WVoOS3Dh7D1X7RvdDNBMepvRk4HA53s
sXPqkOODzWTGsm+/mJDkeulSGJOBeM4LLEFFPhxu/7mxcoAJqREaW+2rGUi0
7ZziTxU+0OXsHRW7mBBwoEjYtpKBuN4F2zQ38QH5fGyY+sGEztQZ+ZkXDJRt
MLGpfzMflpAZ9i04nmrwpn4xm4GuxdSvidzBh7YNuytpuK70z5C7LYmBqGOb
Hj4y5MNj0yOGnzqY4NV1cVkYrku+tV2NZ8aHpiL/ffQmJry472r44QgDHb7z
yNryEB96hKyYMZi/v7/aDbsKBup5fg1/qPAhT+ZfsWMVE8h7xP33MRhoo5Nr
YK4dH+QHbz+yrmHCKoWXSqYXGOj+/kmjrYf5sDmzx/nsVyYIP31BIp9koG37
q20tnfkAm71SSa1MgJR7/0JjGCj5ZVHqsBsfvooxJprfMyFMa+UWlygGKvlc
8qL0OB/8NcerPtdhnzx4RE7CeZxevxtoP8GHCurCn66PWIcTYdY6FxlIzapM
Ou0sH3bsqU9IeMeEKjN2usA5BtK2XMSs9eFD68Etx07WMqHh7AcX8cMMFHet
s9svgA/Uh/xIKxyvFe/3dfA4Ay2KFYnqDOHDobI7nBUVmKdn0RJpUwYy//w3
qyWCD/UeBwq7sA6KI+fGFzsx0J/uvdsaYvhwvmu7niGPCZc/enFDluM8JRKN
Rg+wP3UmtpXjc2u81i7a7s1AnfpXV08n8uHmf/ahBQVMWKTULzLjxkDN1X8i
A5L48MljvQu9kAmbdtoXqcozkMPUq51TKXzIrVriMVDChDU7/AaPSjPQo9BL
wUJpfLCw6mjuxPi2k8MoRJeBWIZuPxOf8qF3VGxdG50JA2/Vqsq0sD7Rs51W
z/gQECd60xnjK56H3R+VZCAjetMDl1w+iCyXM0thM4Fmk/DlgQLuu7B5F/kN
HzKrMn5fpDKhQ+HfUJwMA30l9PdJUvhwfcw3oRXzHPP/XmMniP38VbI5k4n5
j6pbrcbxq2V+ag6IMdBK/S8Z/4r4kPFq/UnP10ywe3vKMnmYjg5JVQqXV/CB
07hWRQnr4N/oukVsCQNdF0g0T6zDeQLNFY48Y0K+r8ehaDYdZS/e5dLUzAe/
FTHWDRQmRI4PdxRjniMSbWMxX/A8tp63X3jEBOuMnYdNsf45T9/Nj3/lQ9Xq
iryUFCbs5Ox7MVBNR+KPfTedauODxBdZilAe3g8nvpW+K6Wjs86rC0518OHg
sSmx1JdMULCtcY/toaOR9eZnejv58MhtqUh7Gvaz8pQzt42Oqktvb4jr4UOZ
yzWjMYx3z+QLfiqho9kua/HIfj4oTnyQD8pigpKAtF7yBzpyr/wXu/IfH2qO
FIbgexR2NpttTqiio4Wc31pLx/jgTAoayn/MhCvLQsr/UOloWOP5/tBpPiSV
fGxvxvFO65nRcoiOvDULTPL5fHATjfLrTWSCw3WK0OqndGTnsm21tgCJoL3N
NXBPZoJHQ3HTEh4dBfxlVwgtIRHTjrdu6cfib9uwl8X2x+hoWWnWR2FREtFW
L55+IZ0JEeZiV7s/476oOfY5LCMRx6kLCeGhTGg/rnRzRx0dtUYstr0kRiIO
lqp5McOYcPrO8JUDV+kotUBRKHY5iQj5l+Mf+IAJJx4OnbnnTUfbNvDle1eQ
iK+dTdr9mGcFzyfz2kM6MloiGnFTgkR87HCBXbeY8Ga9tPLhR3S0VTznoL4U
icgbCHSvjWZCE9jZVwXQEVO6vnbJShIh9MvYvvMOE/4N58mZhtKRleRDSUUZ
EjFW/cms4gaexwWp0nPhdHSrz23P+dUkQuDTtrpdUUwI3UZ0a5+mo3Rzt1/9
ciTiydkrutY4nvLzd9i0Hx2tI+ssqVAgEfuXLm7PxXX5Nc+vrXWjo5DrGSta
lUjEfweKj26PYIKUckfPn5O4L9efRrqokojD4a+l3EOYwCruO3hkNx2RTt6P
Vt5IIoLVeklrwrFP2oXeR0fT0cnHC1GPtUjEuxa/mfbTTBC8UPRulyAdNQta
DNhpk4hul+1uK27ieqVqr78WpiOdH6IivptJROvee/9uXmeCnujIOl8HOirJ
P6PbsIVEeD1x76ZdYMLtjWrw1Z2OooO/WWltJRH9+Wvr272Y0FJ72it2Mx0l
50xH39lGIpT1RCQeXGJC+K3D+SMqdLTltc+Mmi6JuHDmzRLlQCbEc4cPjRvR
EYX1zmXRThLRbn6w1uo8E7ztJZoGNOlIMqCMMbGLRKRc29hsgs997PrN3EuB
jsaTcpjrd5OIm0Vff4r7MuGZ9KHfpTj+/l7DqDRDHC/32tntLBM0yB+cYqTp
yLUp6eVeAuufOvps0Bv7RDxxv+kaOmLvbXpw0IREcEPfMl6cYoKFxmbnAaxP
gHdEWMpeEuGod9KuEOsm6ZG5MnolHSn8OSjuup9EvG6W9fx8lAmWyGDwwHsa
SozbaeF0iETYDbv888P5H34nnJdq05HBkd9BCVZ4LlxSjhraMmHhDuo9sY6O
6lstC19b43NVFHZ42TNB5KX17uI2GjL2nVWqtiERU7rLxvZ54ndIp6nh6s80
tIs3+0zZjkQMBtXNb8H4C99oa+dpGjol/5zPsicRt4RVDyU5MeGoV5TkvWEa
yu1b8/j4YRKhekt15UmM/3keqT6N8+iVOslrOJGIo3s4zqluTBj8Z/Ayo4uG
XI52+Ru6kAj7g/Qzrw8z4ecisR0/2mlog4brr6tuJEKFq3Az2IEJZv393ex3
NHRnpXnj2FESUf4sT6QSx6vYlq9e/4WGYu/+elrmTiL82A25IdZMkIhfpyHO
paHSGy25tSdIRJHBy+eX7ZjwLf/rQalmGtK/LNRjeoZEHDj7aULMAu+HNa5R
dlE0dP50xp8+bxKxcjBl56QjEzYHtlxf2k9DUa3fwiXP474bVG6rNsR88lMv
//6JdetnScj6kAiPEpVBPyM87yvQq5g0GuLcWXpW9gKJ+NR4a+szS9wXoa1n
mHE0VLgz55+tL4lw0NQz7bfCuvUyhrQLaeiaYKrCfxdJhPhm+QP3zbD++w8v
OkalIXHpyC/2/iQi+v3TRAUTfC8MqCyOfoTzN9cHTQWQiNyIVlPSPibk3nrw
Qh2fq+vcr9keSCIKdnLll5sy4eNOofhdT2moVvVP4mgQiaj2d29nEfi9EfpO
+uRtGvopE+C54wqJsHz2zkQZ59ct5EXtSqChFawtXbXXSEREmNHjZlyvzr2q
p4GRNHS9ZpifFE4i1F7G/3XG9dpf9W1ecYOGpmQpnNIoEnFSM+p1gh7e//ZG
r5S8aIiennlB9yaJ2Gidd3RsNxPaRiSfPH5AQ06nk7u23sF+UFb9z0uLCRs8
O7puGOO60lm/SLEkoqsquPwsMEF8/cc4dwsaIuEv25VxJMKdVJkcaMAEzdRr
T98F0VDZlpKfLvEkIm533IZXm/F75sDNm18xvu930O7nd7HPX/1wWKGN66qp
ld3hSEM/9A4vW3SfRFgw3dydtuN7ecBR8NJhGqo3fLXn4QM8p2/HBJO2MkG1
o6dc9QQNNcf8jHBJJBGr/ZNztTHPW16/dB/a0NAFvf82GD0iES20o1KAz+13
7Q7Ms6QhP/qWI0eTScS6aN+b93G8yba9Aqa2NKTS0yRf/Bj7gXTrWOJGJqjF
OHYeM6Kh09+q5ezS8J68GnBptQbui8xPG8l9NDRzaEPMnqckgr7MYpmRKr7f
GWxGtjoNyV7/+uFcNoloup0qNbeBCfSym3wrzD8tYaeOwgsS0ZFBdYpfzYTp
A6o6yXwqWu7xIrAL428CvkKXJp7fQI0UUWEaOnKj6tZYLtahb4VyJuYjLpbu
Nb2bhv5F9djvyCMRPSsDV07L4Tkt9r/nifHOnyVLr7zC854k33xvDRNSpjZG
y8tgf9rOF9e/JhH5N/LeeSkxYUr89b5ijP93NF7YNZ9EaJ0wGD2xDu+fiL6X
HDUaYk3GXJR9i+N3iV5+h3nu9ksxspGkIdN/DYPDhSRCe9ey5EPy+LtpX+Xi
ohU09Nu04JYwjUTEbPhy3QOfu0ZI53yqNA0Fvf0z7cYgEdSdweG+q5hQfz2o
qQLXayG6ZaiLRSK8RV8X7JRlwtmWnJcMURrqtRf3ruJiX02In5uRYILyQjQt
speKWp9J2v4oJhHnu6xH03GeVZf13qkqYh/uMtOMLiMRUh3vmtUX4/uLZyxc
i6iIX+J9fls53kuJPvf/p0MGSV5Gr5yKTi4tOKNRQSKeCqyCNHyuzZpl+tvm
qGhNQNlXx0oSwVI/2iG1lAl1nl9Y1YLYz/E7LW9W4X0iYrH3jRATRg0E8sa+
U9EDdYHSomoS8YM2cfmPGP4O8g9/tOULFc2JH1JWqyURsoHOL5Ysx30ZuLFm
Vz8V+fe2Pi37j0QMvPp0lrMEvwe+ZblItuG+B4e2BdVhH/K3+/0VxvfUPsdE
nY9UVLzvzu3j9SQieZlGj7oIE9AlS8fT36iIWb3L81YDiThlU33XSJAJ1TLU
D9k1VNT9yk+qvZFEkLasqyrDOjAvBF37WEdFUawR2/BPJEJmGUUnj4z92W7b
n8KlotRIx0jPFhJRf7Kzb+MiJqiv27COg/OsPXxgfd43EvFtiKllPssAtTZT
SIunIsFf3KRNHSSiLkvCxRWfm6t17Y0W5l8ZFfV95w/8zmkb9QoeZsDaxF0r
3RuoyOxUzF3tn/hdZJFouWiUARFLf6/79piKlDdapGzsxHPUeHQZeYEBtzxN
Yy8+pKJTcvFZzr9IhFnimrrmeQa4GS4Ke1ZIRdzKPG9OF4mIPVl6uX6cAdnO
PE3XV1Tk8PrdvGYPfucEZ8RHY7z32lGVvziPS1PgdtRLInrrjcejpxhworNm
mvuUip5W/U6P6yMRxm5E/gjms+3x2Y0HUqnonsa/6usDuF/dszptIwwou9jr
czeWihYZvh5/84dEZP5M0srB8fVXZA7fw/nPi+u6KA6RCF/zsHzeXwac5iza
IBKG9bfYYFs9QiJKLpG5lCEGvOopfH/zARXVC4btbRgnEUMHmk+g3wzQjY48
XmJLRYNnbHctniYRejm62+xw/kxrbvfSbHzu5mJ58gzeGx513mo/GJBRcTjq
8xMqsie/jOvBuJZ5T/dVjOu85MpZn6aiZ1e88t/NYv+/2rD+4gDuF/vp48su
2P9qSskdc3hOb3edEv/DgJ+n9QNHLlGRgn3AoMoCiUiaKJg/1411zplX6LpM
RYomzcPX+CTC/GF6pdcvBvALroVou1MR+29i1V8Smejqbzn3sYcBVmrpce9P
UtHh6TfMh4vIxMCpQOU2HG/DS6i3PUNFzg9W0c8IkomvHxSeaPxkwKfuaT1R
RyoKUb+sekKITMyu8pRgdTKg+UjtTdsj2FdC+4qzhclE/mVGB+07A3bYjdJz
rKmov3LVuKwombhePuf6GuO06MyTYzZUFBxG+vFNjEzoy2ee0/qG+zgYbmpo
REUjInqJv8TJhGd9rb1oGwMQL3NYBp8r0KcY4iJNJrY8MayNbmTA1reXjBvl
qEjkrS9l20oyIbB6rj8P538lLevus5GKVo1tqrZYRSbCr1S5nG5lwPj5P5Xo
ABXJF0hkRcuQid5ouoXnRwbQA8Xfpvzv3O78YzWyZOJwE83qM87/X0G1tI46
FREnbvLV15CJH0qHn5z7zABf73vfVm3Fe8bmY0ixHJkIjJ7x3ILjb/rcP2WK
8Xq9lg/BazF/mpSHegMDxkhl12fXUREKaVzkug7r81ohfDGO9w8PL3+Fed5w
mXsYqkQmghkNzj7vGaB9+/fOhTVUJB3eXtOwnkzE6B/gz2Oc9StwselaKpKo
rBM+r0Ymnjz9bRr2HwNWzd3jrhfFPtGUpezbSCbU7nz7svUdA5Jm2yL98bkh
y369itEkEy7DQcpC5bgvf884MPoo6Lj94KJALTKxbTZVjIPze4h30ElzFHRT
dGLxU20ycSBo+YlTNQzgcG8pJ8tS0f27FccHN2Pd5BKUX5UwIHRRnuB7ASqK
PRr3jdAhEy1hXcFvcX7DKYuE5WMUZKFCXszbSiY2HdF7e6GSAXp9PakZi7DP
/0ty9tlOJuYfXL5gh/Ose1Kn0zBJQcn5dTJ7dpAJmxrzE48x3mz2ekP+Hwp6
+Pe+8d5dZKLGbct4JMb9SDE/VSYoaCVNMyhWH+tju2/bKh4D9EltmzM7KEh1
MZoiG5KJ0B1WPdrFWM/SA+99MR+Vl6cSG4FM8Ff5BgQzGND5YaL+MB3nP3nE
rMaYTJy/pJD8H84f7rlO/4Eg5vmsXIJiQiYklHb0PclnwHKTtE8v+RS0ZNLC
4IYpmRhPjt3Pxfjd50EPw95RkPnPXpKzGZnQfM11lWJj3Vpb6lERBQVxFzUd
3ksmyjtS7v3hMCDvx+uvV1soaKCgxiLKHPfFvV2zmYr1PD//eVkbBXlSLwWV
7cPnGtr8fF6I+7ugPqpYRUFHK/UyV+3H8XfEmn7SGFCQcDs4pZaCagu3+j45
gOdo4+puLwreJwdp3OD3FNR0IlXioCWZaLJWPpFfgPfnjn9VApiPI+3EAUUr
MpExTRnYiPM//ncsw7qMglxPKShssyETWpe/Hyh8wwB2R8S+aBYFHUnTaQ2y
IxPUltpaQ4y7uj3lfmNQ0NWrf98LHCYTwwX5X4ryGCDPa1BuyKOg9L7MvkYn
MiGUktCsgXHXtcOJYlQKkr8bNz/vin3yJeDFt2cMWM8sDPkaTkFh9WGLzx7D
++GL/1DpKwbYpWxJeV9NQWa532lux8nEbd82dnwqnpdn7gXZHAqi9DHTDdzJ
RAo9fcI9jQGHSk0HbsZQkPcP/zBlD7yXwvX2tTxngKL4CQOlWxQ0GfTyuJ4n
mbgqZS36N4cB3tP31Ygs7H9vx1MhJ8iERct0zlQ6A6TNTLbJp1CQ+p9/if+d
JBM9ytav/DMY8O72GQ+NmxRUsLbrqP5pMsFcJ/ErL5MBUdENwwkJFJSxKZX3
4wyZEDwj/1MH8/Ez5+Z33KaguBrVxJdeZCJbUUp/OcZdxL17i3C9R6+1pWef
IxNvxt7NkTGe4FlwTArzlMm/0tLug/nX/bd5NpkBstuy9n70o6B1FXPv910k
E5MKj0TqHjPgQNfm/9bietUkQzKWB5CJvXYrfRcl4Ps0YqhLxxjrU9KpOhGI
/Xkrcqgc1xW/asuJEFzvLcvhqq7LmH/zn2afGAYYOErfK0mmoP3/hDupQZgP
+dJA4m28B0RSU+qcKOhjxWBEaDCZWKX5S0ErCe+9mN/KKocoyDi1KzckhEy4
qzDeOmCe6WV5NmIXKchmsH3TiytkYuOn+uDCuwwYCS97q+9LQZvvPTv04yqZ
+PveRud6PANSVkbv2XeYgsbmxa5qh5IJp68SjrceMOAl1/9Y+XEKaj916Dsl
jEx8q//Nz8XxHV4Htt11p6A3+upVrhFYT8eWXy9jsR+kM7JaMJ9TgTvtNkaR
ial6be5jHC97TtO7xIWCzguSP+2KJhOnDM5ntuB6qakH/kswp6Dvg/ky/jfx
vPw9GHL2DuYZ8vrSIQcKKkypDJyPwTx1Ahgl0ZjnydRco00U5HvdTYUeSyZU
iroHy3G8xS3zZ589KIgmveZzShye0203b82GMuDCno0aqY4UhO52hfnFk4mz
hhozJ8IZUOy/QfXfZjyPbp9V7O+SCce0DIJykwFC7tvercD4TG6Dhvs9MnEh
W3yEcwPvsZIDQekmFFR5469q4n2c53D46PoIBmRJWUdY7aagVqODF1oekAmN
v5eEr2K83sZnol6Tgm5YDtgYJJKJ4w5l92cjMc8CtaykHRQkPSCo0/iQTOiI
Te3eFYbfV+b3JM9qY7+5kh7eTiITTx8+c12K8ZxrmhR7NQoCr90y/ilk4i2H
sSwb13U/NjVNRYOCSNZRfkmpOD7u1btDV/B+UMuYubsa72Gz6Yt/0sgE3Tor
6/RVPBdHKjQp/9NNulQ/6SmZcPtMJExewnvm4XoDjaFC5BUsMX8mG/szX+LN
PM4/U5ioMmJEQdUPROjmz8iEaCC1oO48A76ee/XKDPNfsuhr+4ocMvH4NFWX
54PvZS2/DYFkCnoV927qC8aHYrRqKoIYkNq246/sdCEaM127vO459q2S1s9L
wfgeXH5ONm0l3v+2tGUDL8hEPDUi9LgfA3Y1Lj8yKkVBSTklQbIvyYTu40X1
Fy8ywF32eP6phUJEObPP0y0P3+9KadqRAQzY4KEvv20JBb8nG0mNr7BvX+U+
WofjX6SRP9UJURCX4jri9Qb7Yd9h/5ALOD6mrlR7shD9jgoW3VhAJjqdeg3e
+zLg0fs/UEKioEyJaF+VQjJhtUlOhnYO+5AfX/b4XyHKc2+q308lE4Oug9xu
rEOQjc/Z1tlCJJUQJVJEJxP7EmmlpWcY8D35k7JiM9bzdNRbNxZ+D8TGWYth
ffw27ci7IkxB9lvHsneyyYQwfam2nwcDlDg7FIrnC1HfuPQTYQ6er6Dfg6We
DCi3Vrw21lKIyG/NV//CuJOod6GjF76XnYQzb2DcPHM0uYdLJnarP/7jeJYB
sQ67pEIHCpFgb0KfWBGZSLzXL2x0ggG5ig4ZNr8KkbvIv4C9xWTCa/ptazLG
H+dc+Sn5uRAl7Vk1mIbIRH364qnWkwy4d2tScX9HIeqQ9/+rUkomFCLXeDlh
nommQg1qXwrRlZLUw+/LyIRM1KikHsYFb63fLNVQiJ626Tx4VoHvi/tr29+6
Yz9kL7TK/k8HUe0qWhWZkCKrJL46ygBzDYeTQ+WFKOycV+54DZmQ7lt+NeYY
3v9zY3GJTYUoc/MNkxvv8D1Y2u2e5YzfpZSMXTJpmKeJsBXUk4mqFq91COeP
4w22c3oK0XtrhoP0BzJxcvmStnkbBly9nqG753shOsoWsvmE8dthB/Z22zKg
/6LU8qrXhWiFhcyhpAYyoSzvPiXhxgDHl3EJnjmFKJYlOhP5kUy8WCo4mYjx
lYPGxutLChE10kIiqZFMqK/sCBI9jHUQbNOVLC5E2prd3uwmMkEj7AP2OOB3
Qnxc9sTLQvQNqpVGmnG/fogsXuSE7zua1vn7FKxP6Edjl8/4PV+Xll9jj98D
VsZXKIWF6Mh/cgZdX8jE67yLpnZ2+Ny6GT+9bOwHgZKsB1/JRGv/8nP+/4vf
OwJ2mP/GV9dSr3zDeyN+icRjawZMiqeYvk4tRL43P+2IbycTddZLjRHWod04
LnV7biH6EKq2tr+DTPx7toZddBDvW5bq0LHwQnRW5Y7GxU68r3QNry3F+ugn
K2Uw6YXoYEjVerNfZMJyc/RE+F4G2NYdfp6fV4gsWu84Lu/C79iq5d4/zLHP
3zMWn4guROPaPqd+YLwrtvrCpUMM2Pgl+8NZjDN6T5S0dpMJkyO33p6zZECr
hKvo5+RCdP5mbP1kD9ZtxTvj4/sYQLlnZ3H8XiGq+hjWrfKbTJy2Dh1txPi9
yk2z+6IKUa/bk7ELfWTic9m/J5L78f34NK91cVwhupFjubOvn0yIbWepPsQ8
mfqnWp5cL0QJFM2NkYOY58AdywSMt2y/3icaWoj2eOql7/tLJsI2L5UVxPgH
TWmmcmQhevKjrNtsiEyQ2msC1pow4FJFe9xuP6y/7ZHFfiP4Xkju6p//PwrM
PJyqr4vjufeSfhoUSQpJEsmYsXJ2kSIpCimVjIXKHErKPKUylKkSijtxca+x
2jIPiSJkCCGKiFAI73r//Tzr+Z611157Def/PN1e3xDsj/6QPj86DfXtbMtl
NW2YS21v0RyO5WKzy9/yI/5wId+V93XNQH/NiPxE4KNcrOyUb2XxF+bePK4d
aWqQJwHWf16D/2Gd/MoCczAnyI10JanD/v6+nmV/DuKfx3exEfijwUuSDQjq
laXNF7PTuXh/j8FL1jzMG/M75XUOQhySnI3eX8/FlxXOXypdgDlBlH9TmRbM
S6dOpAZezcUOMqsVW/5xobLF7vR1wEWDpIx1LXJxndWR6yuWuFDVnmz+1v0F
RJWJ8u9A61y8wfwmyXKZC7l8/fHxkWYBIR0tOxVwKRcPHh6vbV9BQuJBR7UO
aBQQdX1yL3acysVDHbIMLxIJXX/ur3gJ7C2d0ywaLXNx+KbLbkYUEuKkDn65
rwr6bmpTGOJT06/POc5DQq1KvK2fIA6nbZcsn4E/S6Mx2XG8JCQhNuH8RqmA
IPfi5kcKcL/Pt6qS+UioQbhM0wvic9Wq9/4DO8jDTQtyVcD/Y8eyNssVEB9v
i91ovpCLyTGRb26tJqFMp7XrmMCfbBdQI2nlYo3/JjI115DQgf9ID0RVIG7L
g8XBe3Oxebpj3ua1JNTemnTzKPBkCfn6kSO5WFD8j/7WdSRUabLtu6t8AbHq
YbxQ1uFcbC0RqKrAT0JPWgx7qvYUEH+/V5x0UcvFPMIBphbrSWjVivr0CAWo
Dx/O/wren4ubh0YvMzeQkOSmAy/nwZ8L2f/MKPty8UXjabRdkIRyROYFKncX
EKyItymdcN7YmgXF0o0kVL3Hn2MA9kO0l/Z/VeGdouvC4ZtI6EH5UsF+GZij
bLPiE3blYmR5feTOZhIaP10q2wTcok5VgaqUi6fqfQNKt5BQxTUjIywFde/c
+6MV6yHOfR1OkmIkVF5dxX8D7BvUM9ZoasP7feAaOQ28pkCwfUm8gFi9+Iur
TjEXcy4vM96Ik9ARR+X0Ogmot3eLn7qCzj1F+774bSR0Yurr6hXSBcQNqp5U
kVAuDnh/4GOcBAmlSC5fm95RQPw+LxnpLQX5/+jhurztJDTnxyz5vQ3618RN
uXphqAP3BTf2SZLQbaWMWaXtBcTJW1+f/wB9vrpta5WkSOg05UO2HPDZ454F
b0Vy8cSBLduYO0mIdtV55pcY5Buv69vja+Ad+ajEHdlFQgI1dQpD4H8h18T0
w3W5WMJIUkhIloScT73YlyxaQCRoxaB63lws21Xxb4McCbXI7ujt21pAiHy6
5KYH3CBYRuyYPAndFBZ5yxYpICJSTxzwXWDhW9fq+F4rkpDXyIw5HXh1Ru/3
Ob5crDfn0h+gAn4uWejQBAuI9Zan9i70sTB33d4p1b2Qt+89zFVB3/vhaubc
TxbeNSYZtlEV/MzdI9YiDPvC6u+fJHlAx7FyC78aCRUEbkxRFCggTkQtXvL4
y8IiQZudNqiT0IdhkeFa0H89VWQ3/Z2FHT1jXipokFCEfmfbVSGot+6yvzun
WbjSOsHLS5OEkm5O+v8HOmH8l/LkfgHf4Yg6tEhob69YSuiGAsIn95SB5xAL
29eKSp/fT0Lfnr1euwrsj70NZK4eZ+EnElpYUBvyefeTuRfrgNP4e8d7WHib
+saEXwQJpdvcvtnGD3ulaLauzw8Wzv222LjmEAnpeAR4Ga4uIGJYs0+vV7Pw
XMYe6kld0FfYu6oP7A8d96H6zrCwDq7OX30Y8t8qf3D3StgTK7R710B8chQ0
1r4FXk+x1F3HW0CUOh4XtnjHwsrCq8766UH+ZFZ+DF9TQBQ9yKqg1bOwirUN
l+UREpI9qB89D9+19Tnb0dnFwlvWySxZHCWhFeSVJA7o3PPgfqbTxsIPnISo
DvrwvkpjFNjAA63UXD/XsfDj24dnow3+f94+36FV0Kcu57j6fmDhtM7Sf1+O
kZBR9yN5cfAzsJKZog3+WMWK8B0/TkLvI5Tt6TyQh0eDymMqWVjqEPVbvxEJ
naxv5wsFzrXm60Iw6Ptv2Pw16yQJ3Yma3f6OXECsG+ouFCtlYaYuySzRBO7X
btL2IQXiEMJzabyWhes1VAXfn4a6Ieb+q3SZQ7zsX8RDySzslS7cLm1OQvwr
2Gm93LB3pBkac7ez8MV9EWVdwHsdXjST5jnE18jyrcngv4lO+lDAGRLa3R4W
cxG4UaPNTU0aCyu8kr0gZ0FC2/iTeyW4ID/NVs5dSWNhPmFzPAv8KNMiuwl4
teY9kzOFLHzWmDLw9SwJCVdvk578xyF+c/nszARe2/m5tOccCe1vol/9tsAh
DBvHqYaZLNynEcAZtYQ8/6GVObrIIbbUWBbbMlg42JfLc9sFEhqTLi0pA/sa
Y2WZQCYLj4/qn/O4CP7wSX9XBT9T9K4kWDxn4Xk3c41hK4jD05LDfGD/35HW
5Fug/0tFUDLSmoSGTu+H5ZJDxKtEBzelsHDzL55aU1uo/+YpLz2B35Au8E4G
nXBaRvFZexLSfVjhHjHDIQYF5vYR91g4Y49XSvRlEsqy+z248w+HWD2+RkEq
l4WtjdortjiRUNqC9reBnxxi5TKnn+HOwiSl9aHxwKcfqfl9A/2hD7qj5zzh
u3Ne1zSdIa8+7xyYAp1DnqdqKxNZWKjL6vM/4O/m1hTa/OIQMeZ+r2xTWThI
ktxadZWEAsufBl0Y5xC37xCcD2Es3M77QunRNRKyVG5lTE9yCGmduE3bAuG9
CM5sDr5OQk59nVShKQ4h2Zm+Ieg+C6d7xmnEu5CQ9ZMx9yLQ0eh4dbEplIUf
Pr3BVexKQppBshncExzi36aXRbZ3WHhi+mTMPzcSGpXhT5MCPs2OkNQFe1c1
P8YVDxL6N3rZ0X2MQ3Bvtgtj3GJhv5HRj7Oe0DePpw33AS8Tqdq14TYL/5xU
9OTcgHngk+1/Az84RJAjl064Fwu3OXr8eO5DQme1KVFWwG8G/xJ76APv+ulU
av1NElJpaE1gDHOIkFwhdM6WhSNra9ylb5OQzMo6Y53vHMI1OuF54wMWVpQs
yfx2h4R4GbKvjL9wiJKYskhFPRaW5o0wN7lLQtRfxZzcUQ4xuoLJf+kwC6+b
4n4xCvzutes9CPjqg/GZQy4s/MKO3yczAOpex7yO31cO0dM2WvzViYVvuizk
mAXCfLJ4YewV8Hy6uf4ZaxZGQptfbwwiIV+NT+srBjjEssjWqL3AW+KdosaA
s5tISTNg/3jj85brNvBePkX0fQ4moedfvU996OcQ61ssf22wYuG7q7Vf9ISQ
0LDl0fHrwJ+rflo+eQHqqm3z0cVQEir8bH0ks49DMD/8flRpycLiJGyyL5yE
XnPC3hX0cghbi47AoxYsfMFO0jIpgoT8zf+JcAEvXae77ZMZC4/dMn4qHkVC
xZUie2d6OES3wnmBX6dYuPczc/T9PYjDk7u/Wrs5hO6xKZ2dJ1l4k2b4JuZ9
Evp9t6SA1cUhdh6fFFgyhHv874pL2UMS0itofaPVySHoLePJ1kdYOOWYCu/a
OBJiJGo2LHVwCBnSh6d1EP9jx7JQ6iMSkiOVT8S1cYi71YTbORXoR1uCRTwT
SejtStx1rh3y+dXs2mPgzzA+nGycBOdS2L8lpxnqEulaRLw29Ee6sLVcMgkl
nvigl9rCIca3zGepyLHwV/ngPeIpJHS47+elNaB/NrFmvcR+Fo6Y3LNB6wn4
r2x6ef1HDjHZuvT6oSYLGzz2Sr7yFN7X6mv8Vh+gTr6O0X4OOvcXzTzZz6Du
ieze5w32Fb+fThSqsnDPy2fzu5+TULcRe691E4cYjs0cKZSFOtC13q08jYSO
s41vfgL+ZFMKY9ceFnbje/8yIoOE7s+XDb9s5BB9filigxLQR/KOGN1+SUKp
uWdfNQB/u7Y4+bM8Cy+4u+nmZ5GQ6+4VmcfqOITsZGTM3fkc7CJ9wJ2PTkKD
2eG7V0AcqjnR6v8OQf38mNZfBJx8Nq+5sJxDmBj85OvcB3kicFX/NIOEinzj
3BwrOMS8zsNa5hoWPtRbeWQCeF2FVdeeBg5xZzIs4CIPC1s+uBHHYEKfrSl2
qgXO+F5P+SQOdSmYHBmZDfPt9vhG02oO4ZM6f1UKuJmxXrZnDtxX42qZmCoO
0eYSvJS4GuK84/KSC4uE3iypjPyp4RC7TVfYxQmycFGu9HJMLvQdzYx/V8H+
js42bvmNLDwo1ZrVnEdCT90IfrFKDmGT83vz7EoW1rrzrl+WTUKPJtgcRbBf
+ekvbYSfhd0dzTvZHBISKstOEoLzrrmXvm4vmYVHQxMvWBWSkGCznPMv4GV7
M42z4bzNyEVPrxje6XVWuTqG/iW3gAR6cjDvu/dtJ0tJyOKWVUg72FvxfplY
Iwx5GBWM5oCffjYhX1bCIQRSMhbXwHdH2q6SUl6RkDdhQ8SUcoicvsNuF7/l
4JQ5s096r0lI+cNrry1lHMIlTrZDcigHq/X7y/G/AT/1eNI84bufKjLW1HCx
8EdntfFp4PUvn3V/AR1FJ50Zob85mCtqx5YRDP3ujPHJBeBxurru2wZy8AT3
vu2/y6CeuEmzO19xiD2TqxTzJnNw285R++3lMMemOwdcBj8DbkrpM8CfPVV2
wc4VcC9839/vBH7c2lV5oTMH132ovdVZCXXDWnTLx2Koh9uX1Ee/5mB1YrbR
o5qEXlY8e/uwEOphopTi57ocbLA2wUS1FubDkHdm4kUc4pw/xeIw+ON0adcX
5XoScsxXW/iVD33w/OXgkw9ycHLlbj+TdyQULf7Q4xjof38izZpbzsG1Bp3v
p4HbqyVYvcmG+EeMp2RO5+DlV3YekY0klMfZiRRyOIQ4687SYVoOPrZOzmfH
e6jn9GcZWhwOQYw43Ql+koPDxvRjuoB/fdaSyQSutK7BqbYqB1ecbepgNZFQ
RrpDk2Euh+Ad6JfurMzB85HHZ2KaSeh8WPHBcBaHqJ13G7jxMgdfsRaqCflA
QpTabb0meRxiJkf/slBeDn6Wxf31yUcS6rQ1DiXAfo3HgQmu/Bwcpenh0dwC
9dOph8INfiZIE5t6U3Kwaf5lJ/FPJLR6YatKKXCpO0G8a8F/ufys90ltJHTm
TNMVKSaH6Hy1LXxNXA5WcbvjrdEB8+edFeNRwPeGFjEk0nJwhreB3OpOEnqm
lC1/n8YhLu2vPfXDLQev/GLksrIb5qI5z7Z2Bryjnyo2rQU5+K3Z2g8lwHcv
MdLlXsI77XGxiYf4iO/56ObUQ0Ijza8L3mRyiELC6tSVazn4wdnh3zJfQOfl
pL4KnUOcn4o+8vhWDj7SNBi1qhfm0n8LvGJUmHPeJzT038/Bd4socyv6YK5u
VWffBv1fHjdznW/kYImVQkW8/SSkL7H7MR30q6a9Ih+65+AR5Y55xa8kZCvh
WTYC9p5u/3VY387Bp3o93t8cICFWWxZ3SQaHSJy6Il5nB/EJjr7/dZCE/rxM
5L7/gkMkezq628N57UPXn/H+RkJt/+ZsJtM4xMesoA0O5hA3yUxe5RHYv0bz
tJnpHOLM+d1LPF45+L/Wf/27fkB9kIpxEH/GIewFfH6yBHNwItuIuX8M8vza
/U8s0P/34l7RS4j/ncNknnbgJt6P5YcTOYSzfXhwD5w3c4zvt/VPElqnnGjS
CPzk7duX/x7IwQokHaOfwHn8OC5eqRBn4ewwpZ05uNvwS3jsOAmVZVapjD/n
EKmlZiIjJ3OwSOnTtRYT0Met1vJ7PYH+9TToy9ezkJ+OcYm7f5HQnsl/u5qS
OcRSzFNco5mDs2+/1uWbJCH6poe/+sA+5wLX7yb47mif7H98UzBPnhj4FJcC
/lhI5VYdycF2vzZZS/+G+Bs18lCTOISHvNQfFcUc3L/xz7Vz0yTkY2bWGgf6
kRP1dg/Uc3CMgDWpaIaEYi9IqmfCucweP/ihopCDr0vrM9X/kFCXYEfWnwS4
98/e/Vt35eCDpGdhX/+S0Na6uXkS8HcSey8E78jBtpKnDr6ZJ6EvV5UdYx5x
iIjjcjObN+VgtsbFle//kdDGEJ+JhniY08IU42MlIP7yrxzEl2EOrxEfzY/h
EOa9JkPq7dl4b6xKXToXGZ2dLbCtB51jAxkHlHVzsH7c08+IREbR5Hiuiiio
t7OOO/3UcvDmvuJrH4EveCaMXLkHcwvry4FzP7Pxh7aNv+3JZFS+btfY3lgO
IVz77cSTwWx8cOml4WYKGYl2eXmfAG56vU3j4+ocnFsapTACfE1DWN76+zC3
RCr/3MkLcTivkVfOTUZts/RFejSHcIyOvqAxmo1V/9pZ5/CQUeq3e0tGDyD/
N7tkjc9l4yY367w3K8no85xt/n9gT3asSNX8k43TtDJ0hnnJKCYzzFwR/Mxa
urJedSAbu++zuC33Hxm1tqoZlwCnV58urJrMxpf30wtT+MhIovmar3gkzPmv
FGX6ID5WT2ZW71lDRhc/X00bBH4mqMVy00Q2dnu7fGt6LRnlRYgMa4ZxiG/f
uLie07Oxg12XVjc/GUXZi8YfhLh1RO1pKaJAPrMC+9zWk1EAf+jFVUFQ/5/f
aXcD/5spH/xIG8iow+LRrpvAf5SYRcq/zsYZ+tGzj4BH8DBfiIfDuQzznQlO
Nk5IIrvpCZBRdapAkizw+2O2R0o+ZeOLZ8bP8guSkcizAcP0YJg3CoL12j9k
4/3byYbDwL8saexUBO61WNYcUJyNw0Trm5s3khHZOsPhagjMyd7dhszKbPz5
qeqHTiEyqvQxGfAHfyZ7hJS1y7PxiidPLyxtIqPLxd42LwLhHpdWf/zJysah
RdcjtTeTkarkqMwf4PP/ja5fKs3Gq4d73meKkNH1LNZs/l0OIbTZrtbsZTbm
v+onoryVjGbL/jwRD+AQDTdZM56FoBOlm/BLlIxe/QuZ4PXnEA7nszyv3c3G
F5SPxn4UJyN3neyIYdCxTDiydbg+G5dtsT/pvI2MGM7Hr66/CfvOu5h3nvDd
uKZ7G0gSZMTzRji3HXjlFtFMw7BsXKv3TSwV+IR3oX466GPl7eVc4dn4iOv3
aovtZKQsXfNw+DbM1e7p/O3p2bhjrXbzbkkyutKxcKUTdIwz/AYHHmfjZM9+
W74dZPRvMaNt3S0OMSb2WscuJBt/9/BO55IiI7lMznkq8GvcxX814rLxSvHL
2cI7yUg4ufW7ty+HcGrtMbcBf0rW9aselYZzSaa7XQLu/cB3QfpONq6yzoxL
3AXxnGUd6vaBveO3YHZWcDZeU+JetkGWjJ6MfZBe6Q3fNTq9K9glG1PtkBBr
Nxl5nKwIOA1cq+rL4CXwR73LJyBoDxmZDo8X13hwCOusco3E/dnYt3jVrI8C
Gf14eWrTPtA3ry0M4U7Lxh7LBw6sVSSjqj7NS8Iu4H+Ce4juo2ycYlBXlADc
dyVJ5DHw9KrhCmeTbExuitfZqURG7b3N61s9OcTCtxdBv45mY1H/FNMm4N8r
Kzu5vTjEQOj1QIFr2TgozN08VhnqiXlc12436CPj7GpZp2xMVHustlEho9WX
sCrdFfqCv3v69AnQmR5s09lLRrk6ud4y7uDn6vgjHpag4/l4SVeVjP6zeY73
gH3kl1wvq3PZ2GCrRtUFNTJqzCjdexD8fHPj1rAQ+HOQ74BnrDoZ3b7lTKkG
3sd9f4WCaTYed1Z480uDjLTilm2vXOMQ2kf0Ezna2XgTWqN+VYuMDKcis34B
b5MLLWw9Ce/uFfPZ1v1k9GvaMqTbCeJ/Wk3cTgTyXGJFwc8DZHR1e7RgDdhH
j9xytLTNxlotZfEB2mREOpbGTbnMIYa+uOwOhO9eu7JHW4Agoym5pLo3wE/t
rfPT3A750zueRAdufmDqQaAzvDv19126wG0qfcsuIDLiDKQd+gLfzRhzfely
IBv/qNR/K3OQjOTjBAS6QCe6OvGirXI2jrn7sIbrEBlt6jgWRrrCISy+/wvx
25aNLy0oXp4Azr9cmUMFjnW25ijIQ52Uvfbtnw4ZNZzREYty4BD+ay/Gu0tm
Y9vM8t3bD5PRmF5Lkx1w6aLtJ5zgvC5ftSoc9MjIKDnCZ9GeQ9xqPKq/APoP
mWPqrUfIaNrFZmS7Hcy92/J1XfjgvCoHlGz0yWh4/NuLQOCbtm/9qwHn+jW6
54P0Mcirm7d0Fi9BvxgYhl2eiTc7mbP4jpPRc5HDGe6g78oYEgyH8/Yl2Bkl
A08lqJ7e56Gujqc3UuG8L8WtdkkYQd8pHz72DbgHv1uP6gQTP5o99ZQK3Khe
oZrPBvz8+TeocZCJg1l3aYYnoN9tzQowBe65kPDn1apsbCpKEvjvJBm9yxd1
ir3IIWZJsa78vFA/hd8NfAT+cVfLl+ULHCLs/u6VX8aYuNT0RBfdmIxyPo69
uW0F72XUeiDiLxOvXZDflGFCRtudddTSwd5/xjWNDVyuaNyNfYqM9vH3H88E
P/lDHnzfN8TEbVwL17+cJqPakU/f1cB+3MPrDs8UExfY/SxTMCOjg7drFX+f
4xDFeaEnlXuY2Hcp3/GZOdRPmsT0RUt47++URMvBnysZe58TFmQU0n9vRZIF
h2Dh8/xir5n4yxf6ANc5MkKv43xnQEc/POue6Yps/ExWUCIRePndhMZ2U9j7
yuQDA38ysYzElP4eSzLSSF2i95lxiP8c38ekvWHiVHubkw3AfZ/IBe09C3WV
Lfc+pIqJCzsMJoPOk5GzdlvZ3Bnw82aRKLubicuuK1afvgB9R0QOGYOO1Ca9
wzcbwE+e6l6li2R0vln04wzwRBmnTJ0yJp7bV1khbQV1YKtLKsUc+ktyyL+j
75lYrTttYv8lMsoyUFnTd5pDvEAaSmqvmDin1f3QFWsy4qp0tDcC/9cwRL80
wnlPT143KbEhIyHldfsXTnGIu8Gf9RWLmLhJaG+dvB3Ep1jz6Tbg199KKu7O
Y2Ku4Cc27+zJKKPo0UkZEw7R+86ZdoLJxIJP71xJuAzfPXI2buIk1P81J6jq
6Ux8MC9E67Ej9MElvRezJ+C7qHCNSxYTfw53VGpxJqM9pLrkwOMcQm7LXBzv
NSY+my4qrnudjPIfTeuIgs7abdnj9yqYeKtDzq33wBUs3x5JPApzTtrZnafB
zyf7z6mZuJDRg4MLGmv1OUSw88zzp7eZ2In/uXsncEenS4knQT9zRClw9gYT
W9HD8m66wvviNB06Btw0Kf77tcdMbL49QVTVjYxWjcSPrDXgEG8Hlb23xTLx
4U2rDeaB//0j9KIQ9Cltn6b232LixS7rvGZ3MtJHVJl2sN8Q02b1OZSJ088t
/1flAfW2s9RlJdhH5o16kYMhn7Uc7zd7ktF9o+1/jcH/ZYbM0E5PJm7Unoqb
9SKjjf7RU/HArQrd7h+/w8QOtKsnDnmTEXuMM31XD+ZzpefH5Z2Y+GqkkgzD
h4yWBhK/zgIPXWsj+saPiXfKzLnp3SQjy8SXLC5dqD/PN0la6DExPYUttcKP
jPrDTHQXwH7iyaGT3HFM/HjnSEk08LYNado7EIfoHozPyAwE/08q9G26TUay
spWvl4Brq+W2SBsxscJ8FV8WcD9T7gedoO9UNZLy+wQT77qUl2PiD/VQqFxs
K/DsRNGXKc5MPEgcExK8Q0YG5g8eCh/kEM/eVz0avcjEAqHSQv3AG0OEgq4A
/376rMsN0Nf0/bRcfhfmgR11W/kOcYg6zV1iP88z8fI26ZSKAHi/cn2TXwmY
J9Pi7rkZg59c7FWdgWS02T/H+SfwMZ3LpiYGTPyt7+bIumAysojKvAIDIPGn
KMjJ+CQTiyYOn3IMIaMbD3bTig9AX3tR05+wj4kZe0+yh0LJqFnWSX6jNoc4
kV34YdyEiYV1zhFx4dCvRbYY5GhxiOcn7SviVzKx9qrmnIuRMC+xW48ogf6v
OfHAFkcm3rCqa7wPuJwQd36eGod4oOeuUW3PxL+PeVlaREFdrR3vTgJ+PuLz
7DppJv7vw0D8R+ALuWdLzPdxiKDrs2WDgqDjcYOwvkdGSjJRJ07u5xBKCesW
t6vBe9y0bea/aKiTCu3tvJoQ5zcVMR4HmPjvX3YGBr6gXrvcpA584mdxoiQT
S+92aLtzn4y6fQ8c3Qf2rEcGaxd2MnGo38s8ywdk1Je/zkxJg0OICU/5OMhD
/NkyXScfktGWqmzKG/CzbrUP3+AWJi6/Onr6bAwZ8TWPXD8J+nlcjwoaJJg4
EyUOBceSkaaZKb1BlUMsNmp8LhZhYpLGz9GmONgXdN2m1YH3r1tzIHUjE1ct
z2gTj8joT0fSpbN7IT+//D6et56Jb57lUut4TEbWkrNlhAqHKN9Zv3RgFRN/
zLrX9DQR4hmVvGyhDP0iWGt4JR8Ts8tcniQnk9E35t0tropwXw/bItd9Y+AJ
/Ss1DU/IaCDEHnsrQR+89bW3Fvy0PoHP2T6FemUjZC8lxyFs6rRij4F+LKfn
7zzwQrWzS4/2cIi9efftefsZuPLXmWNPn0FfXtMRehD0xTgjWXsmGTjgm937
86lkFLzp/j5DeQ7hd2Ncc3aZgcc/xt1VfA79aMF75hLoN164alc3AvYfWanr
0yBPBHtUvUD/tdjOUN4foP/kbvi6dDISG+cfugn2p6VnHRZ+MbDIBz8fmQx4
d00a5b9lYZ4Jd71d28XAWlXJUpYv/r93iFU+2g177odAoVbQid/aZlr4kowK
3F/fV5DhEI+Lzj+528DAK0y3WShkkdEhqwxtW9C5siFYWmWegdXsp4/2UaE+
vNkbJSvFIbjO6t+4k8XAX1pGpI/SoB/1vck/DfqcsdtWGvkMPFse7NEIXOqa
gygFdIK/qyaeGmJgp8Yifwc6GaVvyXW7BTpJPz7r3v/KwC3b9p7gYZDRU+6l
5F3Ap0Isj9SWMbDOwE1WDnCt2pNsXWnwU0qJJVXFwMnR0U/cmJCfKnw5xE4O
MegfHcrdwsCBVfpVx7Kh7/tK8Nrt4BDrRp2vtb9h4Ii5M7qqOfDe7eWLlEF/
/vroqzTQf7vlmNV+FtTPAFHrnWCvubdEkrsS4ib4VNsql4ysxFX1+rbDXvDf
3TXpeQx8O8KKJzWPjCItTkTtkuQQR7fNGA9gBuZoqWivYkN/8fCb6t4G++my
QeHPFAZO6a468ZAD88DlggED0Cniuf2dCfciyFBNPlNIRnVlr07jLRyilm6t
ZurBwFG56WL5wImiRZU00M/PWr4o4cvAJz4WKu4pIiPJNLr1W9DZLpLt11fE
wK+MRrTeAO99fPfqUVEO0SV15s/1t8BnzpaYFJPRUNi5jcJbof9u73q7JZGB
/x7U2PMTuED3N8tyMQ7hfifiRXgsAxdKTQg9KyGjnaYR0o+By57hu3aSysC1
m/csXS4lox7lmhtyoHP4vn/PHOh8fiozjl7B3qr0seYF8KDbHWICDxk4z6Lo
vtJrmFseP5EMBT77aLkq4wkDV0Xs9EFvYH5Tl9mdLAJ9PJYqbRbBwDMdpWX2
GPb3recaxCEOezh+aiUxDOy1/4lYfhncl2f4qMlmDhFBGQuK9mdgLjEnWfFy
MpoMtQp7DNyiw+b8tkcM/OznqPWrCtjHH4T9tROCOvZHihlzjIFHl8oqPatg
D51mylXCd+uCZ3pSWQz8QzA/ewo46dTwlksbYN/hx3kpNAY+HvZS1L6ajBTj
34t6AieTRDxUrzBwzI3rezuBJ71voatu4hBz2w5pOFowsBh81baGjOK0ukfn
gYvlsMPibjGwRI6Lz8paqEsqf65mCcL875xh/fAuA5t0nGljA5eZFAxkCMDe
bbSid9megXc96nO9VkdGLpNDJhIbOcQWucjQ81ehLvWr+ByqJyPb/iXJEbC/
OTLgbu/OwOfQvvV7GsjIR97123Pw88LiAT0VK9BvqdeUewd79PHio4fBXnG7
bqwc+P/DQXzSsJGMxK2xWvx66CPTWz+dvMDAr+cS0sPfQ79wtZU5B5zXLPK8
5kUG1rtIWz3WBP1CZpwsyA/zs2Hq6+PGDBy673eo+wcyqnD10WhbxyEkHWfj
bC8xsM1whumeFjgvry+/wBrYr/1UXwuIMvDVfVbpqz5BHW64xXwHOkfuT4v0
+jGw6D/kEAI8ynXTjiZeDlFfHTgS7MnAGjHniHngJW8nhNevgvnQpK5gQZWB
l0ZMWdfbyOhmTeGr56B/NMhyx0pZBm6L27a0ALzD8+NvobWgI2lf2mvIwAWG
voXP2kHnzKxE83/wfq8v/JQwYuDvN/YnH+8go5F7mn3iwD+3Llk77YV3/aG9
nPczGRWFu27w5+MQIuF8mqUH4B59HrR8Ac5yOaLHB/aWz9cxMxEDJ45U+dV3
wnsUFT9IAT/55cW9hOShbqtGpTZ0kdHPsfz4x8A3awT+uaDJwPbtfO/Gu8mo
/lTaxpKVHII5pu9Fl2HgxUauL3JfyMjLPndvL3CjxaiV5cpQV89fPh7bC/tv
qKDvb24OMa2tOeggyMDFXBciRPqBX1Lj/OPhEMeEe97ugnNJae4X6/1KRqe1
u9f+XQF9f+Fxo+IEHZ+Kr7DeOwB9uX25eQ3EedO3JPx+ko59/kkvvwDeWSGf
fgO+S9q+8fcTiKcP8XPDnkEyWhPsvCWJxCF2GHRbLUL8+fjNg4sG/z/PiF4n
uDjEp78Rdw9uYOBjWlHO+kOQD3HWMaFkuBfZq3tdV4GfEmniE8DTZC8ZZgI/
1LBlQB/y4dCNkFf0b2SkzJZ38AUdxfs+orWgc0CJbes1DPGH4ScZ+GZTRZ3M
ldCnmMKDZiNQxwpToguA53r+M5MVYOBVptQtp7+TUWBa0Ns/y2xipaeDhj+F
gcfuHZhy+EFGsX8tpOUgDplNk+uyeBi4dH1j+pNRMpJocN41u8QmXiQqbZNa
omOzS6Gtv8fIqMlS4PoN4EpWTrHZKxjYheJR5DZORoejwrYs/GMTN4PZ8kY/
6Hh7YJOz8C/o+2IZrfqLbCLDe1FrYCMDS//H4F2YhLn6ZO3z43/ZxLVF2z6+
GjpemxorfXqKjHZ0h1wQBP3pG0/e/aynYwv55x3VwEs9A1XsQCdGpuWI8Twd
154pW3f8N8whElN7js2xCZVSHs1R8CdZ3iC1A3j0PfOWk6A/FC4gyPeVjje5
s2OcpuF+I1YMK8+zie1t6gN8PXTssXdKSWAG6uTlW/u5gcexE4P2/aTjhX5j
t2bgctm9dEnQsduYkhzYT8cjiPd8yiwZvTYz3H4OeGOW3OeRz3Q85qIl5f8H
5hPi1Sp54GGl/jcX4btLERS231/I5wUNnDrLJrI3/mgjtdKxUpCqf+wc1E83
ak4H8Lpbx5IkQMd4tHuyYZ6Mjrg29jjMsAmOV735MMTh5PfT0ZL/yIijGuB3
Bvg2xtL9hQ46zsjUMshchDmcrvXwzxSbKNFqTrB/Qcer+CzyDZYhP30rCwLB
Xu2XGVMZzuW51u1iOfCBlctfn0ywiQc1+Yu6A3QczYgsUV1BQRmHRBwWgRPK
uo2VeXQsFWHdxwQus3YkyfA3m2D9omlNMOlYrKtSdR8XBYkx4s4oAz9Ard7p
X0vHo31ophu4o/jehme/2MR9PlELuUo6tpF56RhOoqC1D3fUWAFv8exNUs2l
Y5596dcOkymI54Qut8ok3CPb8WpcKR13392zcwuFgiQSU81zwR/Tpzt23i6i
40NBaDs3NwXtKqu/LQXcpkH7Jo0O57qx9w0PDwWd5d0/pgO857fNWkUOHfsP
933etZKCPC4Lccf8ZBNs85xjw2l0HDTrVGjHS0ErF66qjwA/KEka5GbTcdOd
Is67VRSkeLwm1mGUTVhSVBgrAkBHZtznBB8F9aMI+hjY17ooCctU0fGrbF3v
SuD1dXQt5xE20ZkZy7fvFR0vG3duUFtNQbyH6gWKge+1Ew5rj6bjJPUuFgO4
0DePTzWgrxW0VZYeTsfK5x8mqa+hoB2fQuQLgPPwRwRZgp8GR/qs2oDnpE/K
GX2H+MdtfPjpKcSn01TkzloKSjrQs5UE/HEG7fLHKLgv2oyY5joK8jXUGygH
rusdqDcVT8dpa08J8PFTkF68ZvwF8Ceyv0IjJpaO4whf/UngN/QbHtcOswmj
sT1BAqF0vLK6Pn18PQXlvbVKHwCOEz+eeHufjgNcNtTxCVBQcGOt89FvbGK9
vlnZKn86br2v/kxHkIJKjW4FBwLX2Wd37ME9eEdK0qoZGynIz/97+4FBNjEc
mFjceYmO33rdj5PYBPfIuDbwf52SQC/0Hc51p1/HLQl4QpeSqU4/mzBOXX9m
TQwdm8e39fMLU9Dx3pG4duCKUp2lvxwgb/Ui90UD9y40800B/RtaRez9V+i4
+Z4Ur8RmCoqtdqnhAX7UOsvmFfhZEZVdXw288gHPi2rQuRQTTa7zpOMQg0sh
N0QgDik6myeBt05/NZ4C/Td/Hcy1tlDQTVqiu/lXNpGzT1N/2R3e766+d0Jb
QafO9lp+H5vQHODdtc+RjgU79pfwiFLQCQOz6AzgNuc7112xhfuN0Y9cL0aB
ubG0TBm41wkXv13gJ9WEFr1PHM6rHxHU+YVNeBg45NDP0PHZouCwgG0UZFR6
MYzcCzq2R7znQD9ix7PIaQkKGv96UulKN5so7FB8yVCg43uUc9V3JSnoacgO
v/tgT+PRvhsAeXtaf+vYDPCyxMFtUx1swkl3uH/Rm45bcHiozQ4Kyq2zsDL8
DHVpbVjE14N0/GjqsHwr8HSRgOT1PWyiQqGGEaVFx//2lC9ZSMF9oQ+0PcAp
Ep4KIhZ0zLn0Im4a+M2z+9HFTjZRLNwz2GVGx/XC25oTdoJ9BTtkGfQfFDUm
8IC+6EuHzwbSFFReca9zdRebkExWyqMdg3svLuIX2kVBqvd9aHFgr+bB47Qa
uLHZ6a5p4OmDGrqD4P9AoN504z7Q59kh810G6kbtRLYW2GsNKh6d1aPjVIcB
jUVZCkr+XnrvZjvUYa1N8VtV6XjoXqGJrBwFvdR07GwBvuq1lGqILh378RNG
/nvAz0ZLdtQnNnHmZNjRImE6bpRNzZmQpyDjME3zJ2Bv96a8XdWUjvN/Uqi2
CpBvod+82R/hPUrlWdjo03Gey8LBduDR/+1Yo9bCJq7zhjc1iNOxjGaJ8UlF
ClLwPso7BvrWpi7yk8BrXuYu9/yfP6/74wq8i7pb7rwaHbfxndW/rURBj8dW
b9YGnfe7fBoa9kBeqZQdl1GmoGvrdo8aAz/qwb/ZBXSkZH+6DAEnZRVuqAZu
uO3w/l5ZOo7twR4lKhRUOGNhpAF+YmH8u3A7HTvNiCWk7aWg26XLWfzAPwXx
F8duoeOr/eVqGaoU1L3AMi/7wCaCzF8qPZCA/jWE/CrVKEgtXODtuWY2ceqt
iZw3Px1fe37HbIUGBcXTFQ4nANfV3axyT5KO+T5yy9trUpBky2jfciPUeR5+
PfcRGmadpw4OaVGQeainlSTon9XYlj+gSceFAWcOme2DehIu/7qgnk0snHkt
zFSiY+64INsy4F6t9a/mgC/tVq/+uEDDrdpqOnv2U5DFt6d/nr6H/i7g3iH/
m4bb9c3NsoEL1SyKtgMvudC5dRD8vF5uUKpzgIKKEqLbd7yD+Ly8GnAceL12
4duvwBcsjNJoDWzCe/EKJXuehkUa99ZGa1NQg5/lNQ7YM5/xBXSQoS+82/HP
hKCgiiCtVmuwj9RuWPGeAnl7uSdJFoF+zquOZPCzcTJJ8MIMDe+78DNd6CAF
/ZUtllsAnvmZfSVvmYZvtDpelDgEdcCE0mpexyYEtUd81X7R8HjLRJmuDvTT
DZOh4cD/aB/4HAPn5etpy7mnS0HFu1y7n9awidU/3wQEfKbhdNEPRr8PQ3wu
7fn3t5ZNVCXd+ia3mo4/H5jMcNGjID5jlR/NlWyifVFt3eAcDQfydJn9BM5a
mkspr2IToXMGO46007Dt/FUBjyMUtORqNNcH+naPU4c3fKXhMyZRB9cfpaDE
BzSXh9XwXe0DeaPgJydIfQ8GHnn1xulh0H9sfubSlV4a1hkTU/LRp6BbJK7p
R6BfdLpl149uGibJokp9A+DBNRRh4LtFIl7QhmiYe+vGCOVjcO+1MkasCjYx
Nb91RrmVhnlXnPNUMKSgRfeAvztB309I/ehCDw0/3hH00/A4BQ0dmdhzp5xN
OHAVXwpqoGEfzbQrQUYU5Dy/kdYBPEha83V4Pw2vP059N3QC8rN/tmtDGfRx
rwa5tqc0bHFJ0/aCMQV9Kbwa/Ra+W5PL2Do8S8N6qFipFniJ1vyxiVfwTlfY
N+hM0/B0z/K8rAkFaeVNO78HjlTneC++ouFneS8vRQMfUhF0fgz6T3vf+CfR
adillPSDfIqCqvuUxV3fgj+v7rz4UEvD6tdiuKKBY7ZrascbNsFVqG/zsJmG
TXpvK2w/TUFmCpqRDa/hu/anWw+XgP9rSYFlwJ/wMxZ/gH2X52RFAnyXfzn4
uocpBX18ZJgpA/zhC/doqUoa/pt4Lmq/GdS3isNGM+Bnp3+layKbhrmYAaJC
5hT0IY18wRb0jwRszFctpuFzDBVTvjPQp5burToE9k8OK/Gt5ICfqTr/NltQ
UL7TgYScUjaR9oXCL5VDwwEfR+P1zkL+z+XI7QD+aHFZkgr8oluQ9qNzFOSW
tK2KXMImKrc9N8t8Dvf194DrqvMUNNHWwN1WzCZOthLPtItoeHFWZYB5AeqV
P+vIxwJ4p3zKB4cC4V5q5LcLXIT3aN0aZgw6h3oTz049oOHdQc3fooE7kasm
ZovYhNjKQ3vlWDR8KvvGThErmDf4HjD3gc6V8nPdDRk0PJGGHtKBi4w7sB8D
F34/a/cVdKZM53MNLlGQaEPncGghvPfvH7peJYM/detlV1hTkKvEp087wf7S
n1zxBymQt2ezK6qBSxCBfW4cNsF34En/1Xs0/NXCL+OZDQXFzFq8/ww8fcnL
yvIxvOuDHl5xtlC3DTOGTNlsYsflhhMOkTQsZXat8pkdBZ25W//CHHiQgrKY
wH0aTmpJ122wpyAq2eD6lnw24bwpOMrwDg27LcUGC16moBZnOycx4LXD/93z
iYN72RrYE3aFgj6rvSC7s6Dv+DU1ztjScLN4t+MscDEjy4dRYL/M2mAe4Qnn
Qht/+zpCH3QMxT9y2cTX/IOiS/Dds09ETNY6URC9O00wOIdNaLwXKSu5TcO3
T1FSsoDvf+8Xqgf6feHnyiddaNgoNOXVKWcKWv+wya0YeDLj0OV0sP+qYvp6
41XIf6Q8IAI6ybIjEl+8aLjl2OCOEeCrD7cELGazicsnWyp4rtFwcdjvzuZr
MJfOrGb3AzcxVv524gYNC++61/npOvT3t5sULjDZRG7pWZEKOJeqp4vAlAsF
/cf37XMDcB/jC1R/sC+bEdPa60ZB54fcuB3obMLg2sG7xodpOHSlYdg9dwoS
DKFtHwP7kCtuTGYYDeszp+pngc8drNIpyIJ5o3PNyXGIc9Nu3uOWHjB3rVwe
mwSuv4n/7J9TNDy/2FJUBTyp7df+LtBXjOXmLTpOw4ebMnwPelJQh0b+yu/A
c0VvZTrb03CM6+WAJuCuK9m76FQ20X1w7loS+G+2s+mIgxfsQRfxrxPAb3HN
nE01oeHskZfaq29Q0LbIzlRBGptYI5obMXuWhl+TnV/WAL8g4Xq9D/x5O9Kw
zhF4JGHoFe8NeaitqX8QuFjqodZ88KdnXMDrhg8FIRV3XTfgN4wD5z3NaHhy
1dqdXr4URPzLM1t+ySZ2fiU/7zpCw8m5R4qjbsL8zOM0KJ0J/Utmg14anHck
IEy15hbUmZBb7oYvYA/VlTfMU6Rh357tRVtvg85Yzd9C0Jk/yy0uYAP247Hf
7gHXsgyQLk1jE+H9T41+nIZ7FLxttARc/WNvlE067KfyGU8ElWl4u96H117+
FCRM2SIQAPrVviInytVpWLc5TYx8h4LaEwd8X2awCe2BMes9+jSstT35xzPg
Yt0adkOgLxN0TBDth/Oq/+d95C70tSNSzfqgv1xt/dRpLw1X6h6o4gqA/e5n
5s6DwEMctRZkCRr+2Vus2QLcU6nhZ9NzNkHG0515SjTcPSpRVhBIQVecs/6u
Bn0h9UX+bBUappz37uAEUZBO8qXsTWAf/Hd91GEFGg6KHmI1BcO8NNDffTeV
TRxWyGmWkIM6bFj4mzeUgo4KBq8tfQbxnI95QJam4VdalDbbMAraG3HwyL+n
bGK0JVFbWoqGH7a+uDsSTkFRARPn+p+wCYuXk/dJm2k4vNzS5VEkBQnkJepY
Af+1fklaUJ6GmRvOx9+8R0Ep59JdTZLYxIkeZu6zv1T8Z6trVBfw+aEL5p/A
voIapdTPTcP+BtKBxtEUNLOnqzMghU28ijjVRd5Jw7Jroq61Af/T7rOzIRH2
8eIO4Q4RuMeTzEGr+xR0WempzE7QT932we02Dw0bXIo69Bd4XarjabFkNuE4
sRwcup6GKxJWy754AH2h9kxrDeg8lN2xcWwDDR9dQbe3fgjzv98BPkHgp/tj
eWPIMD88aWpVjIH6U3vySyBw2vKJwbI1NOy9qC4oEktBn24Vb1mdAPOe1Bsf
YxINa4u0MoXjKCiCdGvjGuCSZnEh4XCuVQuPOlXjYU/pui3x4xHMCQXtA2YQ
h/V97GfXH0F/7+v51wn8q2luS84qmAeuK3V+eAx766ahqdtxkLesYr7ieiqm
HXCsPJ4Ic5pqy0T5Yzax/ZdDUZoE5Ane/j4XuKmTf/Phh2zC1XwpdVyUho+h
6Ma1SRRUo6SuewB4cvN1CfdvVLzRLueSM3CN8j9b+0Efix29c6udis01xG53
AQ8zUM96FA/9l+bYKjNDxX2nMxbPJ1PQN7fSrPWxbMLzDyPNcYGKjznHPvwO
3Dj4DVM+hk3kS/GkKQ5R8R1KQMftFAr6MeXbexTsP95Ri9X4TsX9m7qGdj2B
uYu/4Kkn2Oc9l5H/NUHFjyJpj4aA898OuWkNfqp9nunR7qNiZvT5t3lPYT48
RPfoAB5WfOpKGvi/2TDxetIzCtrdyMzKegBzi+xGzztgHzDvcD0xlYKeje75
fBQ4pxwlDPZQ8dre5ljOcwrSl0yJfXifTZTlxOwu+UzFFtqHvSfTQD/U8kN3
NJu4S5bafBDisOe8f6JxBgW9kJkTHbvHJhpa2lI3NlGx/5uD0p9fUJBsdOed
Q8A3C3sPl3yi4vbdlvQHmRR0X7UuxD6STZB+m0bZPadiCceLB12pUK8SElfE
gL2IckxAzC8qrlzpHNEGvMpNQIcRCnuxxXhJ9QgVHx76XqlKg3nyWFX8KPDd
q7bGM9lUXPE6Te0x8OF5q/ojoK/FoydwlUHF105s4OGjw331ev24/f/vqp8a
dKmj4qzDuUceAi+xepmyMhz6yzE1OUngr0zurNrGoKCf5xqzEsPYRPNeuUxr
0G+93XimBPjgjpW5MWAfVLQP+72mYpZZRqAjk4Lk56uvW4G9s/4T66o3VMz7
c/cmuWyYA9e5/f2//+r1DeHCLCqecP4xtAycGR/6fRXYuzr69F0roeKVA2vt
JnIoqE+olxMdwib+kxVe/EGn4nuJh35MsyjIsnT9nTLgm3SnrHcWUnHZSdd9
W/MoaIN68BXeYKgb7m854o+pOFVYfu/5fHjXc6fCdMG+4HSJ6eUaKhZv4P/Q
CLxk+DcKDYB68uZd88ECKsZuu94cYFOQotdCklUgm/iZy955O56Kf7j0phUA
f+Uh1mkA+rLc/a2Nz6g4UfTHGx0OBTXPKuptC2IThbzSz/ZkU7HRJr6fvcD/
8viUpoK+1vUHLz49oWKTM4UjIQXwLrJDxAjQ907bPh6eTMXj6frbDxXC/Hye
HPgB7P0aHnQpZVDxkVPuUgJFMF8pBuyKvgt+RmR3jMVScfTHD0qzwA0NuBLn
gcu2WxubgT7p0y3f2WIKqjU8MBV4h01Y1XCtjYiiYo/nl+TWlsIc2/XpfBPw
8btdmX9Sqbh3etDi2CvwP7xzvc1t2Bdkaq6Z28I9DiSXPXlNQdkhF4X+/93a
R2fDg+DerSJDTvwD3rY6yY12k02w09/1XMyjYtvZ22tN38B+d9x2bzhw/Y3H
tjL8qThiaDkxG7jvjzipetA/pSKZTLhA3q5VlRPGFKSdWp8W5g97dHlkf1UE
FdcGdizGAu9Q2/H3mB+b8P/WEyobQ8V/i7+v2lxGQfVmkvvO32ITTk2+3etu
U3HhnzXGmcCd5QrDjMF+SOipAukOFX/nLmw8+hbua3FGnQn2OivKn0qGUrFA
5EWvf8DvxHIPPwE/lz4G70A+VKxo+GcYl0M+tC3c+Qt8e/7S+FE/Kn4cFsuV
UkFBNh2eO1b8/1z2+Y9W+1LxgyKVrfcrgY9+qPHyhXzW4n9r5UHFCXOesylV
sLfS44zJwJ+/mt3c5Qnx0Sy8VV9NQWtEoi/+8Yb3+74h7bkDFesLZcVuqqWg
THfC9Dtwke+/LbjvUrFg15mqh3UUlGU5cPWPJ9Tbp/f5Cgyp2Djy2/wQcPk3
/smnfeA9ercK+ZpScc1vzpvj9RQ0Jn6dzx50rl6fmwiD775a9aOyAvg+yQ0l
70GnKaDWehjin+ojtp1ogHvJ79j8BvjLA0tXLp6j4nclu25UAleMP2TwwYtN
PPM/O9NiBXmbREu0fEdB4lFT/bNgr6cw93gY/B/gTxqlNEK/e1LeMOUB/T0x
WdbfAu5di8umFLjvp25NK7C3fJQnn3ueipMSDjeFvYe5q9LkrSvYO/8xqb1g
ScWGh6NvOjVRUOXbb8st7mzC/uBkQvwpKr7udKHQrpmC7PRW388ErvAwjncC
9A8xvfRuf6Cga4NbZc3d2ITAOfeqFYehXxxZcMj9SEGz2/S4W4GrDB//VOJE
xdz3qj3Xt8JcqvubtvY6zPneA6ctdlGxe7Pm1DngD/O8NX1Av2+9xjsDeSr2
tiw5XArcY9sOo0rQ+Ut8ePvCnIrtkh/zy36COYTU9eEh6IgEtH/bexbeI/XO
Ugpwzs7Rb7zAudclv91CQD0ZY1ULtUH//S/7V7ALvCOSrOldbSq2r8iUSQP+
AM17SwB3usD3VwHu90r7wFPtdpiTL0w75l+D/OzMemH3f52Gu7zDwEs+lhf/
3/8m9Ylxu/2QJ17HrNM7KEh1nWI8E+xt73Jt99Wh4tfSKX2en2H+PxmnFH6V
TQwq9KsYqFKx39qLnHOdsEcb7ya9A27oeSjMGfy5/Iu04WIXBR3qTXhl6Qzv
+rAO00QW6snqeH3fbgriVeLw9gAvvFp65J4+FackhRq+6YH6f/wTd8EV2Ae5
YroD11OxMjf569ovEP/I2BEj0N+y33+boAgVm1roqrsDT7xmzboMOo7qZrlJ
4H/h9XX9Q8BP3HT9kg06/3RY3tKa8I5k883P90K/ruM4RwEPSS+WF9wO+bxl
bLQH+IWySI9SRzYRp29/qWInFceeaxxz6aOgl4F1NtNgX/HUmHlDgYqVTqf/
E+j//3/XDVydl9nEgddt/1q2QX8MCTldCdw0hd1oBPbC+THCS5JUnBN19EPE
VwriMTJn+4B9MO873fQdVJy8K/20/QDs9dcOCJY5wJ7LO6CxvJmKeRoGZ8wH
YU6uf/emBPjcVg3bOPDzjbBXlsMQvNOu9hpDezbhPk49Wf0fFdeRaoQefIN5
PjH6Ggns97/e8s1FHbjmfvrQMNQ3pXcdQ9ZsopLHdKR4LAuvD2cqyI3A/DC/
hlML9pIBI/0HprIwJshGYcDJbs8MxYG/X+VzTBDOtf60iPk08KFlrJ5lwyay
vkm41IL/LtI/Ptl8p6AArV/hi6CPWlaE6qyk4iWTPwKfgZsFvLyVYcsmAg+b
rV/HDf062TLh4g8KuhR0yMsK+NCFxsUWQagDh6WO/QH++OKLllbQed4bXmPH
S8Vhv0J2QSVAXasO/pSD7x6dd3j7kgz1gefo8okxmB90Jr5OgP0aTv/z2NVU
XF+58HXLTwpqPe9VnneJTXyxfHnx62IWvmnWszwH/HPxnYNksN8XdHHLJR4q
PujR92Z6nIJGl99UZ1mxiQ3c4ucbp7Pw4TTNPzy/KGjrqVGCBDp+Nq8yN66l
4u6aKHdikoL+qVdXm1yAelvnvdjak4UdGZytccAJJ76/5mD/x1C7gzSShY+n
n81ZAJ7HgxZPg36tOVvUDuIQlp79ymUK9ru+UJG582xCs0TqPmUpC9sEmO8e
BS7aNE8XBv1rMTJu+EcWrpXutXX5TUEHqj2eLwFnFAT8uA/3tSKz+zjvNOzv
Amcrl0BHsMW1NXw2C7+4/eNqDvCQc5/SVIFvvp9udAf86ch317GbgbphGM6f
BLzt/WhJxEQWfhnw7rTyLOzF+bRxP0vYO1z9FV58z8KGji0WAn9gLqWVlysD
vyKr9TD0G+gHXIpc8xfyKjTOK/0c2CtedTAbysJ6AQ2lknPQdw6WVHafZRNH
Ok9pGX3JwskOXxbM5yko9KNfvg3w15K/LlsNZmELe1Pl3AWYVweW7H+cgft6
QeWfxVnYJ9X/puwi1HmNsDF1sL8wseVD4kwW7t1f9TsEuOiLmedGZmwi6dHn
6e6fWfhJ3RdGP3B/3+oV9/7PN1Ur0eqy8B1LYcrBJchnpRptNujXXrabeVGd
hXO5V8qxgPcLn114APzEj+c5TzvBfqoqVX4Z3mmy6LpW0EE24QmTbVl40CSS
twD4P89afipwvcHv3GtA/7+LYRsMVnAjC6mf9TvM2US8jIqTwYcsPJTxuGgS
uM1WVtgGsF+oddCOfp+FE443XaZycaPdsisMck3ZREb4inq3qiwsIpWw7E7i
Rv8ETxzLAf5sYv3WgndZ+GL0mQRzMjeiJrT853/6//umuG73G4jnJFfxSQo3
itYx0qEBl/JV/MgBe8//VWDf8VS9cRzAC+ciVHZklhmZSSTnJJllj4qMhiQK
kRGiUkJKZFYy7jnXaHCvrOpRKRFRSJQio+yRUlm/7+/f9+v7+vje53nOM5D8
Pj4YRnQvTwl/sWPhGSc7HPfSGchbhP4mi4YR1Rc2uaZBvZqTYZDRJwaqHqkb
+QVed++k3D0bODcNl08ttME4m5hss+bEiInNxfoD4LmbSnhZDxjoW3XxSAl4
jZ7/NR57Fh52rCaet4SBCh35FcS5MOJZhVXLLPzdgjL5BoFaBuqo2JOeBt48
POyvb8vCLxMTr8WfMJCx1rnB9dwYcWSv0gwHeDTrse/f+wwUbkUE3QNHWVt/
xoLz1P5kvn7EQHpur2zsVmHExRFruyjoZ0OryKVWFgP9sWeT5eTBiHwOTk8B
cOXK4CKTYgaSjIy2fwu+/uhNHXHwznVjxpllDNQ48dzgPi9GaLwaGB2zYuHF
MQmHrGF8+igTt3w+jKAkhsT5reHctw/5PlIK+ZaRlpWrMYK5xqHafS+ca7F9
zL9XGeiQvfuWgTUYQRREkj2Qo8J374vrM/h+T97pNlqLET7O+ps3WMJ7zbCm
nIL+ldZ8/psDLscu9vY6uMXNSo6EFFhvFQblbPwYkXpu5YXbkC/7IouT4yYD
NRvTRM6A+zRUcm0Cj5HfflyGwUAR9jJ6f/6vr71TGQE5Z3It3MZyGOi3ZvbG
CwIYwfF4PuMWeJ3VyfLKVAZSLM60lxDECMt3TqwBcB2ffCt9qDdW+B3bAH73
yJRHoQUL92cTDTFNZ6CQNT3rLwlhhNa1zD+3wZPqc53+3GCgZMXET87CGEE+
VW7cBc7u1/jIEuqZkxc4jUQwIutuaZeROexLER8SpOMZ6MSHTJldorD+Y3W2
uoBXSE7/a8tkIEpb/N3RdRiR/iC7/YQpC9+SeMtk93EGeiR0PfCOGEY0VmYL
lUM9cX65mxfWw9a+dWp/wQVlF5Q+GrNwfi/Xs64kA61duHnCWhwjykItZkR3
Q5+LulsHQhnIhf/aQQb4jqN6R7ohf8X2BJXZQAbcE/As/vUYYR5/qWAcPLTP
92pIIgPtS74yHA/uy5XX/QlyDlCFn0eg/+rjVTy8EhjhnhKflAz+s3Vdu1AY
A8lsOaqYAT4xTZ50MGHha5p6nSTPM1Bu1oo2XUmMsJ2yW2kI9advbMhhB18T
ELM4BD7yFJevgP6/PhvfwwpmoN4bAoqUFEZMpt4T/gluHiYvanEO6vV9xaOl
MYLtwcwQuYuFPxjWzl0fAPOlYTDvK4MR7M2Jz7+CXyIzjyxEwniaa/8IlcWI
n54febcYsfBRQ29pFRcGmv1VsyJ7A0ZEj+kReVBvggUoNSQwkOb3Lqvf4Gah
20ZlCLjni52LTIM+91X8TLHZiBGeqnV9Z8DZvQsjjnoy0KYlrR0PwSVSgxw8
IH93XHdIEPiWeYFb0nIYEbh9LeIC5+qhYm+dZqDJvSe9boNbKRanB0LOwcmE
n8p+DGQrYcQmJw/z+MbEPQTcs8tS7THk8OfuEKkEz8CbjV6BG0ShgJUnGOjC
nzMB7gqwbj/NfiZxOBfGLFZwHIU+78vJiChixLLyhqAocGbY+k/m7gx0P2Xw
aS8499nxjUbg6Sy/9VlHGChw8vTxF0oY0e+0jWObIQtfTN/npez8f/+R/2qU
Yf+02X7vAPjTda33Xnkx0M4NJWodmzAiXG7dSIgBjP+jm/1HtzHQ1PGaR+yq
GPFDJ0H4DtSP2piNRsB6w/M0V7iAp0+fFJXSZ+FOiUJSYYH/n5sahffBLQc8
3hiBLxY4PttvxkCnihT4sM2w//gECb+G/OXTPKbbdjKQm0j2XR/wEV214Wnw
cucLG67vY6BQwbGKr+DChzVjeLfDfjjv3PAEPEVwZsBVDSOGjc74MCBf9nh7
fo8pA1UI20YNgP+lHQ1xhfrNz8d9GqwYSOR4790odYxQKNgn6g/1V8f+uWyx
gf32xsU9ShoYYa/bcqddD+4bwx0aKsYMtI7vvNI38DF3r+Y1UL/D+ZWizh4G
mhg91sjUhPXv+fH14DY4Ny0/J/JB/04dt5wytTDCxZCmOgWesPLZum74vVsa
/KqytTFiT/HjrAJd6P/5geFrmgyU8DOY+9EWjHjK/iDLDupFfL4SfR4MtDS3
sGlBByN07sds1dsC33tFpauXEAOxVlhw6W/FCIvK9d/XQp8s82OmMqIwDoGv
uRLBW26KFuRDjvB9O3af3bA/XJ0zHQdXE5bw3KvDwru11ZkhMA7H999+ZquL
ETk7c3ceg/zjMln5L6CfB1wth6rBa2b7tf9C/QNyp0qYCgOZtxZzaG3DiNX2
E4m0rSxcoTd6cG47rBO1bLZqcHfrep44yHkz8dLmgjbsG8ZfVPboYcT1AD6C
Dn52i2fQPsjhGYneOgHeimscLgX3aF94bqQD9zEZt+4CfYzgjeV5GqkN90Zr
7bR7yrCP/dLvOrEdxqGNlUKCL9zwMXmgCutEnThoaYARH2qL4uu1WHiH8eFy
JM9AR78cVDDagRFeraqhkeDC0kZi2ptg3v3tKCdD+C6SUwIOarLwTXSl+MPC
DDR64IffJRzuG4vuyy3gxPA1sQSY97/6ZrsGCIz4o64sW7KZhVeeee737ieF
CvXTBDbsxIjpwP276yD/Ts8ty9N/KHQnIm05CDyZ3alzK/jwd9lHI9B/oqm8
dye49lBaz301Fm4oc03QAcbZy/mGu4ERRnhrHRkegHwuD7MrhADsA5LnIujg
tK+rvmers3DN91HyK1Yz0BN2H0+pXTDvepeHY8En3PJQujQDebaYJFPgj3ui
535Bjq3j7eVzsE527/AN0jeGc8clbJ8h/N1et+TN7/kYyE7VZOUX8NiJEDkN
cK/RowE+6+B+biGvkLYbxgef2j+tCufyT//PHqvgHBzlsHUzwQhZiab6nZBv
9yfvgxw/vI8eLSoSphhxdd0Mz0aof3vhWK4VBwNxv44c0zXDiJe6yUgf3PaX
r7k39CP5ZuK4jTlGKLvr+ThtYuF9s49MTL5RSJG3oz/SAiOOFbDfLYP6Pzsq
xK4qMNAzXZu2VvDKzH3dK5RY+M7myUypjQy0/Wj1FWlLOO/O/fRZVGThbd4B
6fvmKBSV8aTjFLhZ7Qa2TMgn+stU8DEKRbqwTN+CD1k5H+ZWgXeT2EHFL+xw
TyvKVjPYgxG7mlMTVZRh/Rvrkeu5GEg6QUSwDHx3wJh7PPzd4CuqE5d+U6ig
5F+7xl6MCLNkob1Qv+nfVJnnPwrVCna+rAUPbToknAP15c38y9uWKeSN1u/0
sMKIfUPea9uhz4cNfi3VMxQiziqorrbGiE/L1Z5SUI8CDuT5wPrpEFiv9x58
Qdz9mDLUC1v78t+F+sdyq1cU2cB9IzRFakAB7gkOzeEz0xQy3RCJsmwxwu9h
5qOt4GlK1ab//96l6cYmuh1GrBqxyXotz8J1RcmRiUkKmc2uetVqjxHyKYr6
pBwLH3qxfdCqi0L3QzLrxBxhH5iPDZCV//8e0rs3Z4lC27rlmZHgnr1Kqj4b
WLjrSCZt1wSFxmlXor+Bf9OQlVTdyMIDPOJrujrg98qoRtg4YcSdfO4oX8i3
lz3TX9JHoW9vVne0gNNfHFhrCvVsg7YfS4cpRPk8jHVxxgjGba+dzpAfs014
7lk3hRKSDi1Og7ts/nvmE7gwV+ZISw+FVhyqPZS9DyNul06ZKoJL8H1Fcb0U
YvF2ljjth3fHp80DPrIsPNvx/SXPdgpZzc+SGw9gRDYrbWM6eLNm0YmcLxQ6
8n0mdZULRmT2hsjtkIFzNpJ7hKcBckrJRMwVzosYock+8JPBXFZ7xinUGbTm
sfxBeEeUn824L8nCPxcnKS+WUii+p+aPF7ij1K29NpBP2cprzDyi0Pna/ndV
4Gs1U9QQ5Ej/3PnY4xOFlEbuT4m5wX3V4byWhBS8j7S0DqhCP3PXbixGgi8f
M7maC/mXnETyw19R6FO45IYf4CcOxZzvhPrStvTIhJcUWuAIcvB0x4g5eX33
eHB2BdGa5ncU6nec8hwGT2Oq6e2DHP0NaVZr6yn04J3M6ggPmC/eafdM8KdG
lYI8dRQa3e31RdoT7qt0y81W4OEd3i/IRgqVIvcVneAxW/jPOUrA/BY9fxj6
lEIl2mwiOYfgXfMVRcWC68l15a+HPv9Wq2RFH8YIu6uipS7r4b4d2sfTWU6h
sRa3AyFH4B2xS3pfMXhMymJS8lv4Hrnrbl0/CvPiPTi7QwzGbSW14kQehSyi
dH90gst7rOzogfrL7saOTQwKGXRL/lPzwghjHSpNC1wlPnvd6AsKKbhks98A
V4n7oaIMObcfCefeekah+Xw7sX/gTHP1x8vrYB2WrjF3f0ChuOvEaZ9jGLGp
JHa0A+qZITEK8WUUCnpvtnkEfKRJ5yYB/v7KZEJWFYWmpJ9/D/GGeiz1ugfk
0F4WuBL3KRRw93sJ/3GMGFxgH6eD//zGNyv5kEIO9aNbn4LnLiXOsYMnxVhY
isM6+f61yCTSB/bPswP7Domy8EnW3Ck9+F1c918VWZ/AiHI1swF78BCHHi05
6NOnq2lsuy/sY2m3y9REWLj7d6UClVsUmohH9oZ+GDHVnKyQC25s53FxCOaF
rV79mtdJ2P/btZsuCbLwMvk8TrlYCok9liqhg5dXfWvggnx2V+vivjgKaTgM
0n+Bz7YaNiRBzqNg2e2SJRRK7NmSbncKI36VbjHlFGLh9CdqW23gd2EXxrOZ
4Og2b20o5BccP/rzdiaFLleQ+8X9YR/md5a8A/WE9l811XQKWX+wOHANnMNp
y3Y/8MhljxTnfAoN341YIRiAEV8lKWkjyJlaOFCPZ1GI3/ObeC749kT9ER/w
g3fx9k83KbQqRX0/HgjvlJ6aVH1wx1Fb5/cwDnvPz6RNge8dE95qJAD3q7Sq
sOpkClnKce4uOw3n6amX/kfAY6lVdwygnx+S4rKJQfBdnxeSP8oP528Cb8PO
BAoZXpzyPxsM74JmN/XT4CxNrd1PoB/J/ewa8Wcwgl/tjXzhGtg/OQ3jPhyH
7/19l+29EBi3HB7Okf/r9aTx5HsUCi8SD18Ef3jbf9GVj4XLe3rGhBVSaCgl
18U8FCOKfm1a6wW+4kKnUE8k7D9lWFMaeK+DucQM5H/Z+nqi7TSFdBU8pGbA
D7fInrVZC/fnJllFJvQZl8Br7xoG4/zvqNDZ1Sx88JZQ6lIShb5sPMn2Fjxy
Umv3JORvi33icQ7yS5d0Xc3CMWJNVuv1B1DP5OmLcTkP3+m5F+fawDEvR4E5
qB8pmq5KuATrQXb0kN9ZjNhWPORoCM5x5/xNoXAKpU2cNRGOgHeZyiaBePAF
1TiDmmgK3fx6q+o9+BwueD6JF+4DwZJvcsMo1Lwx7ENeJEaI2UwFHQHnmL36
zvAshS6KnclLiMKIhKhwkSwe2H8OlIc+CKDQh7mwT4nnYJ3bJ30KBL+b9CBV
+hyFLlUF8TyIhvVzeUbzCTcLv8/jUGK7B74XJ9HtP2LgfFFP4+CG/PeujJ2e
aXA+Fuv26J2HfWxcqUOMk4VjmdIf/K5TKPWIDc8l8LHZyQICPKrz3WMPDwr1
WW4ObQM/acVw4l8F+22tTka0M4Xq3xeUqV+A9Xla9JYLuEC0PukbSKHiOEop
G3whQGTZkYuFt2i5uHMEUWgf/9NgvosY8aAo6MMg5AurPa+egPyln+1X48CZ
i4oqT6G+qabX39ubQsd2jG4WjoX9ylF1qBvqb9xTHjx1gkJna+8KPwT3+Nbf
swXc97jBtt8HKZTxlU1p/yWMeH9UM/AaeN/S2J6NxyhEf3A8dN1ljNhCW0z3
ocG5vEypnXSF9TObXzQMLrEvlT0c/CSa94k/TCEpo40bO+LgfFnZ4OWIsfBb
ew8qSFpTKPSWOevDFYy49bTfpwe8tVZEvDWEQurJ4QeW4zFCbvsmBV82Fp4/
kZjdupVCDc0pfdsS4BwX5E88APmhu49+999Goeosh3MXwD0snohxgQvPXboW
404h0XHtU5/A2WKXBKzZ4VyIJBTZYRwIhT+YbiJGlPj/ehAN+V803QXnoJ/P
qYf60sB/rhW68Rjqs/PvmpWZw35YZvyN/SpGuP47mN8C3hAbuDoR5uuk/rPU
c+ARm2RWpkDOi5GoBF1bCrnMRAtgSRhRkNaUngpu5rPDLwNycvh/vMkAryoK
sb8LfrNXadVbqA/k7hHHr8E9iqpsvbMS3st9t3/XmVFI+4hK0yy4Zn1cCQUu
q21wsQ9yvjygmdVexwhdD56ShRWwDluNbs7uplBwqCiVmwzn4PEOtxvg+920
v3wCP8j/kef2DXinXE/9/GGZiadIJG/YuAPG571EITMFzlO37PJk8GuPDy/Z
WsB5neeFxlPhe3R1od4tMvFewqntogKFsnrUN5vcxAgiNoj+FurXVSfZlcO8
bLX5wPYQfOPiBuzsEhNXcw9t6oT+tz75mSGXhhE9CbkCKyAnK9VW5q4uhX6z
2zvlgEdnPTtWCb7WKWudihaFFo9saldKh/f11KEmBrjChtY3KtDnZqcs4xfg
OhK1mhcXmPihY4URM5qwH6Yo7PPJgPddUX1vNXjqcLfqWcj5N/xjk3wmvL9c
kqQVwE3Ckq7t0Yb7Z6AS/yx448TJush5Ji4utH/PShWYrzPWvzqz4F1jWvjM
GdzPvjVZF+oPsKWe7syG+/ahhTihf0ycdvvr6UMiFOJxXdozfgsjfhsGcApA
/f3V9u5nCbhvXMbdDG9jhFDxXRPtP0z8iXAHuyisz7ShPZLXwGmcFBYJ3v/V
a3T/egqdCJChDYL/KOpJ4YJ8IbuE+FUSFCqyzXtodgcjwk+Yfyv7y8RnLDvk
EfRJv78wWQn+/cNi7GHI0WQrLL0uD/tnxo5dmjkYIWrTgPuCr2QP4lgLOQmp
KzrLwe/k2E7cBZcfGHlzUo5C725h3pZ3McJ30lK8eI6JVz01+3pNikI6r2+U
ToDbzt3OTwLfIRL9xlWcQiIPK2gFubBfPc5YMgf/kx/LCIf6z+3h8SfzYB6d
2O/7/4Z51AgTMhCk0O0azcU9+RjxJv7k40jwp/ldxhkyFFqZEaFtVgDn6cnE
lLFZJn5MZyvD6Q+JTiZU6zjTMSJd8Dat4P/67a5RSAP2txrZogLw32tSSoZm
mLjdk+yh+U0wPmpY8CT42ZPJiat+MvFvKnU72zEKVbnvFtlBYkS/RjZL5hcT
b1o4TcdXUOgM72fhDHAd02pSB7ylo6F9hTCFujx2Z66g4H1kl/zxFuRIZZQn
xAhRyH9ZzNcffOfKRxq24HXsZ11fQf4hrLVzGNz+22HJPnDG/RjiMi+cF7uE
macZGNF2yiZjNfhbmlyJFh/cH54sWfEUYsQi60DhDej/z6+wYx/ZKOR4eqmg
FLx6IEqrBvxJxLjFwVUUmpVKEvYrwoiL6icKKqaZOPazrKZ6mUQOm/1s9Ysx
YgLff60eXHjyvvd+Lgodz5W5JluCEfee/51InmLiN/B7AhZTUB8+Uix5DyPc
op3kHKDewYJrjAN+r4BUgnQweHMYb8SbCSbOXWHMWuCk0B7J4I3N4GbFN5/s
m2Ti2w7Wa+tMkqhIcTpY9T5GnDdZEsuGfJ9+/l96cySS0wgZzgLv+ccT2gD1
6e+rClThd3EeeyQk/AD67zp1uxbyL57ilXv7i0TvvorsyAAfExxevxHqkQ1d
33yWRAPPTvGpPMSIo92f3zZDPR+VWTT+j0RCgiGP34L/Pf4jZGScibeGmh4r
myDRm3zlxehSWJ8DuYmKUN+3Xuy78G8SBVTyIvMyeL+f2P9DAuo17cSV9g+T
6MSsjbE8EyPebhXU2QXe5KCv5vKXRA2W6jmSLIxYP8hTlzjKxBeyGaFvG0mE
Z011KJbDPWqrtBcF9T3OL0IGYX6J8rqiYHDvlE2vnYfh+xrv/rOTBu8dHjd1
BM6VHP33CviZQ7Icc90kqnqnxVj1CCOCBFwvL0G+4nfd7HvtJOJN0lU9An7J
vMZTeoyJJ3ysUFAaJ5Fh7PZHb8Cl2kXtrEeYuIFdRVT1GIn2RcV+1avAiC5r
mhwH+PbAKJfaTyQ6bNEpVQr+S/rG2wrw1mzpzLl+EsUGflTQq4T1ltn7sRX6
Ib/F/Z4fIFG6onDS28r/89+W2IIrh07z6HXBeG72UQ+swghVv9+NyeB8DbS7
x76RKM/CaJ1KNZxH5cYBIT+YeI7AUrXFBxLZX4jk+gX+uzY26S44i9fT6ncv
iXT/0BS7auBduWn8mdV32Me2OvYv1ZGIjfPSt9bHGPG8Xuu1NdRva0hLXQ3z
+OVrV+eGJxjBEuO+nzDIxDU+btC1gv4Pi3lFBYE/m2n0/wPO5Z6aalJPIpPT
J6bfgL/pkdYKgHy+FAGR0DcksukPJDWfYkRr4/Oi/iEmfjnmYq00jP9gQbt7
PvgN7sSTDMjxN316NLeVRMO2z3klEbxTPpsU9IPbFH6yYYd5N3PbI1UAfmWf
KP07uLuFxtKGNhJ53LfjMqiFeXyZ4PR9gInfGr575lgDiSL5Mgz6wOPOrBjH
oN5SW4NzP+Q0vRKUynqGEVsDRZf9oD6X2vdt6jWJ2Ad8uryeYwTn7gmnsX4m
fjUtcUMCjA/7ktdz8xcwnq8uGl0Bty7TGNF+RaI+Hc9ZkzrY/3eUXmV+Y+Ky
+5YSjSpJdHBSHXd7CfVmS7cQ+CqxV96bYR5jfH+n3HqFEQ5rXyq2fGXizd6c
0pU5JDK1/zXcBj6SviJZBfKzVQK9juaSyN/rbrp4PUY4G/37+xlyyuwcU/++
INEfgbUH/cClSj57xPTC926wY04Cxnn3zm9jL8ANvTnt30H+jPtDzZJyEgV+
8F2Qeo0ReOIDvi9Q77L88XrAQ1hXRKTjJfC47qqr/eAqQgrpDx6TKK32otk8
+MnORwrNkJP4KEzg/iMSzZ1OKA9rwIj5453V//vMs9sCspCz+7FUJdYI93lx
xvsm8H2qPoKHK0hEuoaI5oM71c83Dn1h4sPOFlYL90kkcExAy/oNjPPvh3yj
4F7F7V+PQ45uvv/Emia4Z/4c1zcBT2jLWxYuIVGugveuwab//8/Wvnush4lb
2W/Q3HOPRLtU1C60NcM561+wWxk89cFLbbU8Eq0p3jvd/Rb27TxlfyHwPT2O
Oc7QzzeB8zlYK6xbvwaD8W4m/jDkxfGUJBKt9jc9bAx+fHBHzHaoT5u31z2Z
QiLHG+k/roOPMlrwis+wDltaIs5CPx4zX2R/gHOX5NVNQk7+ulTjxWISXc/R
4DZ+B/e3qNQMJnjczLEeg2wSPR55+Y8ET9m9auHUJya+8bBNXsktEjXnSBiI
vofxqd7+lAZ+5WvYb/EC+L0n6tRSwWWfP87ZCjnv7oUosLJIdPmw6rP1bfAu
qBk1OAoe3F6ojcCl+BwDmeDX16uXz3Yx8Q1b4zN9b5NIPXHzH5d2jOh8xCqz
AueWNnFNSiXRFc4D8sIdGJF4ScLRBrw+PPXwJujzbny94SD4CwmeBeuPTPxB
V+i3lQkkEna6yNbwAc7ZZY7yfHDCt911niRR3e63e5o74X7ywjRO4wMTD+Br
dJk6A/uSgGIv90eMuCY9vWcS6n+9sNBwiCBR9fQtQ0fwLBfx+cPgT1cru3FB
/yVels3F4PwX/I2cIEftcmSwLfhbXm0nWhfc58P9xNeAWyUtR9VfItGFudvb
j4G785rEzIHnygaLL1wmUU7pc3oH+AcuhbMp4MyRWUfzZBItxLP12XRjhOW/
ZU1GBxPHD4/UTENO95CSxAfwf1Fu74bAJZb9np4HHzY4ZXHiE0Y4+l9uOgce
w73YnhpPIok5O1v+z/CeKvb1e9UOfZYK9TlHk0hy1MyyHnxF+XLIV3CdX7/T
deJItJIjC0/tge/azL/obRsTFxNPFS+F8Xl7qk4y6AvsP/cKXulBffzlqbF1
N0mUIHM1P+grrCuOdTX0d3Bv6XvmK3AIxl8op+wBuH1JtkIy1F/VMaccjsG8
3/Ht/Au+Wd5Xmxu8Yv8HsQHo/6nfNSfrXoyoV5M50Ac5Src945dgfBLdG64w
wFVXhRcngSdNP3xx+DSJisVi7nH2wX7168zg5fdM/M1+N6Nl8Jawz/pB4A84
O2vVwA1lK4K2R5FII+hw/jj4j9CrorqQ8/TKaPcPqD+YKfPI/xtGpPlcvHMG
3FFe90ptIJybFPth9n6MUN8n0iMBbtFdx/ckhESya3YOkODrVZvuO7cy8ZLu
5sUlX/juLuV17R/ACOnCr4Hh4Isif6LnguBcM9BL2DiIEeKNxltOtDDxCY8f
VX8PkyhKIe/zMnhP12OFVvCn2HWsFObF0vaVwMIQRniuvnDRpZmJ3xkYvLnS
lkRcNZ5pW7/Du0zJ6tdayK84pWp2yJFEZ+689D0HLqQZuJAOObPRAmzV0H+G
ZbZZG/i1dIOYm5CTvvRV6gj0kz4tI6fyA/YNY1mX7eDliXpcWz3hXnfh5Xgc
uHh+U4rUWybeESQYyQ7OKaSR8xPckjvJtw3q7ST5clg+JLrEOI+dGMaI087v
Dw81MfEx48Wka1DfwtkrPwbOFjTYLAT169Lc7hW7k6jj2YhLxAjsk/rytq+h
3qrzjUbhERJ9sjAmJEcxQpK2Iw4Dj5/lSqMOkOj5kWi/ZvClIe8SKfDd+VO2
zpC/PD9RnjIG99Luf2EKb5h4Y/fyz+92JPLqmOv0HceI7coOjUfBR55/Sa0/
TqJRFU3tIxMYsdJvscCmAe5v6lWbOHeSaOfEzrk8cLNhu5qbUI9v3hG+zxTO
a3YiexI8daghcqER3mvvJ+TiPWBfcpcoN5nEiOLf43p6kFPo+/4wnxuJ7u3w
1MkD32V1JloCvGvh6B77vbDvMVQEsCmMYKw2du8ATzy95XmnDYnWTqPoYHCu
pzf594KzOTk1GzqTaEWbiNwM+JXS3qhrr+E+GVv3vXgP7NvOXF5h0xgxOTku
2AJeNzHUt84a9oHhNmP+GYy4H6naog/+PYpDpwjcbeasaRV41+w9k4p6Ji5q
Xmu32oxEIxUfAgJ/YoT+Re7nBeCLd7PsT1jB+gnJ32k0ixECOTeNil8xcdc7
hshmB8zj0WN0+V8YcWbD1XgeqE/81fb3+UESjfMW4pt+w/cl4E13qYNzsJNn
uVcRxrmXeuYJ/rz2Dacf1J+imstaVUhUkVeymQHewy1vuwj57eJ6J0fgd82V
t87/BQ/Wp+9/BTlmB3Iqw2B8Xp7KMrWew4govkvnbMHnjr8/a7Qdxj/5HlkI
vsbT+qLDS3gHsYufydAj0eaHXcVr/8D77uNg2wbws40d7Kt3w/4QdyTmIviv
I3KtUpBTfWFe2cyARMwnUmEr/8I7JXXjjPn/fpC41bSNRO3yha8SwbVqvxWK
gf/x0Wtzw+E7Ur5SofQPxqfQwXPXC+hz1xX12S0kqhGJXdcG7pT2JtgLPM10
e8cvfRJNFxsN3JiH+6EN41XUcybesFyV8VmNRMarlC2PLmBE7sGiA3fAtWtG
HikTJOKpiBi1X4R1nru89kct3KtnSXZNSRKJxrNMs8Cr/CvnG6H+APsdLg8Y
593qC90T4AmyXT3Tz2Bfip5PVoHfpcMS89q7hBGFtM7AU5BzIM5yx4wWiRS5
9D8+BG81GW1igp8SY++uUoD7rXIVLrWMEexDd+hSkGNUfXE+Vp1E8pl7nbPA
aaEqnIZQv12XrLWD/gOms3plV9CIpWtKueOIiZs2drTulId7gpFwySPwSa2i
LB6o/762ykNsM4m42zL43VbSCBFZHW1xqO9HjzM/biDR3sz2ZiE2GnGtZVeU
Jvi9XTKXtTaRqH/LqPk3cPXfT2ZVnjLxXp1nk7miJOLgdY59zk4jPslY3M0H
5xUMC2+E9XDDrmp9HQeNOCX898mzGiZeS+P1Ob2CRBZSL0f+gido7KqWhfyz
TxQqP3KQKLRF9iCOQT/Pst1LIMewwejJSWUSHTA8cv46+HkytNT4MayHVeu5
o6H/n1LKOQPgIeTv2w2Qf7UqmNQXge+U94b9Dhr0X7xLaBTqn/U7cYULkSj4
28WWPPBvn/Pna8D38Z+I2ClLIqxPXV6Yk0YclA++SUIO7V1AzUv4XR5vScXr
4E8NQtx7wNvPNWWtgZwfMksHxbhohOu2axvLwHd/Hrgfs55Enpd75JngWfNp
9u+q4RxZt8qKWEui0qdufQe4aYSs0vMzbFBPX/qyxAP5El3Zf0VX0YhUoelF
fqiXvZzMIbgK3i/dvhu+g88xrC8T4LGnK0h1WG+PvD/FveehEeE7BZmnK5n4
Fh4x0ci/dNSVuqghyEsjnNY26R6CerJmi8YMjLPLHi0VT/DFwfzUyip4F3hd
+N0O42PcXsddBV7aHzuvCjljrwrOsfhJlHlg4KYwH40Y9aiM1wXXrHAJDmaH
ewLL80Q4eKF4meMr8JM7TjnIccN53dE4NAben6SuKQme6pueFcgL69MhYsln
NY3gCz3DuFbBxCcTFbR02GC+hloDZsH1bVMl68EPrshJseWE83ev3upra+B3
ZaQUcYOna5iFJcHftX7Mzq23lkY8lqo9Xv+IiSvMP2/8Br/rVKJF+y/wz9/P
sx8DX9UQncC/Eu4DRfyT9fw0wmiXHndTOdyjFsbUff/R0b3I+aCHAjSCTfCD
RBz43YQPDD/IfzP8OaFckEbcwIR/GLGYePjvlgLqEx1xL95caBWiEdxad7Pe
Qv2H+odO64RJlCJ4KEpImEZUPZdw0C+Dd4R/u7SuAInCD9KFHMEd2VXnt4J/
99S9HDlOR8U6subp4K8FpYM1If+RxkS60wAdiYZ4fhoA52TbeO4CuAtf8zG7
P3Q0/Uqqw1CERvQe39EixGTibS2vBYbn6SjyiGJUDrhUv3VVBuRrfLmjjUP+
4/JzWZyiNOKZ6RC1CerFMpajyqboaLN6BCMSfLrxn0Eu1CcFJXh8nqWjbf4O
p1asoxGH1eQ/s4N33itJuTBCRzNX2jSvgTdfD8zdBv4o8O9U3CQdPbSqm1cX
oxFJmnuehJYy8fceyUdeQ/3D3GWsDzzEV86TKP3//6L+qVfBOeOK40lxGB/T
t+vKH8J7ueTr1reDdMTSOpgXs55GqDZIWbiBm5z7bkMN05HhaPzMGQkaceuT
ptrpB0w8S3ttaVoHHX1y0G6/KAl9DmVIfwGXnVgIpf+iI+8nY1/egXPKKQfV
3YN3YtbP5h74u2mspgFpKRoRhOcrqd1n4h5jfrzykKMfneoWBD49G8DShZyA
1dnq3jC/R/bwfe0A5zRpNUiB+q+hYhynoE+OdpH+ndI0orjbKuc+5KNbvoIG
UI/prlj9CDwsfAKbBZ/31Btf3UVH2ns8X+rK0AgdwlqhAnztGlk+56/wd8kt
V16DR945dHiqBPYl/z1WvNDPOYdZWy9ZGtEuxy4oBvXvu1deDO6mo6beI3TR
DTSiMcGJzQzq1whMj0e/o6MwPUyzG3woXFHcCLy3/suWLdDPz3N/BMs3wr5B
dXUKFDPx/Q2WA2VP6Khn7+y5PDkasW9LF9cGqP+40tzS+wcdfRmi5/0A17oo
ceFUIRPvo2RbtftgHjv3DW2Wh31v3avoQvC2bf+s/OroKF/IeWMIeHJ7SNNG
yF814Xyl8QV8R8KzHk3gDnaiM5NFcL/NOD0w3kZHbRnxn1UVaIRaNf66EnKk
F0/HnG+hI487Wiqp4PrenlcfgutdVrZ2fAm/lzcrFVOkEVv+bSfmwPMiClfr
N8P42+1oiwWvYiS9lgMPDlr0CG6go3cbOTkElGjE5R11+n8YTPxfqArzE/Rz
/Wumxj3w3bm77D+DY1v/2cdDvUYgtdZFmUZ0cx80XAXeq221Vu0pHUVYb0wV
2wTfu4LA8iZwCcOA/u43dLRxr4n8NDjhNn/9BQn3Z3/jM3tIOkreeNK6S4VG
5GgoZe+F+n2YjsormPeTBV9q16vCd2c3qCJJh3WL7zcdgvkdiMvkdwVfd+Iv
Swnc5/idcxEs+L2vrAvvgL/k0M4ahfyyz7ovGu7REVdGyakx8KenMktFKSYe
cadRy7SWjvTCNyzs3kwjXL7sP/oCcuyb/btqn9GR/yoBWRJc9PFOU+///+5r
rheukL+er153tRqNiLBVNh4E929ct2Wpko7ulqepXwSPraoIsAQXPLgQ4VpD
R+130n1o6jRiPjU3sbGAicuk1UQ1l9JR7J/IpVTw8d8peTPgCjyP28gK6D99
KlFHA9bz5tsqSuBbLr4yqHlIR+anXYYGwTFpQfpa8PcJbvGG0E+/yrG4Yk0a
0dFf4WeVz8RF2qae2zHoKPdtmlSsFvRj/vrJYfCVb/sdv8C69R6+cDpCG+4n
fMMZAblM/D9cR14S
     "]]}, Line3DBox[CompressedData["
1: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
yk2z+6IKUa/bk7ELfWTic9m/J5L78f34NK91cVwhupFjubOvn0yIbWepPsQ8
mfqnWp5cL0QJFM2NkYOY58AdywSMt2y/3icaWoj2eOql7/tLJsI2L5UVxPgH
TWmmcmQhevKjrNtsiEyQ2msC1pow4FJFe9xuP6y/7ZHFfiP4Xkju6p//PwrM
PJyqr4vjufeSfhoUSQpJEsmYsXJ2kSIpCimVjIXKHErKPKUylKkSijtxca+x
2jIPiSJkCCGKiFAI73r//Tzr+Z611157Def/PN1e3xDsj/6QPj86DfXtbMtl
NW2YS21v0RyO5WKzy9/yI/5wId+V93XNQH/NiPxE4KNcrOyUb2XxF+bePK4d
aWqQJwHWf16D/2Gd/MoCczAnyI10JanD/v6+nmV/DuKfx3exEfijwUuSDQjq
laXNF7PTuXh/j8FL1jzMG/M75XUOQhySnI3eX8/FlxXOXypdgDlBlH9TmRbM
S6dOpAZezcUOMqsVW/5xobLF7vR1wEWDpIx1LXJxndWR6yuWuFDVnmz+1v0F
RJWJ8u9A61y8wfwmyXKZC7l8/fHxkWYBIR0tOxVwKRcPHh6vbV9BQuJBR7UO
aBQQdX1yL3acysVDHbIMLxIJXX/ur3gJ7C2d0ywaLXNx+KbLbkYUEuKkDn65
rwr6bmpTGOJT06/POc5DQq1KvK2fIA6nbZcsn4E/S6Mx2XG8JCQhNuH8RqmA
IPfi5kcKcL/Pt6qS+UioQbhM0wvic9Wq9/4DO8jDTQtyVcD/Y8eyNssVEB9v
i91ovpCLyTGRb26tJqFMp7XrmMCfbBdQI2nlYo3/JjI115DQgf9ID0RVIG7L
g8XBe3Oxebpj3ua1JNTemnTzKPBkCfn6kSO5WFD8j/7WdSRUabLtu6t8AbHq
YbxQ1uFcbC0RqKrAT0JPWgx7qvYUEH+/V5x0UcvFPMIBphbrSWjVivr0CAWo
Dx/O/wren4ubh0YvMzeQkOSmAy/nwZ8L2f/MKPty8UXjabRdkIRyROYFKncX
EKyItymdcN7YmgXF0o0kVL3Hn2MA9kO0l/Z/VeGdouvC4ZtI6EH5UsF+GZij
bLPiE3blYmR5feTOZhIaP10q2wTcok5VgaqUi6fqfQNKt5BQxTUjIywFde/c
+6MV6yHOfR1OkmIkVF5dxX8D7BvUM9ZoasP7feAaOQ28pkCwfUm8gFi9+Iur
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
3YN3YtbP5h74u2mspgFpKRoRhOcrqd1n4h5jfrzykKMfneoWBD49G8DShZyA
1dnq3jC/R/bwfe0A5zRpNUiB+q+hYhynoE+OdpH+ndI0orjbKuc+5KNbvoIG
UI/prlj9CDwsfAKbBZ/31Btf3UVH2ns8X+rK0AgdwlqhAnztGlk+56/wd8kt
V16DR945dHiqBPYl/z1WvNDPOYdZWy9ZGtEuxy4oBvXvu1deDO6mo6beI3TR
DTSiMcGJzQzq1whMj0e/o6MwPUyzG3woXFHcCLy3/suWLdDPz3N/BMs3wr5B
dXUKFDPx/Q2WA2VP6Khn7+y5PDkasW9LF9cGqP+40tzS+wcdfRmi5/0A17oo
ceFUIRPvo2RbtftgHjv3DW2Wh31v3avoQvC2bf+s/OroKF/IeWMIeHJ7SNNG
yF814Xyl8QV8R8KzHk3gDnaiM5NFcL/NOD0w3kZHbRnxn1UVaIRaNf66EnKk
F0/HnG+hI487Wiqp4PrenlcfgutdVrZ2fAm/lzcrFVOkEVv+bSfmwPMiClfr
N8P42+1oiwWvYiS9lgMPDlr0CG6go3cbOTkElGjE5R11+n8YTPxfqArzE/Rz
/Wumxj3w3bm77D+DY1v/2cdDvUYgtdZFmUZ0cx80XAXeq221Vu0pHUVYb0wV
2wTfu4LA8iZwCcOA/u43dLRxr4n8NDjhNn/9BQn3Z3/jM3tIOkreeNK6S4VG
5GgoZe+F+n2YjsormPeTBV9q16vCd2c3qCJJh3WL7zcdgvkdiMvkdwVfd+Iv
Swnc5/idcxEs+L2vrAvvgL/k0M4ahfyyz7ovGu7REVdGyakx8KenMktFKSYe
cadRy7SWjvTCNyzs3kwjXL7sP/oCcuyb/btqn9GR/yoBWRJc9PFOU+///+5r
rheukL+er153tRqNiLBVNh4E929ct2Wpko7ulqepXwSPraoIsAQXPLgQ4VpD
R+130n1o6jRiPjU3sbGAicuk1UQ1l9JR7J/IpVTw8d8peTPgCjyP28gK6D99
KlFHA9bz5tsqSuBbLr4yqHlIR+anXYYGwTFpQfpa8PcJbvGG0E+/yrG4Yk0a
0dFf4WeVz8RF2qae2zHoKPdtmlSsFvRj/vrJYfCVb/sdv8C69R6+cDpCG+4n
fMMZAblM/D9cR14S
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Medium,
  PlotRange->{{-0.1952983887606419, 0.}, {1., 2.7751397156363744`}, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.199395171823795, -1.8216840468091349`, -1.8149733088283353`},
  ViewVertical->{0.29683781555186406`, 
   0.2309515189516963, -2.3164475862194434`}]], "Output",
 CellChangeTimes->{
  3.6830695367470675`*^9, {3.683069623332985*^9, 3.6830696495914907`*^9}, {
   3.683070166579464*^9, 3.683070268543749*^9}, 3.683070363702191*^9, {
   3.6830704110598774`*^9, 3.6830704345745564`*^9}, {3.6830704867158957`*^9, 
   3.683070511203221*^9}, {3.683070592611495*^9, 3.6830705951131606`*^9}, {
   3.683071082124053*^9, 3.6830710985640125`*^9}, 3.6830711414896326`*^9, 
   3.683071185518984*^9, 3.6830721021371555`*^9, {3.683482685901039*^9, 
   3.6834827187354584`*^9}, {3.683586462875688*^9, 3.6835864739332743`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RecordedComparisonData", "[", 
      RowBox[{"[", 
       RowBox[{"sm", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ToSpacedString", "@", 
            RowBox[{"RecordedComparisonData", "[", 
             RowBox[{"[", 
              RowBox[{"sm", ",", "1"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ToSpacedString", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<Final error:\>\"", ",", 
              RowBox[{"Last", "@", 
               RowBox[{"RecordedComparisonData", "[", 
                RowBox[{"[", 
                 RowBox[{"sm", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], "}"}],
          "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sm", ",", "1", ",", 
          RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"LegendFunction", "->", "\"\<Panel\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Inverse power of two gradient smoothing function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iterations\>\"", ",", "\"\<Error\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68354176658178*^9, 3.683541767117134*^9}, {
   3.6835430681030846`*^9, 3.6835430725340366`*^9}, {3.6835435344847717`*^9, 
   3.6835435812579727`*^9}, {3.6835436223694086`*^9, 
   3.6835437299741793`*^9}, {3.683543785355125*^9, 3.6835437916643305`*^9}, {
   3.683543882185715*^9, 3.683543921987266*^9}, {3.6835521130451317`*^9, 
   3.6835521800098057`*^9}, {3.6835522121252275`*^9, 3.683552364081595*^9}, {
   3.6835524035439186`*^9, 3.683552485126339*^9}, {3.683553052933615*^9, 
   3.6835530923639183`*^9}, {3.6835532902593145`*^9, 
   3.6835532915401692`*^9}, {3.6835533638423977`*^9, 
   3.6835533641846275`*^9}, {3.68355339530539*^9, 3.6835534359635096`*^9}, {
   3.6835534932297087`*^9, 3.6835534959275093`*^9}, {3.6835535285412655`*^9, 
   3.6835535650866437`*^9}, 3.6835536885690145`*^9, {3.6835540353483443`*^9, 
   3.6835540522846413`*^9}, {3.6835864511508617`*^9, 
   3.6835864511708755`*^9}, {3.683586589223773*^9, 3.6835866131007013`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
30IKTNdtiohBy/VJRSbbSEEw425tdiHOD79edIcdkIKXJ73/SBdhvwwUX+p2
WApkv6fKjaH/uiec33FMChwPnh8IKiao5szGCUVnfB8VkVs7SwgqjNF0c8pd
CjhVUfqcUuy/1+OcKs5IwTWn9VqTaMt3vKEhflIQY7hc8vszguKOjv9rHCAF
CQVqu2fLCGqjSlvjwktSsCO3k8F8jvNJTK94cagURPwUTP2MTnerbz52XQpO
haXTFlG4P9d8WBK38HnuxS9y0V9470wVRknBVkEqNfIFQfV8f3h6T4wU7KuN
uzGK1mALJo8lSMFvU+vNDyqw3v8ZvHI5RQrUNa9lrKskKFnjHdr0R1Jw0i5E
txV977V4SUKWFAgX/N4R/pKgMmg/mMp5UmBpkvrAtIqg2paePJhaKAUL/RUE
l7wiqErjiTj5Z1Lwdu2KYGY1QV24WPkhipICaqXfaoUagprz+K0kWCWF9SZ9
nW4t9r+3Fy+drpWCkLReX/ZrrA8aenwf66Xg2Ju7Zbro4esNTwxa8P14f7h+
Qae9r4yMbZcCK/HLo7F1BPWr8FLxVJcU9Ps/KBB4g+83brt0W48UlIrl+KWi
I6SPD9/rk4IxycRcnXp8H7mnYl8HpGDZ4m/BzWj+F4tjVIaloNbxamZwA0H5
q/jedxmVgoAMzphxI0Fd8T/AyJyUAsFRqyesJoKq32jN+jItBXx7bRoWNhNU
6J+mR6x/UjD7UamapwXn8xuSbSZcdJAfktwr3EpQS7pNE0/z0uG2Sc5oMPq5
7H1mrCAdHkk2WyaiHU983UgtosOSkxcVTN7ieSuJqvTQ6GC8ndG3pw37j3vz
uxkpOhQPVetFoj8nvrUk2HRYGpVla9aO80lqYpqCDB0mbY+9aUTHnU7rUlWg
w/CXOB37DoIKOG0wqaNMB+kDeYcXdRLUm77kf7CcDoF2xWHF6J/af+Y2rKJD
dPIVJe93BEW7sXOBoRodbo1uPmDWRVCCc7cFdTXoYKdJzzN8j/n1J11hjQ4d
jv1+80T/A0GNFZqZL9anw7uQ+slFH7G/B+gl0zbQ4fzM4XZJdIIYN3vWiA62
Ht6cDnTgN/nnn01wfWqSgg7dBKXwROBe1Q46CI3M7uxHJwWKPHlgSofFYooj
jj04f2q6iAZY0uHcxkMTC3oJqrjOpmCPDR0SfDb/C0Onx3/NWbGfDpp9HhMa
n3DeqmPwztrTYf+/oYFJdOvJD8U1R+jwg5N46/lnnA9HxdojjtHBWeI7J74P
+9U+X/s9J+nAXWrWcbsf1xfbZMdyo4OavIZT+BeCel+d39Vxig6Rq2+Xf0LD
oYKOm164Hmez7Hm0RrrZ/q1+eD6Jd8JufMX7Q+uk+5w/HfiqdQzyBrC/m02R
2UHoOyfetaPVGPEH912mg/3fGLvIQYKKaVQy4btCB1WuGxNzaB3lnM7Ma3R4
cPNa56Vv2M8XmNN3R9Bhn3L0F/khnP9LxAVGb9Ph6OfMv8VoI4e+vLBoOpzY
JmB49Dve1/6lySrH4OeHYtkqwwQlkq5p+iyeDg2V9HieEZzHh8137kqmQzxT
2+8HuvTLE05PKh1cJOsvvf2B88b5Py9OPMK/j374oBN9L/3Fxl+PMT62E409
6NKwGw/9cumw/LuLypWf2C/Ke8fn8ung4FY23j1KULye0ivOF9Gh5OxvjzG0
ytNky9lS3D+HgIIXYwT1KqzC68xzOhzMvVymNE5Q0dqld0Yq6HDd6fh4KvrH
/heFB1/h5zvnxDdM4Py46m9PSy0d9H24olvQ8gmBkob1dBioqiXOTBJUZ6S9
bWYTHVq5gh6s+4XxLxJVIPmWDoO94bo8U5j/WxirfDtw/We7l/eiJ/68qvrQ
RYeQIVeJhN8475w5H7S+mw4SWZHvC9G2jYuO3/1Ex3l7YcGWacwfgbX+E/10
6J7RNqpAZ+o+eLV1EOObdeXvkhmMN0poS/x3zO9pii8GnW3BwzP2gw6KROUb
9h/sl7CYG8YxPx1mkiLRNud+GIX9okP7b8WypX+xn3341No2TYfvLN3Tr9F1
y1xyOLN00No/vMV7Fvd/10yP/TwddPxDF2r/I6hjft1Hk7gZQPirNonMYf4a
uJh84mUAY/dw6Bd0TOGPq9KCDFCmuZ/Tmycoq9T7antEGODKRztyEv30Xqrh
dTEGJNUcKWhEU6KaZRXiDFgZnqFQvYBGyYQ4pU9KMcDwlXDQJ/SbQgshRRYD
djmnFl7kolHmd+f7dnMYsO1Feex79OWIEzp+sgx4dkrM3IKbRlWEhdOSFRhg
HdWzvANdzLFxrlHC35t9rWy7kEbVRmaafl/KAIeYvuVj6E8rHCqEVRiga/du
UwwPjRoTtaxctpoB93TO2+7hpVETl42sjdQYINJ185ISH40KEPt98YA6A0Q7
Pcv5+WnUPw/5Hae1GOCm0PF5BH3ky6n8UF0GGJ0dEJpHx8pElt/XZ4DsRWlr
TQEa5eu52DXDkAF/RPRtrqF3T+bXFm3C/Xs3ZtYqSKOUz3Y0V25hQFdlpupq
IRoV3kpcfbOVAS2BJ1PPo2Vedk+37GDAt8FbZz+gL68plOnYzQAu0elifWHc
nzUCC96Z4/ukJEVnoG0UtBI6rRjg0/6tcLEIjXpRmcLdbsOA7NA+oTR0xba0
5c37GPC6MPmOziIaJeAfTr62w/eJTev7gK56kdxJHWKAe1R1/A1RGnVaU9nh
qQMD5gj3wT1iNGpnw+6XD48xYFr80+w6gkbZ21jNRJ1gwOT29KhlNBrl/OAQ
/2UXBqwNDt+4SpxGuYXcG3N3Z8ApRthILPr9PFm61xP3MyT4Sxo6TGfu6EYv
Biy958VYJUGjfHJNp5f64vlVWWqISNIouo6ch8g5Boj57e9cg/ZgOXeMnMd4
Gj7fXoWWYqivqA/C81u16LOsFI26E+7i9ugSA/qFNuuFokcuCz66FMIA+itW
jwAdn1fys+vAVQZ0+j1ecgmtksfDp3GdAYO/5NaJMWjU8XalVcIRDFhwPHJv
FlrUe7lV9y1cT6byo31MGqXzvS8g+w4DHn3ZpyXFolFrb0nn+t9lgG9xkEgu
etFkzLdtMQww/RRxvRwtUSm/khHPgOZ16SXAplGjUw7+vYkMSJ06nZyOzuyQ
7n34gAEnXtOzuEh8vui0hfNDBhx90eN/GP09P7ZH9REDhiKclJv+85EnQeOZ
DEhcqSKkyaFR2lvewpNsBiyLr7PNQycqxHDcnjCgo0Tm/HppGpXuFMtUeYrn
/SDKtBEttfOo5tdCfJ+NlmPuMjRKq+q8X1wJAx5+17yvKEujOAnOAxZlDPg8
5Hu9C33qdtY5QYoBnHbhFRw5GmW37Rk8q2DA9qvbmBvRvK7Ca52rGDAi/T44
Gj1dKLyHU8OAJscjP93lMX7+LMmufc0A+3Wa5y6hPde+0jtdzwDn5/FfxBVo
VGjkFl7ZJgbExm25txedECkgUN2C8a28d3kF+vpve2PnNgZ4h7vzrFmMf9+V
XEPrZMAioS1n4tH/Xspeze/C8yRk1sgq0qgzuTI3LT9iPVjrOpeNfsr62jPZ
wwC/n9YqO5Vo1BfuwjM3PzNgyVeTq7NoJcEG61VfGMCjKWv/TJlGzTsdDqkZ
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
6s4milzV9HL1gwXuZeR8hA3/cnncgYO2L+P0eUURtuCSqw/hp6f7dtFeY/4x
Iedb4b5Zjgt34fmX6j3fYI7wG3F6zbivzo08HJtozL0fwxJ74Htue5ol4cnC
6WDPFvSD9uEyfZg1s9uG9w3yfRQj2RWucNOWSIf/DR45FgPvK133bFMr8nZQ
/x4mLCSVavEGdvE+d3UI3mJ3t9WljSL9zrdLvsJ6bKYaLO14/hlhRQ5NGvPi
g7jL8fBi8bYpCdiHK5gp30ER3q17XRXgmqRVA3Vwd8To523wn0WnJg504vzt
dnt5AP7S7D80BStnBl8/BVvGGNeFdWE/JmX+XoM13w9dW/WWIr0frqkWwDeV
dumVwR8rjBNfwbclrvQbd1NkICo39Dscw0hzHoLZL9xiiG9GvatI6jrfQxHd
0HhxPfivh58y7R3mE55rxlZwwRMzrxz4Iof6gg1cISxxR+c91q/EW+QsvGby
Q2U7XNlvZ5QM89bkVh/rxbzK3CCdDVf+Pl/I0od++JveXwM/5rILjoOpl98T
O+Fccwv9Df0UualeWjsKO+q7fq+Ge3O8LLi0MA9sywix/EARfyENgdVw7H12
zrH/vOtRqi78dCTWPfAj6nm64TEHWNjUtlb0E15/n2JyCOyt4bCoAM5kXswr
hDkWsmX0BpCvvC7XtcMCE+paXfDJ/NsPOmBpR9FNxwdxn8bz98/CK7N3rVw0
hP1c8TqMS5vG5OLq+x4Ld+rY6K2GFZreFKz/jHxCHlxXg//3+VwUedphtt4U
7k6ZGzT/gvlOwD36GLxXQfPgV7hobFtnCMypOFPn+xV5M/eVczac+k5FROgb
1nvmT/BLmO46Z5oFs0udDvgBPxfefXbTMNbr6k0bcR0aU5VfLeQVfMQqW08S
3hX46KLDCPoxZ/H2/6yf1eM0DXumHpfbChemZaqFjmK+nNcT8YQdUyQm6WMU
sRpcluQDJ1Zvjy2CM2On7yfCvYoyUtvGcT+O6PMUwCL8Tald8L7LjPYaONBD
lcN1Aut/80VHL1zl67LvL+w17/bnF1ynf+J61CT6h6HKR2Fd1IMho1LJ75iX
3JRNNsJTblz1j+D40r45a3hy4k6N4Q+KxB3s/BYAH/JRzO2FswtsFmXCCuJ3
fU5OIY9zV+z7z7c7xNXZflJk+uXVZXWwa2lwXyzMHfq5ugvOrZo6KT2N+Xhp
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
e44wCM+TRbp8+2jM/wPni4Jd
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.2795904876068539, -4.636326825511204}, 
     PlotRange -> {{-0.15835213457379338`, 
      7.600902459542082}, {-4.623829959623844, -3.8490242746075496`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, 
     AxesOrigin -> {-0.2795904876068539, -4.636326825511204}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
     FormBox["\"Inverse power of two gradient smoothing function with various \
length amounts\"", TraditionalForm], 
     PlotRange -> {{-0.15835213457379338`, 
      7.600902459542082}, {-4.623829959623844, -3.8490242746075496`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        GridBox[{{"\"Smoothness 6\""}, {"\"Final error: 0.0102237\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Panel\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6835522287813387`*^9, 3.6835522994604845`*^9}, {
   3.6835523546092763`*^9, 3.683552364358779*^9}, {3.683552462688371*^9, 
   3.683552485568639*^9}, 3.6835526012052774`*^9, 3.6835526663597407`*^9, {
   3.6835530266560855`*^9, 3.683553093436634*^9}, 3.683553239940746*^9, 
   3.683553294545171*^9, {3.68355339899585*^9, 3.683553436228687*^9}, 
   3.6835534987213736`*^9, 3.6835535373231273`*^9, 3.6835536895046444`*^9, {
   3.6835540376398745`*^9, 3.6835540536205335`*^9}, 3.683554156537191*^9, 
   3.683554796294816*^9, 3.68358434927608*^9, 3.6835865584572477`*^9, {
   3.6835865902404494`*^9, 3.683586613778156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RecordedComparisonData", "[", 
        RowBox[{"[", 
         RowBox[{"sm", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"RecordedComparisonData", "[", 
         RowBox[{"[", 
          RowBox[{"sm", ",", "4"}], "]"}], "]"}], "/", "1000."}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Length of smoothing function\>\"", ",", 
      "\"\<Corrections / Iterations\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Correction Amounts of P2 Smoothing Function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.683552682523522*^9, 3.683552775077264*^9}, {
  3.6835528142403884`*^9, 3.6835528380512714`*^9}, {3.6835528788905144`*^9, 
  3.683552879876172*^9}, {3.68355293815705*^9, 3.683552947575333*^9}, {
  3.683554803332513*^9, 3.683554804964599*^9}, {3.683557032347498*^9, 
  3.683557032427553*^9}, {3.6835864511898894`*^9, 3.683586451194891*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length of smoothing function\"", TraditionalForm], 
    FormBox["\"Corrections / Iterations\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
   "\"Correction Amounts of P2 Smoothing Function with various length amounts\
\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683552697318392*^9, 3.6835527753544464`*^9}, 
   3.6835528434338627`*^9, {3.683552880078307*^9, 3.6835529050449634`*^9}, {
   3.683552939469926*^9, 3.683552947985607*^9}, 3.6835530342051215`*^9, 
   3.683553296462451*^9, 3.683554162734328*^9, 3.683554362881834*^9, {
   3.6835547942304416`*^9, 3.6835548062584624`*^9}, 3.683586570042976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"Data", "\[IndentingNewLine]", "TrueParams"}], "Input",
 CellChangeTimes->{{3.683554807958602*^9, 3.683554808228776*^9}, {
  3.6835549504336414`*^9, 3.6835549905783253`*^9}, {3.683584462578661*^9, 
  3.6835844653785295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.0004559651178642084`"}], ",", 
   RowBox[{"-", "0.0004527355694247811`"}], ",", 
   RowBox[{"-", "0.00044887892863467946`"}], ",", 
   RowBox[{"-", "0.00044430933979122217`"}], ",", 
   RowBox[{"-", "0.0004389316437836965`"}], ",", 
   RowBox[{"-", "0.0004326406072648534`"}], ",", 
   RowBox[{"-", "0.00042532011698139134`"}], ",", 
   RowBox[{"-", "0.00041684234233190333`"}], ",", 
   RowBox[{"-", "0.00040706687031212313`"}], ",", 
   RowBox[{"-", "0.00039583981828190923`"}], ",", 
   RowBox[{"-", "0.0003829929314693848`"}], ",", 
   RowBox[{"-", "0.00036834267384045746`"}], ",", 
   RowBox[{"-", "0.00035168932293450626`"}], ",", 
   RowBox[{"-", "0.00033281608152993574`"}], ",", 
   RowBox[{"-", "0.00031148822158999414`"}], ",", 
   RowBox[{"-", "0.00028745227888615766`"}], ",", 
   RowBox[{"-", "0.00026043532004312893`"}], ",", 
   RowBox[{"-", "0.00023014430753905168`"}], ",", 
   RowBox[{"-", "0.0001962655924734026`"}], ",", 
   RowBox[{"-", "0.00015846456973334888`"}], ",", 
   RowBox[{"-", "0.00011638553560112074`"}], ",", 
   RowBox[{"-", "0.00006965179390804183`"}], ",", 
   RowBox[{"-", "0.00001786606361718538`"}], ",", "0.000039388751727846525`", 
   ",", "0.00010254836384572945`", ",", "0.00017206539068136606`", ",", 
   "0.0002484070499909765`", ",", "0.0003320521556355369`", ",", 
   "0.00042348730408842404`", ",", "0.0005232021248247174`", ",", 
   "0.0006316834530729964`", ",", "0.0007494082667824837`", ",", 
   "0.0008768352114945205`", ",", "0.0010143945170129718`", ",", 
   "0.0011624760882493904`", ",", "0.0013214155292842525`", ",", 
   "0.0014914778344479523`", ",", "0.0016728384530032816`", ",", 
   "0.0018655614047323901`", ",", "0.002069574092334268`", ",", 
   "0.0022846384229773175`", ",", "0.0025103178155975437`", ",", 
   "0.0027459396325812463`", ",", "0.002990552534344931`", ",", 
   "0.0032428782130812773`", ",", "0.0035012569176758076`", ",", 
   "0.003763586135659806`", ",", "0.004027251750252937`", ",", 
   "0.00428905094133247`", ",", "0.004545106048890243`", ",", 
   "0.004790768566638829`", ",", "0.005020512382442961`", ",", 
   "0.005227815331838257`", ",", "0.0054050280818497345`", ",", 
   "0.00554322931558546`", ",", "0.005632066144780894`", ",", 
   "0.0056595786389312145`", ",", "0.0056120073274236555`", ",", 
   "0.0054735825069749935`", ",", "0.00522629417278437`", ",", 
   "0.004849641390542407`", ",", "0.004320359940569554`", ",", 
   "0.0036121270980660606`", ",", "0.002695242468366846`", ",", 
   "0.0015362838773295552`", ",", "0.0000977374292145381`", ",", 
   RowBox[{"-", "0.0016623990070738315`"}], ",", 
   RowBox[{"-", "0.00379103943177023`"}], ",", 
   RowBox[{"-", "0.006340460776763405`"}], ",", 
   RowBox[{"-", "0.009368781409430274`"}], ",", 
   RowBox[{"-", "0.01294046672940733`"}], ",", 
   RowBox[{"-", "0.01712686107472319`"}], ",", 
   RowBox[{"-", "0.022006744633846602`"}], ",", 
   RowBox[{"-", "0.027666913444063378`"}], ",", 
   RowBox[{"-", "0.034202779831311036`"}], ",", 
   RowBox[{"-", "0.04171898979795488`"}], ",", 
   RowBox[{"-", "0.05033005287728134`"}], ",", 
   RowBox[{"-", "0.060160978829429786`"}], ",", 
   RowBox[{"-", "0.07134791423410188`"}], ",", 
   RowBox[{"-", "0.08403877051986117`"}], ",", 
   RowBox[{"-", "0.09839383323541823`"}], ",", 
   RowBox[{"-", "0.11458634039015787`"}], ",", 
   RowBox[{"-", "0.13280301544229123`"}], ",", 
   RowBox[{"-", "0.15324453796408619`"}], ",", 
   RowBox[{"-", "0.17612593213287484`"}], ",", 
   RowBox[{"-", "0.20167684994966772`"}], ",", 
   RowBox[{"-", "0.2301417224372972`"}], ",", 
   RowBox[{"-", "0.2617797479773945`"}], ",", 
   RowBox[{"-", "0.29686468236771624`"}], ",", 
   RowBox[{"-", "0.33568439007312395`"}], ",", 
   RowBox[{"-", "0.3785401104566538`"}], ",", 
   RowBox[{"-", "0.42574538646067295`"}], ",", 
   RowBox[{"-", "0.477624596208199`"}], ",", 
   RowBox[{"-", "0.5345110202546768`"}], ",", 
   RowBox[{"-", "0.5967443686817117`"}], ",", 
   RowBox[{"-", "0.6646676828251944`"}], ",", 
   RowBox[{"-", "0.7386235161075972`"}], ",", 
   RowBox[{"-", "0.8189492871329396`"}], ",", 
   RowBox[{"-", "0.9059716858371759`"}], ",", 
   RowBox[{"-", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683554808425911*^9, {3.6835549521868086`*^9, 3.683554990799472*^9}, 
   3.6835843561406565`*^9, 3.683584465553646*^9, 3.683584575804551*^9, 
   3.6835865761850734`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.73575`", ",", "9.87798`", ",", 
   RowBox[{"-", "8.94354`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683554808425911*^9, {3.6835549521868086`*^9, 3.683554990799472*^9}, 
   3.6835843561406565`*^9, 3.683584465553646*^9, 3.683584575804551*^9, 
   3.683586576192078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"gFunc", "@@", "params"}], ",", "params"}], "]"}]}]}], 
          "]"}]}]}]}], ";"}], "\[IndentingNewLine]", ")"}], "//", 
    "AbsoluteTiming"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6835866655576925`*^9, 3.6835866813422213`*^9}, {
  3.6835867365570545`*^9, 3.683586821699851*^9}}],

Cell[BoxData["0.02183979959554558`"], "Output",
 CellChangeTimes->{{3.6835866704629655`*^9, 3.683586681581381*^9}, 
   3.6835867395220337`*^9, {3.6835867696481295`*^9, 3.6835868169386744`*^9}}],

Cell[BoxData["0.006559042052257219`"], "Output",
 CellChangeTimes->{{3.6835866704629655`*^9, 3.683586681581381*^9}, 
   3.6835867395220337`*^9, {3.6835867696481295`*^9, 3.6835868169476805`*^9}}]
}, Open  ]]
},
WindowSize->{1600, 814},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 280, 6, 90, "Input"],
Cell[841, 28, 4567, 88, 710, "Input",
 InitializationCell->True],
Cell[5411, 118, 36939, 787, 2013, "Input",
 InitializationCell->True],
Cell[42353, 907, 2540, 52, 170, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[44918, 963, 10254, 154, 153, "Input",
 InitializationCell->True],
Cell[55175, 1119, 2163, 40, 369, "Output"]
}, Open  ]],
Cell[57353, 1162, 12643, 232, 508, "Input"],
Cell[69999, 1396, 1551, 31, 250, "Input"],
Cell[CellGroupData[{
Cell[71575, 1431, 3822, 96, 310, "Input"],
Cell[75400, 1529, 528, 11, 19, "Message"],
Cell[75931, 1542, 531, 11, 19, "Message"],
Cell[76465, 1555, 788, 15, 24, "Message"],
Cell[77256, 1572, 801, 15, 24, "Message"],
Cell[78060, 1589, 745, 14, 24, "Message"],
Cell[78808, 1605, 529, 11, 19, "Message"],
Cell[79340, 1618, 3815, 59, 74, "Message"],
Cell[83158, 1679, 540, 11, 19, "Message"],
Cell[83701, 1692, 486, 10, 19, "Message"],
Cell[84190, 1704, 4033, 79, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88260, 1788, 1092, 24, 90, "Input"],
Cell[89355, 1814, 606, 9, 28, "Output"],
Cell[89964, 1825, 61589, 1241, 188, "Output"],
Cell[151556, 3068, 66731, 1326, 188, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218324, 4399, 950, 15, 29, "Input"],
Cell[219277, 4416, 120724, 1987, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340038, 6408, 2921, 62, 230, "Input"],
Cell[342962, 6472, 45431, 784, 334, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388430, 7261, 1436, 35, 130, "Input"],
Cell[389869, 7298, 1330, 34, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391236, 7337, 239, 3, 50, "Input"],
Cell[391478, 7342, 4429, 84, 124, "Output"],
Cell[395910, 7428, 314, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396261, 7440, 762, 20, 70, "Input"],
Cell[397026, 7462, 193, 2, 28, "Output"],
Cell[397222, 7466, 194, 2, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
