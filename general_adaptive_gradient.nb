(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    380173,       7228]
NotebookOptionsPosition[    378489,       7170]
NotebookOutlinePosition[    378862,       7186]
CellTagsIndexPosition[    378819,       7183]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"**", 
   RowBox[{
   "*", "\[IndentingNewLine]", "TEMPLATE", " ", "FOR", " ", "ITERATIVE", " ", 
    "OPTIMIZATION", " ", "ALGORITHMS", "\[IndentingNewLine]", "Zicheng", " ", 
    "Gao"}]}], "\[IndentingNewLine]", " ", "****)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "Settings"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InitIterationSettings", "[", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Controls", " ", "-", " ", 
        RowBox[{
        "zero", " ", "fps", " ", "means", " ", "that", " ", "there", " ", 
         "is", " ", "NO", " ", "DELAY"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"doPrint", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPoint", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doGraph", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doWarn", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doSpace", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"showMistakes", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fps", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Init", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dir", "=", 
        RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"err", "=", 
        RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"*", " ", "Adaptivity"}], " ", "**)"}], "\[IndentingNewLine]", 
       RowBox[{"errorRatio", "=", "1.0"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "In", " ", "what", " ", "ratio", " ", "of", " ", "current", " ", 
         "error", " ", "to", " ", "previous", " ", "error", " ", "should", 
         " ", "it", " ", "be", " ", "considered", " ", "increasing"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"boostRatio", "=", "1.1"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Impatience", "'"}], " ", "Multiplier", " ", "to", " ", 
         "increase", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "not", " ", "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"refineRatio", "=", "0.95"}], ";", 
       RowBox[{"(*", 
        RowBox[{"'", 
         RowBox[{"Caution", "'"}], " ", "Multiplier", " ", "to", " ", 
         "decrease", " ", "factor", " ", "when", " ", "error", " ", "is", " ",
          "increasing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxRefines", "=", "1000"}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Give", " ", "up", " ", "refining", " ", "if", " ", "refined", " ", 
         "too", " ", "many", " ", "times", " ", "in", " ", "a", " ", "row"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Acceleration", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AccelBoost", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelRefine", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelAmt", "=", "0.01"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Tracker", " ", "values"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"historyAmt", "=", "300"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Display", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dispGradientRange", "=", "1."}], ";"}], "\[IndentingNewLine]",
       ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.683453669707604*^9, 3.6834536754316063`*^9}, {
  3.683475391860078*^9, 3.683475415478833*^9}, {3.6834763677667036`*^9, 
  3.68347638801742*^9}, {3.6834766625609846`*^9, 3.683476678659403*^9}, {
  3.6834819022317977`*^9, 3.683481908458951*^9}, {3.6834828069823236`*^9, 
  3.6834828150106783`*^9}, {3.683506294653036*^9, 3.6835062964742503`*^9}, {
  3.683541039822339*^9, 3.6835410400745077`*^9}, {3.6835413793833466`*^9, 
  3.683541380017769*^9}, {3.6835430788782673`*^9, 3.683543078980337*^9}, {
  3.6835443377746286`*^9, 3.6835443442829695`*^9}, {3.6835448579666367`*^9, 
  3.683544858642089*^9}, {3.683551184152491*^9, 3.6835511849680333`*^9}, {
  3.683554222110929*^9, 3.6835542236829777`*^9}, {3.6835860643398304`*^9, 
  3.6835860661930656`*^9}, {3.683586115472941*^9, 3.683586118149725*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{
     "paramVariance_", ",", "manualTrueParams_", ",", "noiseFactor_", ",", 
      " ", "noiseDistribution_", ",", "forceData_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"eFunc", ",", "gFunc", ",", "params"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParamVariance", "=", "paramVariance"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "we", " ", "are", " ", "forcing", " ", "data"}], 
        ",", " ", 
        RowBox[{"use", " ", "data"}], ",", " ", 
        RowBox[{"otherwise", " ", "generate", " ", "data"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "forceData", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Data", "=", "forceData"}], ";", "\[IndentingNewLine]", 
         RowBox[{"DataLength", "=", 
          RowBox[{"Length", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Range", "@", "DataLength"}]}], "/", 
           RowBox[{"N", "@", "SamplingRate"}]}]}], ";"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Else", " ", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SamplingSet", "=", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Range", "@", "DataLength"}]}], "/", 
           RowBox[{"N", "@", "SamplingRate"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"TrueParams", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "manualTrueParams", "]"}], ">", "0"}], 
            ",", "manualTrueParams", ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "paramVariance"}], ",", "paramVariance"}], "}"}],
               ",", "varamt"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Data", " ", "Generation"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NoiselessData", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Fitfunction", "@@", " ", "#"}], "&"}], ")"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{"TrueParams", ",", " ", "#"}], "]"}], "&"}], " ", "/@",
               "SamplingSet"}], ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AddNoise", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "+", 
             RowBox[{"noiseFactor", "*", 
              RowBox[{"RandomVariate", "[", "noiseDistribution", "]"}]}]}], 
            ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Data", "=", 
          RowBox[{"AddNoise", "/@", "NoiselessData"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"doNormalize", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DataMax", "=", 
          RowBox[{"Max", "@", 
           RowBox[{"Abs", "@", "Data"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Data", "/=", "DataMax"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"DataMax", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Prep", " ", "gradient"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Unique", "[", "\"\<p\>\"", "]"}], ",", 
         RowBox[{"{", "varamt", "}"}]}], "]"}]}], ";", 
      RowBox[{"paramh", "=", 
       RowBox[{"Hold", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Objective", " ", "and", " ", "Gradient", " ", "functions"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"{", "vars", "}"}], ",", "#"}], "]"}]}], ")"}], 
                   "&"}], "/@", "SamplingSet"}], ")"}], "-", "Data"}], ")"}], 
              "2"], "]"}], "]"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"eFunc", "@@", "params"}], ",", "params"}], "]"}]}]}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hFunc", "=", 
       RowBox[{"paramh", "/.", 
        RowBox[{
         RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"gFunc", "@@", "params"}], ",", "params"}], "]"}]}]}], 
          "]"}]}]}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Global"}], " ", "Iteration", " ", 
    RowBox[{"Reset", " ", "/", " ", "Initialize"}]}], " ", 
   "***)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitIterationData", "[", 
    RowBox[{"factorx_", ",", "manualParams_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totalIter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TotalRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"*", " ", "Modification", " ", "Values"}], " ", "**)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"factor", "=", "factorx"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dirs", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "varamt"}], "]"}], ",", "Smoothness"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"dirX", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prevErr", "=", 
      RowBox[{"-", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "History", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"iterParams", "=", 
      RowBox[{"initParams", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "manualParams", "]"}], ">", "0"}], ",", 
         "manualParams", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ParamVariance"}], ",", "ParamVariance"}], "}"}], 
           ",", "varamt"}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugParams", "=", 
      RowBox[{"{", "iterParams", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dir", "=", 
      RowBox[{"gFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugErr", "=", 
      RowBox[{"{", "err", "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinePlot", "[", 
    RowBox[{"points_", ",", " ", "size_", ",", "amount_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"amount", ">", "0"}], "&&", 
           RowBox[{"size", ">", "amount"}]}], ",", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "amount"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "@", 
      RowBox[{"Line", "@", "points"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReportIteration", "[", "i_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], " ", "&&", " ", 
       "doPrint"}], ",", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<next dir:\>\"", ",", "dir", ",", "\"\<\\nerr:\>\"", ",", "err", 
         ",", "\"\<\\nparams:\>\"", ",", "iterParams", ",", 
         "\"\<\\niteration:\>\"", ",", "i"}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayGradient", "[", 
     RowBox[{"xV_", ",", "yV_"}], "]"}], ":=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"eFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "->", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "xV", "]"}], "]"}], ",", 
            RowBox[{"iterParams", "[", 
             RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], ",", 
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "xV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"iterParams", "[", 
                RowBox[{"[", "yV", "]"}], "]"}], "-", 
               RowBox[{"factor", "*", 
                RowBox[{"dir", "[", 
                 RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Realtime", " ", "monitor", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"xV_", ",", "yV_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"gFunc", " ", "@@", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"iterParams", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xV", "\[Rule]", "x"}], ",", 
             RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "xV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "-", "dispGradientRange"}], ",", 
         RowBox[{
          RowBox[{"iterParams", "[", 
           RowBox[{"[", "yV", "]"}], "]"}], "+", "dispGradientRange"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
          RowBox[{"z", "\[LessEqual]", "\[Epsilon]"}]}], "]"}]}], ",", " ", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "xV", "]"}], "]"}], ",", 
           RowBox[{"iterParams", "[", 
            RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "xV", "]"}], "]"}], ",", 
             RowBox[{"iterParams", "[", 
              RowBox[{"[", "yV", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "xV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "xV", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"iterParams", "[", 
               RowBox[{"[", "yV", "]"}], "]"}], "-", 
              RowBox[{"factor", "*", 
               RowBox[{"dir", "[", 
                RowBox[{"[", "yV", "]"}], "]"}]}]}]}], "}"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Visualize", "[", "]"}], ":=", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Data vs Function\>\"", ",", "\"\<Parameter Space\>\"", ",", 
          "\"\<Error over iterations\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"DataMax", "*", 
                 RowBox[{"(", 
                  RowBox[{"Fitfunction", "@@", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}]}], "&"}],
                "/@", "SamplingSet"}], ",", 
              RowBox[{"DataMax", "*", "Data"}]}], "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotLegends", "->", "None"}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"If", "[", 
           RowBox[{"doPoint", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"varamt", "\[Equal]", "3"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"doGraph", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"1", ",", "2"}], "]"}], ",", 
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"2", ",", "3"}], "]"}], ",", 
                  RowBox[{"displayGradient", "[", 
                   RowBox[{"3", ",", "1"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"LinePlot", "[", 
                 RowBox[{"debugParams", ",", "totalIter", ",", "historyAmt"}],
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<Non-3 dimensions\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<Disabled\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"doEPlot", ",", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{
              RowBox[{"DataMax", "*", "debugErr"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\"\<Disabled\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Parameters, nGrad, dir, Delta\>\"", ",", 
          "\"\<Iterations, factor, corrections\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{"iterParams", ",", 
             RowBox[{"-", "dir"}], ",", 
             RowBox[{
              RowBox[{"-", "factor"}], "*", "dir"}], ",", 
             RowBox[{
              RowBox[{"-", "factor"}], "*", 
              RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"totalIter", ",", "factor", ",", "TotalRefines"}], 
              "}"}], ",", 
             RowBox[{"ProgressIndicator", "[", 
              FractionBox["ConsecRefines", "maxRefines"], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DataMax", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"Total", "[", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                     "SamplingSet"}], ")"}], "-", "Data"}], ")"}], "2"], 
                 "]"}], 
                RowBox[{"DataLength", "-", "varamt"}]], ")"}], "0.5"]}], ",", 
            "prevErr"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefineFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["refineRatio", "AccelRefine"]}], ";", 
     RowBox[{"ConsecRefines", "++"}], ";", 
     RowBox[{"TotalRefines", "++"}], ";", 
     RowBox[{"AccelRefine", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelBoost", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BoostFactor", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"factor", "*=", 
      SuperscriptBox["boostRatio", "AccelBoost"]}], ";", 
     RowBox[{"prevErr", "=", "err"}], ";", 
     RowBox[{"ConsecRefines", "=", "0"}], ";", 
     RowBox[{"AccelBoost", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelRefine", "=", "1."}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddToHistory", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"debugParams", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugParams", ",", "iterParams"}], "]"}]}], ";", 
     RowBox[{"debugErr", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugErr", ",", "err"}], "]"}]}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToSpacedString", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"str", ",", 
     RowBox[{"StringDrop", "[", 
      RowBox[{
       RowBox[{"StringJoin", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< \>\""}], ")"}], 
           "&"}], "/@", "str"}], ")"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindMax", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Max", "@", "list"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RecoverFrequency", "[", 
    RowBox[{"data_", ",", "len_", ",", "rate_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "-", "2", "+", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FindMax", "@", 
              RowBox[{"Abs", "@", 
               RowBox[{"Fourier", "[", 
                RowBox[{
                 RowBox[{"data", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{"2", "I", " ", "\[Pi]", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", "2"}], ")"}], 
                    RowBox[{
                    RowBox[{"N", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Range", "@", "len"}], "-", "1"}], ")"}]}], "/", 
                    "len"}]}], "]"}]}], ",", 
                 RowBox[{"FourierParameters", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"2", "/", "len"}]}], "}"}]}]}], "]"}]}]}], "-", 
             "1"}], ")"}], "/", "len"}]}]}], ")"}], "*", "2", "\[Pi]", "*", 
       RowBox[{"rate", "/", "len"}]}], "]"}], "&"}], "@", 
    RowBox[{"FindMax", "@", 
     RowBox[{"Abs", "@", 
      RowBox[{"Fourier", "@", "data"}]}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6815621708931227`*^9, 3.681562330352498*^9}, 
   3.681562497040437*^9, {3.6815628024075775`*^9, 3.681562861147148*^9}, {
   3.681563505498472*^9, 3.6815635060864873`*^9}, {3.681564204873289*^9, 
   3.681564205665312*^9}, {3.681564238331339*^9, 3.681564377763912*^9}, {
   3.6815644138774757`*^9, 3.6815644292445745`*^9}, {3.6815644878469906`*^9, 
   3.681564588196496*^9}, {3.6815646717885714`*^9, 3.6815646780740185`*^9}, {
   3.681564713541422*^9, 3.681564713797474*^9}, {3.6815678952129745`*^9, 
   3.681567901730054*^9}, {3.6815679945018387`*^9, 3.6815680009509993`*^9}, {
   3.681568046370693*^9, 3.681568069228405*^9}, {3.6815681126606717`*^9, 
   3.681568302189334*^9}, {3.681568406977435*^9, 3.681568559202245*^9}, {
   3.681568624287523*^9, 3.681568687110731*^9}, {3.6815687298876343`*^9, 
   3.6815687304258556`*^9}, {3.6815687637696657`*^9, 
   3.6815689406475735`*^9}, {3.681569085676959*^9, 3.681569112045782*^9}, {
   3.6815691668767204`*^9, 3.6815691719411526`*^9}, {3.6815694358957815`*^9, 
   3.6815694710235147`*^9}, {3.6815695217459598`*^9, 
   3.6815696667020826`*^9}, {3.6815697393237906`*^9, 3.681569799451787*^9}, {
   3.681569841287245*^9, 3.681569850879549*^9}, {3.681570039047075*^9, 
   3.681570088500207*^9}, {3.6815711382830825`*^9, 3.6815711500490465`*^9}, {
   3.6815713958243575`*^9, 3.6815713987967715`*^9}, {3.681571651690309*^9, 
   3.6815717326270823`*^9}, {3.681571898861825*^9, 3.681571928476057*^9}, {
   3.6815724885189953`*^9, 3.6815725199839554`*^9}, {3.6815726352377763`*^9, 
   3.6815727468631196`*^9}, {3.681572821962291*^9, 3.6815728347201214`*^9}, {
   3.68157295825967*^9, 3.681573001583455*^9}, {3.681573127364339*^9, 
   3.681573136317957*^9}, {3.68157330345288*^9, 3.6815733771014705`*^9}, {
   3.6815734161908703`*^9, 3.6815734168791714`*^9}, 3.6815735440325766`*^9, {
   3.68157358016744*^9, 3.68157358217618*^9}, {3.6815736253621693`*^9, 
   3.6815736295029173`*^9}, {3.6815738429116826`*^9, 
   3.6815738481884356`*^9}, {3.6815738982460203`*^9, 
   3.6815739593413076`*^9}, {3.68158214733538*^9, 3.6815821526995497`*^9}, {
   3.6815823844986544`*^9, 3.6815824054864826`*^9}, {3.6815824431424513`*^9, 
   3.6815826521113873`*^9}, {3.681582727235224*^9, 3.681582879236921*^9}, {
   3.681582932226347*^9, 3.681582992336873*^9}, {3.6815830598288555`*^9, 
   3.6815830617439795`*^9}, {3.681583092533844*^9, 3.6815830959236803`*^9}, {
   3.6815833722720833`*^9, 3.681583493212161*^9}, {3.681583605117122*^9, 
   3.6815836054494004`*^9}, {3.6815840003979025`*^9, 3.68158400184723*^9}, {
   3.6815840403408365`*^9, 3.6815840878485966`*^9}, {3.681584569134416*^9, 
   3.68158457187665*^9}, {3.681584680540204*^9, 3.681584680884739*^9}, {
   3.68158485376423*^9, 3.6815848548258705`*^9}, {3.6815850206636624`*^9, 
   3.681585021053091*^9}, {3.681585083443123*^9, 3.6815850897336245`*^9}, {
   3.6815851822151766`*^9, 3.6815851853968716`*^9}, {3.6815854451033382`*^9, 
   3.6815854479667807`*^9}, {3.681590686564697*^9, 3.6815906958723764`*^9}, {
   3.681590736721639*^9, 3.681590794978259*^9}, {3.681596566755397*^9, 
   3.6815965699455237`*^9}, {3.681603359934925*^9, 3.6816033694795704`*^9}, {
   3.6816035521915236`*^9, 3.681603552737888*^9}, {3.681603699106743*^9, 
   3.6816037052072525`*^9}, {3.681603941321679*^9, 3.6816039418400245`*^9}, {
   3.6816039943817463`*^9, 3.6816039948670697`*^9}, {3.6816040676890893`*^9, 
   3.6816040733506956`*^9}, {3.6816041113588305`*^9, 3.681604125647503*^9}, {
   3.681604159646594*^9, 3.681604230239973*^9}, 3.6816043214220285`*^9, {
   3.681604397409239*^9, 3.6816043993275185`*^9}, {3.6816044366767387`*^9, 
   3.681604443906561*^9}, {3.6816045017122445`*^9, 3.6816045024397297`*^9}, {
   3.6816475221392946`*^9, 3.68164754050082*^9}, 3.681647987229904*^9, {
   3.6816480232892017`*^9, 3.681648208200461*^9}, {3.6816482411758256`*^9, 
   3.6816482815531654`*^9}, {3.681648491473945*^9, 3.6816484959462447`*^9}, {
   3.681648781538802*^9, 3.6816488050024595`*^9}, {3.681649004645697*^9, 
   3.6816490205770655`*^9}, {3.681649122387348*^9, 3.6816491851514544`*^9}, {
   3.681652758744893*^9, 3.6816527610052285`*^9}, {3.6816529879131775`*^9, 
   3.6816530249518147`*^9}, {3.681653312277938*^9, 3.681653462352562*^9}, {
   3.6816535110093822`*^9, 3.6816535368018627`*^9}, {3.681653580859788*^9, 
   3.6816536148198957`*^9}, {3.6816538214525537`*^9, 3.68165385922288*^9}, {
   3.681653979449232*^9, 3.6816539848178177`*^9}, {3.6816544838783803`*^9, 
   3.6816545077942157`*^9}, {3.6816554625155334`*^9, 3.681655463061796*^9}, {
   3.6816569829339094`*^9, 3.6816570470714865`*^9}, {3.681658433926193*^9, 
   3.681658434074292*^9}, {3.6816586282599716`*^9, 3.6816586622370815`*^9}, {
   3.681659804985428*^9, 3.6816598054017067`*^9}, 3.681724521037159*^9, 
   3.6817247737398834`*^9, {3.681725049850954*^9, 3.6817250542918463`*^9}, {
   3.6817257095161085`*^9, 3.681725712780613*^9}, {3.681725994533414*^9, 
   3.681725999538206*^9}, {3.6817265750936427`*^9, 3.681726577329742*^9}, {
   3.681726609100688*^9, 3.681726610747135*^9}, {3.6817344038238297`*^9, 
   3.6817344071070213`*^9}, {3.681737918367159*^9, 3.6817379195629563`*^9}, {
   3.6817392466712227`*^9, 3.681739247062479*^9}, {3.681739635988923*^9, 
   3.6817396402727823`*^9}, {3.681739747079029*^9, 3.6817397781367493`*^9}, {
   3.681739861167135*^9, 3.6817398712318487`*^9}, 3.6817400131845436`*^9, {
   3.681740081319996*^9, 3.6817400986655645`*^9}, {3.6817401731463575`*^9, 
   3.681740173921876*^9}, {3.681741054818036*^9, 3.6817410630014954`*^9}, {
   3.681741396180751*^9, 3.681741398243129*^9}, {3.6817414314682913`*^9, 
   3.681741442898916*^9}, {3.6825142858697195`*^9, 3.682514297896387*^9}, {
   3.6828709618425407`*^9, 3.6828709787118196`*^9}, {3.6828710151744833`*^9, 
   3.6828710177548676`*^9}, {3.682871056451414*^9, 3.6828710727978697`*^9}, 
   3.6828726919252305`*^9, {3.6828727955305076`*^9, 3.6828728555223036`*^9}, {
   3.682873378546649*^9, 3.6828734076373024`*^9}, {3.682873520868531*^9, 
   3.682873559173211*^9}, {3.6828736112941427`*^9, 3.682873752044176*^9}, 
   3.682873790717617*^9, {3.682873910650232*^9, 3.6828739437132616`*^9}, {
   3.6828739933613586`*^9, 3.682873993735608*^9}, {3.682874050554145*^9, 
   3.6828740794894342`*^9}, {3.6828742201533623`*^9, 3.682874265329564*^9}, {
   3.682874298319532*^9, 3.6828745143659678`*^9}, {3.682874570277046*^9, 
   3.682874596047637*^9}, {3.682874636112135*^9, 3.6828746733459735`*^9}, {
   3.6828747254820137`*^9, 3.682874850242854*^9}, {3.6828748812823844`*^9, 
   3.6828749723224497`*^9}, {3.682875009751096*^9, 3.682875121152584*^9}, {
   3.6828751689186645`*^9, 3.682875281614401*^9}, {3.6828753555464134`*^9, 
   3.6828753968699646`*^9}, {3.682876304769292*^9, 3.682876365490773*^9}, {
   3.6828763966515465`*^9, 3.682876430613188*^9}, {3.6828767330169744`*^9, 
   3.6828767574752793`*^9}, {3.682876864445448*^9, 3.682876870552519*^9}, {
   3.682877651198309*^9, 3.682877664183419*^9}, {3.682877798475026*^9, 
   3.682877816052747*^9}, {3.6828781436847534`*^9, 3.682878165585703*^9}, {
   3.6828782135244203`*^9, 3.682878224199538*^9}, {3.6828797475700393`*^9, 
   3.682879998255912*^9}, {3.68288009267686*^9, 3.682880143406395*^9}, {
   3.6828801903913555`*^9, 3.6828802734871845`*^9}, {3.6828803052799473`*^9, 
   3.68288041799209*^9}, {3.6828805392829494`*^9, 3.6828806302816153`*^9}, {
   3.6828808568225594`*^9, 3.682880951656781*^9}, {3.682881043212818*^9, 
   3.6828812745349383`*^9}, {3.6828821517986603`*^9, 3.682882174328681*^9}, {
   3.6828822145555*^9, 3.682882220983786*^9}, {3.6828824057689743`*^9, 
   3.6828824251168723`*^9}, {3.6828824972309494`*^9, 
   3.6828825619140596`*^9}, {3.682882979695325*^9, 3.6828830600888634`*^9}, {
   3.682883195068556*^9, 3.6828832043139057`*^9}, {3.6830396849966636`*^9, 
   3.6830397732688446`*^9}, {3.6830399066630836`*^9, 3.683039913180719*^9}, {
   3.6830399483475113`*^9, 3.683039948975526*^9}, {3.683040242086508*^9, 
   3.6830402424345293`*^9}, {3.683040324076639*^9, 3.683040324392643*^9}, {
   3.683041010420825*^9, 3.6830410349325366`*^9}, 3.6830411257718563`*^9, {
   3.6830417513831806`*^9, 3.6830417517711535`*^9}, {3.6830418588510437`*^9, 
   3.6830418977140875`*^9}, {3.683041942952117*^9, 3.683041985756014*^9}, {
   3.6830485694199595`*^9, 3.683048569545044*^9}, {3.6830486044225082`*^9, 
   3.6830486130522604`*^9}, {3.683049759526929*^9, 3.683049784091267*^9}, 
   3.6830498387137628`*^9, {3.6830499489338756`*^9, 3.6830499829444623`*^9}, {
   3.683050107443301*^9, 3.6830501080437*^9}, {3.6830502134530907`*^9, 
   3.683050237732626*^9}, {3.6830508463538647`*^9, 3.683050848092024*^9}, {
   3.6830512174741836`*^9, 3.683051318327956*^9}, {3.68305141269347*^9, 
   3.6830514189526434`*^9}, {3.6830514490507092`*^9, 
   3.6830514517945375`*^9}, {3.683051513194645*^9, 3.6830515464718294`*^9}, {
   3.6830528447429323`*^9, 3.6830528655883617`*^9}, 3.6830530458067245`*^9, {
   3.6830690703621416`*^9, 3.6830691417092147`*^9}, {3.6830694416214046`*^9, 
   3.6830694434306107`*^9}, {3.6830694833502245`*^9, 3.683069484821205*^9}, {
   3.683070729955146*^9, 3.6830707740605483`*^9}, {3.6830712713652153`*^9, 
   3.6830712716263876`*^9}, {3.6830719460428877`*^9, 3.683071964236906*^9}, {
   3.6830720005991483`*^9, 3.683072014350318*^9}, {3.68307204839301*^9, 
   3.6830720582609043`*^9}, {3.683072135692527*^9, 3.6830721509567013`*^9}, {
   3.6830728276947327`*^9, 3.683072829097669*^9}, {3.6830735964682264`*^9, 
   3.6830735969445453`*^9}, {3.683073691666543*^9, 3.683073692095833*^9}, {
   3.6830737483087044`*^9, 3.6830738016602697`*^9}, {3.6830738397446594`*^9, 
   3.683073884579549*^9}, {3.6830740536964674`*^9, 3.6830740562001324`*^9}, {
   3.683074113623417*^9, 3.683074136141427*^9}, {3.6831137205409174`*^9, 
   3.6831137283381157`*^9}, {3.683114615466959*^9, 3.683114683204441*^9}, {
   3.683282340518567*^9, 3.6832824072357135`*^9}, {3.6832824475178485`*^9, 
   3.6832825729421616`*^9}, {3.6832826105214677`*^9, 3.683282687613647*^9}, 
   3.6832828174469943`*^9, {3.683282888362079*^9, 3.6832828887951603`*^9}, {
   3.683282922716254*^9, 3.683282927889253*^9}, {3.683282959197586*^9, 
   3.6832829787227917`*^9}, {3.683283115450907*^9, 3.6832831376467*^9}, {
   3.6832845350763054`*^9, 3.683284598197768*^9}, {3.6832846488608637`*^9, 
   3.6832846838701496`*^9}, {3.6834531221145186`*^9, 
   3.6834531225835247`*^9}, {3.6834531627014427`*^9, 
   3.6834532309226456`*^9}, {3.683453374690505*^9, 3.6834533843788047`*^9}, {
   3.683453539085793*^9, 3.6834536630132537`*^9}, 3.683453695691606*^9, {
   3.6834738983736906`*^9, 3.6834739148350773`*^9}, {3.6834739684969196`*^9, 
   3.683473969084311*^9}, {3.6834751355005164`*^9, 3.683475142708455*^9}, {
   3.683475301179598*^9, 3.6834753087796564`*^9}, {3.6834759178912888`*^9, 
   3.683476059550787*^9}, {3.6834762186555815`*^9, 3.683476223096542*^9}, {
   3.683476615545763*^9, 3.683476617722215*^9}, {3.683476842666613*^9, 
   3.6834768881495647`*^9}, {3.683477069632125*^9, 3.6834771669518113`*^9}, {
   3.6834772529809628`*^9, 3.6834772563114014`*^9}, {3.6834821858820133`*^9, 
   3.6834822862699795`*^9}, {3.6834823347393136`*^9, 3.683482392754013*^9}, {
   3.683482751210119*^9, 3.683482753181434*^9}, {3.683482786817873*^9, 
   3.683482801103403*^9}, {3.683482869966338*^9, 3.6834828981661496`*^9}, {
   3.683483063285297*^9, 3.6834830994669647`*^9}, {3.6834832963935027`*^9, 
   3.6834833307854443`*^9}, {3.6834890127908435`*^9, 
   3.6834890216122856`*^9}, {3.683493965713439*^9, 3.6834939814519386`*^9}, {
   3.6834944046024194`*^9, 3.6834944049186287`*^9}, {3.6835409768643427`*^9, 
   3.68354103279165*^9}, {3.683542352696763*^9, 3.6835423564522676`*^9}, {
   3.6835425125263824`*^9, 3.6835426272869368`*^9}, {3.683542769061509*^9, 
   3.6835428376312504`*^9}, {3.683542882745347*^9, 3.6835428870232*^9}, {
   3.6835432670537963`*^9, 3.6835432713906884`*^9}, {3.6835443717663035`*^9, 
   3.6835443858376884`*^9}, {3.683544436760659*^9, 3.6835444599851522`*^9}, {
   3.6835449419844527`*^9, 3.6835449764104195`*^9}, {3.683547403125822*^9, 
   3.683547405181193*^9}, {3.683547447009968*^9, 3.6835474772120934`*^9}, {
   3.683547554671893*^9, 3.6835475550151224`*^9}, {3.6835476722649136`*^9, 
   3.683547676145505*^9}, 3.683554020810647*^9, {3.6835569974081154`*^9, 
   3.6835570021610966`*^9}, {3.6835725278858185`*^9, 3.68357257121698*^9}, {
   3.68358414383438*^9, 3.683584144076541*^9}, {3.6835858200268536`*^9, 
   3.6835858416392717`*^9}, {3.6835858844017982`*^9, 
   3.6835859177690554`*^9}, {3.683585973043927*^9, 3.6835859735662756`*^9}, {
   3.6835860953875403`*^9, 3.6835861110930166`*^9}, {3.683586298403968*^9, 
   3.683586316865286*^9}, {3.683586869084463*^9, 3.683586869359646*^9}, {
   3.683587246294219*^9, 3.683587252347257*^9}, {3.683588468470273*^9, 
   3.6835884705416536`*^9}, {3.683588751475239*^9, 3.6835887635192733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RecordedComparisonData", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"SET", " ", "DATA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varamt", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doNormalize", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DataLength", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SamplingRate", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fitfunction", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"#1", "*", "#3"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"#1", "*", "#2"}], "]"}]}], "+", "#4"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{"10.", ",", 
      RowBox[{"{", 
       RowBox[{"9.03091", ",", "6.9648", ",", 
        RowBox[{"-", "6.23602"}]}], "}"}], ",", "0.", ",", 
      RowBox[{"NormalDistribution", "[", "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6835419646529064`*^9, 3.6835419646549087`*^9}, {
   3.6835420064157667`*^9, 3.6835420109077635`*^9}, {3.6835420853294077`*^9, 
   3.6835420860769105`*^9}, {3.6835422873921986`*^9, 
   3.6835422981143527`*^9}, {3.683554709218642*^9, 3.6835547123777494`*^9}, {
   3.6835547637910476`*^9, 3.683554783649292*^9}, {3.683567656024397*^9, 
   3.6835677516671762`*^9}, 3.683567880753562*^9, {3.683568085215626*^9, 
   3.683568085381737*^9}, {3.6835713057158346`*^9, 3.683571305790885*^9}, 
   3.6835713383670073`*^9, {3.6835725418111076`*^9, 3.683572556553466*^9}, {
   3.683572666157154*^9, 3.6835726667105227`*^9}, {3.6835727527798867`*^9, 
   3.683572754232853*^9}, {3.6835815482277555`*^9, 3.683581549655707*^9}, {
   3.6835815863002195`*^9, 3.6835816111238165`*^9}, {3.683581655744582*^9, 
   3.68358165583164*^9}, {3.6835817014055953`*^9, 3.683581701737815*^9}, {
   3.683581750984215*^9, 3.683581832952446*^9}, {3.6835819181963577`*^9, 
   3.683581968554219*^9}, {3.6835820733522367`*^9, 3.6835821006258116`*^9}, {
   3.683582134875126*^9, 3.683582136270055*^9}, {3.683582178932672*^9, 
   3.683582196716383*^9}, {3.6835841616137304`*^9, 3.683584215254002*^9}, {
   3.683584458385864*^9, 3.6835844585019407`*^9}, 3.683584677073697*^9, {
   3.6835861283395233`*^9, 3.6835861516280565`*^9}, 3.6835864512269135`*^9, {
   3.683587364143836*^9, 3.6835873659730563`*^9}, {3.683587533046694*^9, 
   3.6835875337521667`*^9}, {3.6835877422231827`*^9, 3.683587743186824*^9}, {
   3.683588230761705*^9, 3.6835882464141455`*^9}, {3.6835887139530296`*^9, 
   3.6835887146294785`*^9}, {3.6835888438188405`*^9, 3.683588844555332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"BEGIN", " ", "ITERATION"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smoothness", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useHessian", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SmoothingFunction", "[", "l_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", "/", 
           SuperscriptBox["2.", 
            RowBox[{"First", "[", "#2", "]"}]]}], "&"}], ",", "l"}], "]"}], 
       "]"}], "/", "Smoothness"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationData", "[", 
     RowBox[{"0.01", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RecoverFrequency", "[", 
         RowBox[{"Data", ",", "DataLength", ",", "SamplingRate"}], "]"}], ",",
         "1.", ",", "0.1"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"recordAtIter", "=", "200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Visualize", "[", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681582981711115*^9, 3.681582986568472*^9}, {
   3.6815830288923187`*^9, 3.681583033177169*^9}, {3.681583138155509*^9, 
   3.6815831669343147`*^9}, {3.681583254303117*^9, 3.681583294651238*^9}, {
   3.681585139202839*^9, 3.681585158314912*^9}, {3.68158530678191*^9, 
   3.6815853073417172`*^9}, {3.6815888689488974`*^9, 
   3.6815889866626554`*^9}, {3.6815890228020644`*^9, 
   3.6815890583435373`*^9}, {3.6815891217298484`*^9, 3.681589163632318*^9}, {
   3.681589334500104*^9, 3.681589348961054*^9}, {3.6815906212941074`*^9, 
   3.681590665665968*^9}, {3.681603534980042*^9, 3.6816035363699694`*^9}, {
   3.681603864337474*^9, 3.6816038682690973`*^9}, {3.681604243555854*^9, 
   3.68160424704218*^9}, {3.681604329314691*^9, 3.681604341492816*^9}, {
   3.6816044092304306`*^9, 3.6816044107254276`*^9}, {3.6816530292944417`*^9, 
   3.6816530304204016`*^9}, {3.6816570986333294`*^9, 3.681657131603295*^9}, {
   3.68165718855943*^9, 3.6816572324965878`*^9}, {3.681657309278144*^9, 
   3.6816573131817484`*^9}, {3.681657666521865*^9, 3.6816577776820254`*^9}, {
   3.68165782483617*^9, 3.681657954385624*^9}, {3.6816580017865467`*^9, 
   3.6816580506108546`*^9}, {3.6816581666434946`*^9, 3.681658170822795*^9}, {
   3.6816583360697403`*^9, 3.681658337337532*^9}, {3.6816584414643555`*^9, 
   3.6816584541160107`*^9}, {3.6816589278869047`*^9, 
   3.6816589285913744`*^9}, {3.681658984624859*^9, 3.68165898677029*^9}, {
   3.681659038013056*^9, 3.6816590423468595`*^9}, {3.6816594819339275`*^9, 
   3.6816594843655505`*^9}, {3.681659775861001*^9, 3.6816597777292466`*^9}, {
   3.681660572644367*^9, 3.6816605736830606`*^9}, {3.681660606220765*^9, 
   3.6816606758342023`*^9}, 3.6816607353358936`*^9, 3.681677017236003*^9, {
   3.681677124887562*^9, 3.681677189483862*^9}, {3.6816772528319063`*^9, 
   3.681677267550214*^9}, {3.6816773596183596`*^9, 3.6816773728282022`*^9}, {
   3.6816774203410945`*^9, 3.6816774217293653`*^9}, {3.681677473480362*^9, 
   3.6816774771330295`*^9}, 3.6816775189761457`*^9, {3.6816776491617465`*^9, 
   3.681677682774685*^9}, {3.6817249874119425`*^9, 3.6817249882761993`*^9}, {
   3.6817250226257377`*^9, 3.6817250289826703`*^9}, {3.6817265600556955`*^9, 
   3.681726572075122*^9}, 3.681726796595335*^9, {3.6817379065662923`*^9, 
   3.681737907543937*^9}, {3.681739349567865*^9, 3.6817393578093576`*^9}, {
   3.6817394401773014`*^9, 3.6817394468687677`*^9}, {3.681739510376131*^9, 
   3.681739615667372*^9}, {3.681739999609486*^9, 3.6817400007982807`*^9}, {
   3.68174012905984*^9, 3.681740136059509*^9}, {3.6817419469943395`*^9, 
   3.681741952057715*^9}, {3.6828737640986223`*^9, 3.6828737647000227`*^9}, {
   3.682875461848855*^9, 3.6828756006176033`*^9}, {3.6828764354113855`*^9, 
   3.682876436543141*^9}, {3.6828766604259844`*^9, 3.6828766842954245`*^9}, {
   3.682876922117593*^9, 3.6828769346159225`*^9}, {3.682876994450532*^9, 
   3.6828770733282995`*^9}, {3.682877151602738*^9, 3.6828772330235786`*^9}, {
   3.6828775403583255`*^9, 3.682877624288368*^9}, {3.682877916713852*^9, 
   3.6828779544028687`*^9}, {3.682878065220443*^9, 3.682878072332185*^9}, {
   3.6828814401165433`*^9, 3.6828814554397593`*^9}, {3.6828815136255503`*^9, 
   3.682881677529819*^9}, {3.68288172255884*^9, 3.6828817726412277`*^9}, {
   3.6828818052829876`*^9, 3.6828818326892595`*^9}, {3.68288187893756*^9, 
   3.6828818980032716`*^9}, {3.6828819290849905`*^9, 3.6828819380419636`*^9}, 
   3.6828820133227377`*^9, {3.6828820484197435`*^9, 3.6828820737426243`*^9}, {
   3.6828821123523645`*^9, 3.6828821185725107`*^9}, {3.682882266229948*^9, 
   3.682882269393059*^9}, {3.6828823006288815`*^9, 3.6828824004974613`*^9}, {
   3.6828824684167385`*^9, 3.6828824766762457`*^9}, {3.682882938299493*^9, 
   3.6828829432121906`*^9}, {3.682884460763468*^9, 3.682884487530546*^9}, {
   3.6828845209094305`*^9, 3.682884563541955*^9}, {3.682884653926296*^9, 
   3.682884655603948*^9}, {3.682884704152156*^9, 3.6828847264733267`*^9}, {
   3.6828856457691994`*^9, 3.682885649599371*^9}, {3.683040573485735*^9, 
   3.683040584339557*^9}, {3.68304064193865*^9, 3.6830406431586776`*^9}, {
   3.6830407026469884`*^9, 3.683040709387744*^9}, {3.683040784112011*^9, 
   3.6830407868282356`*^9}, {3.683041425354068*^9, 3.683041553893486*^9}, {
   3.683049172974044*^9, 3.683049362232627*^9}, {3.68304940084937*^9, 
   3.6830494027616453`*^9}, {3.683049464699045*^9, 3.683049466438177*^9}, {
   3.6830495610864267`*^9, 3.6830495652051725`*^9}, {3.68304961800137*^9, 
   3.683049678092401*^9}, 3.683049711234733*^9, {3.68304980134577*^9, 
   3.6830498081863317`*^9}, {3.6830723669505258`*^9, 3.683072482054262*^9}, {
   3.683072637656907*^9, 3.6830726449707837`*^9}, {3.683076372548118*^9, 
   3.683076376220566*^9}, {3.683076599486354*^9, 3.683076600303899*^9}, {
   3.683113812300089*^9, 3.683113818312097*^9}, {3.6834738943165803`*^9, 
   3.683473922983458*^9}, {3.6834739738785095`*^9, 3.68347397407164*^9}, {
   3.6834751469622936`*^9, 3.6834751658909864`*^9}, {3.68347521491304*^9, 
   3.6834752862256107`*^9}, {3.6834758806565614`*^9, 3.683475890758298*^9}, 
   3.6834760778700066`*^9, {3.683476111184245*^9, 3.6834761186132*^9}, {
   3.6834765158272057`*^9, 3.683476531901271*^9}, {3.683476623835718*^9, 
   3.683476624398637*^9}, {3.683476868357871*^9, 3.6834768749890203`*^9}, {
   3.683476937855316*^9, 3.6834769388860035`*^9}, {3.6834772869824443`*^9, 
   3.683477290570836*^9}, {3.6834773560896063`*^9, 3.683477397585683*^9}, 
   3.683477446109888*^9, {3.683477637042604*^9, 3.683477648454566*^9}, {
   3.6834822237832956`*^9, 3.683482223927392*^9}, {3.6834882586372824`*^9, 
   3.6834882817872534`*^9}, {3.683493991160005*^9, 3.6834939912690783`*^9}, {
   3.6834940877280064`*^9, 3.683494135284731*^9}, {3.6834943253961697`*^9, 
   3.6834943257273903`*^9}, {3.6834946353849983`*^9, 3.683494639560784*^9}, {
   3.6835034954100933`*^9, 3.6835034979037547`*^9}, {3.683504136606228*^9, 
   3.683504150164277*^9}, {3.68350429772871*^9, 3.6835043028281107`*^9}, {
   3.68350482801584*^9, 3.6835048283790836`*^9}, {3.6835051006222696`*^9, 
   3.683505106859684*^9}, {3.683505703191486*^9, 3.683505724435655*^9}, {
   3.6835057573736277`*^9, 3.68350575937296*^9}, {3.683505799282584*^9, 
   3.683505872292286*^9}, {3.683505940406725*^9, 3.6835059810918646`*^9}, {
   3.683506029663267*^9, 3.683506077217988*^9}, {3.6835061267170086`*^9, 
   3.683506182208025*^9}, {3.6835062368584805`*^9, 3.6835062529201937`*^9}, {
   3.683506392477291*^9, 3.6835064012691545`*^9}, {3.683541045516137*^9, 
   3.683541056417409*^9}, {3.68354116520598*^9, 3.6835411813624287`*^9}, {
   3.6835413112196317`*^9, 3.6835413426615314`*^9}, {3.683541909913392*^9, 
   3.683541910463758*^9}, {3.683541999125903*^9, 3.68354203544413*^9}, 
   3.6835421016563*^9, {3.68354214517733*^9, 3.6835421543864737`*^9}, {
   3.6835422486553593`*^9, 3.6835422521697035`*^9}, {3.68354293171101*^9, 
   3.6835429320572405`*^9}, {3.683543007650754*^9, 3.683543027534017*^9}, {
   3.683543089591416*^9, 3.6835430947878814`*^9}, {3.6835433381962557`*^9, 
   3.6835433479447556`*^9}, {3.683543465132931*^9, 3.6835435069508276`*^9}, 
   3.683544000135397*^9, {3.6835451305795994`*^9, 3.683545130864789*^9}, {
   3.683546877145338*^9, 3.6835468970791984`*^9}, {3.683546945962344*^9, 
   3.6835469461744857`*^9}, {3.683547159392496*^9, 3.683547172371584*^9}, {
   3.683547216453932*^9, 3.6835472309961596`*^9}, {3.6835473228847127`*^9, 
   3.6835473301280003`*^9}, {3.683547769463896*^9, 3.6835477704195323`*^9}, {
   3.683547857704653*^9, 3.6835478581529536`*^9}, {3.6835479456953506`*^9, 
   3.683547948110963*^9}, {3.683550777678563*^9, 3.683550778168889*^9}, {
   3.6835508692942724`*^9, 3.683550901647855*^9}, {3.6835509428253236`*^9, 
   3.6835509462195883`*^9}, {3.683550985118536*^9, 3.68355098537871*^9}, {
   3.683551023248973*^9, 3.6835510539455433`*^9}, {3.6835511059132996`*^9, 
   3.6835511061474543`*^9}, {3.6835511441327953`*^9, 
   3.6835511443859615`*^9}, {3.6835511809093275`*^9, 3.683551181139481*^9}, {
   3.683551994573103*^9, 3.6835519946891837`*^9}, {3.6835520789263744`*^9, 
   3.68355207904345*^9}, {3.6835523801102853`*^9, 3.6835523802303696`*^9}, {
   3.683552494263435*^9, 3.683552494404529*^9}, {3.6835526100001445`*^9, 
   3.683552610316354*^9}, {3.683552964670737*^9, 3.683552976244457*^9}, {
   3.683553157334643*^9, 3.683553157458726*^9}, {3.683554077654566*^9, 
   3.683554080220276*^9}, {3.683554883071704*^9, 3.6835549479149604`*^9}, {
   3.6835550228248367`*^9, 3.683555124118407*^9}, {3.683555164250177*^9, 
   3.683555199409633*^9}, {3.6835552328149176`*^9, 3.6835552508389387`*^9}, {
   3.683555281561434*^9, 3.6835553140831285`*^9}, {3.6835553749052987`*^9, 
   3.6835554217035165`*^9}, {3.683556579973998*^9, 3.683556901670368*^9}, {
   3.6835569335751176`*^9, 3.683556958773926*^9}, {3.683567451357293*^9, 
   3.6835674553959866`*^9}, {3.683570183365841*^9, 3.683570184733753*^9}, 
   3.683584154968811*^9, {3.683584690365562*^9, 3.6835846906667633`*^9}, {
   3.6835860328868484`*^9, 3.683586037622006*^9}, {3.683586328674161*^9, 
   3.683586329570758*^9}, {3.6835875817747693`*^9, 3.6835875848358126`*^9}, {
   3.6835885266750994`*^9, 3.6835885268822365`*^9}, {3.683588963341572*^9, 
   3.6835889639950047`*^9}, {3.6835890426823835`*^9, 3.6835890433308167`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Grid[{{"Data vs Function", "Parameter Space", "Error over iterations"}, {
      ListPlot[{
        Map[$CellContext`DataMax Apply[$CellContext`Fitfunction, 
           
           Prepend[$CellContext`iterParams, #]]& , $CellContext`SamplingSet], \
$CellContext`DataMax $CellContext`Data}, Joined -> True, ImageSize -> Medium, 
       PlotLegends -> None], 
      If[$CellContext`doPoint, 
       If[$CellContext`varamt == 3, 
        If[$CellContext`doGraph, {
          $CellContext`displayGradient[1, 2], 
          $CellContext`displayGradient[2, 3], 
          $CellContext`displayGradient[3, 1]}, 
         $CellContext`LinePlot[$CellContext`debugParams, \
$CellContext`totalIter, $CellContext`historyAmt]], "Non-3 dimensions"], 
       "Disabled"], 
      If[$CellContext`doEPlot, 
       ListLogPlot[$CellContext`DataMax $CellContext`debugErr, ImageSize -> 
        Medium, PlotRange -> All], "Disabled"]}, {
     "Parameters, nGrad, dir, Delta", "Iterations, factor, corrections"}, {
      Column[{$CellContext`iterParams, -$CellContext`dir, \
(-$CellContext`factor) $CellContext`dir, (-$CellContext`factor) \
$CellContext`SmoothingFunction[$CellContext`dirs]}], 
      Column[{{$CellContext`totalIter, $CellContext`factor, \
$CellContext`TotalRefines}, 
        ProgressIndicator[$CellContext`ConsecRefines/$CellContext`maxRefines]}\
], {$CellContext`DataMax (Total[(Map[Apply[$CellContext`Fitfunction, 
               
               Prepend[$CellContext`iterParams, #]]& , \
$CellContext`SamplingSet] - $CellContext`Data)^2]/($CellContext`DataLength - \
$CellContext`varamt))^0.5, $CellContext`prevErr}}}, Frame -> All, ItemSize -> 
    30], StandardForm],
  ImageSizeCache->{1163., {182., 189.}}]], "Output",
 CellChangeTimes->{{3.6835841982840967`*^9, 3.683584202961216*^9}, 
   3.6835843406703367`*^9, {3.6835845019569283`*^9, 3.6835845175563335`*^9}, {
   3.683584680242807*^9, 3.683584691050016*^9}, 3.6835858520492144`*^9, {
   3.683585932720028*^9, 3.6835859377323723`*^9}, {3.6835860022444057`*^9, 
   3.6835860379532285`*^9}, {3.683586134173413*^9, 3.6835861673675566`*^9}, {
   3.683586323343605*^9, 3.683586330089104*^9}, 3.683586639047007*^9, 
   3.6835872784256554`*^9, {3.683587359727888*^9, 3.6835873684026775`*^9}, 
   3.6835875360647063`*^9, 3.683587575509589*^9, {3.683587627975589*^9, 
   3.683587647511921*^9}, 3.6835876859415507`*^9, 3.6835877575884295`*^9, 
   3.6835882514374957`*^9, 3.683588282321096*^9, 3.683588528746481*^9, 
   3.6835887171111345`*^9, 3.6835887732337527`*^9, 3.6835888479826155`*^9, 
   3.6835889646084137`*^9, {3.683589037983697*^9, 3.6835890468121386`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "loop"}], " ", "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Iterator", " ", "and", " ", "maximum", " ", "values"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "0."}], ";", 
    RowBox[{"UpperBound", "=", "1000."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmallErr", "=", "0.0000000000000001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NoErr", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Forever", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Iteration", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConsecRefines", "<", "maxRefines"}], "&&", 
      RowBox[{"(", 
       RowBox[{"Forever", "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "<", "UpperBound"}], " ", "&&", 
          RowBox[{"(", 
           RowBox[{"NoErr", "||", " ", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"err", 
                   RowBox[{"(", 
                    RowBox[{"err", "-", "prevErr"}], ")"}]}], ")"}], "2"], 
                "+", "1"}], ")"}], "2"], ">", 
             RowBox[{"(", 
              RowBox[{"1", "+", "SmallErr"}], ")"}]}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Obtain", " ", "vector", " ", "from", " ", "gradient", " ", "and", " ", 
       "assign", " ", "into", " ", "running", " ", "array"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dirs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"dir", "=", 
          RowBox[{"If", "[", 
           RowBox[{"useHessian", ",", 
            RowBox[{
             RowBox[{"Inverse", "@", 
              RowBox[{"(", 
               RowBox[{"hFunc", "@@", "iterParams"}], ")"}]}], ".", 
             RowBox[{"(", 
              RowBox[{"gFunc", "@@", "iterParams"}], ")"}]}], ",", 
            RowBox[{"gFunc", "@@", "iterParams"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ReportIteration", "[", "i", "]"}], ";", 
      RowBox[{"(*", "Report", "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fps", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"ConsecRefines", "\[Equal]", "0"}]}], ",", 
        RowBox[{
         RowBox[{"Pause", "[", "fps", "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"(*", "Pause", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showMistakes", ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mark", " ", "down", " ", "boost", " ", "vs", " ", "error"}], 
        " ", "-", " ", 
        RowBox[{
        "please", " ", "do", " ", "not", " ", "change", " ", "other", " ", 
         "variables"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"iterParams", "-=", 
       RowBox[{"factor", "*", 
        RowBox[{"SmoothingFunction", "[", "dirs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ConsecRefines", "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"i", "++"}], ";", 
         RowBox[{"totalIter", "++"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"err", "=", 
       RowBox[{"eFunc", " ", "@@", " ", "iterParams"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Factor", " ", "Adaptivity"}], " ", "-", " ", 
        RowBox[{
        "check", " ", "to", " ", "see", " ", "whether", " ", "error", " ", 
         "has", " ", "increased", " ", "over", " ", "errorRatio", " ", "to", 
         " ", "determine", " ", "whether", " ", "to", " ", "boost", " ", "or",
          " ", "refine"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         FractionBox["err", "prevErr"], ">", "errorRatio"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "err", " ", "increased"}], ",", " ", "revert", 
          ",", " ", "refine", ",", " ", 
          RowBox[{"and", " ", "retry"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"iterParams", "=", 
          RowBox[{"debugParams", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log10", "[", "factor", "]"}], "<", 
            RowBox[{"-", "100"}]}], ",", 
           RowBox[{"factor", "=", "0.5"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RefineFactor", "[", "]"}], ";"}], ",", 
        RowBox[{
         RowBox[{"AddToHistory", "[", "]"}], ";", 
         RowBox[{"BoostFactor", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6815830549052362`*^9, 3.6815830569639435`*^9}, {
   3.6815833224915934`*^9, 3.6815833427873363`*^9}, {3.6815835152037477`*^9, 
   3.6815835867637324`*^9}, {3.6815836557592244`*^9, 3.6815836579033656`*^9}, 
   3.681583698624568*^9, {3.681583804126245*^9, 3.681583899175346*^9}, {
   3.681584120809069*^9, 3.6815841278946266`*^9}, {3.681584565742484*^9, 
   3.681584574478776*^9}, {3.681584717851612*^9, 3.6815848728995996`*^9}, {
   3.68158494548003*^9, 3.681584960968948*^9}, {3.6815849967248945`*^9, 
   3.681584998155593*^9}, {3.681585044037255*^9, 3.6815850807786193`*^9}, {
   3.6815851687605925`*^9, 3.6815851749758067`*^9}, 3.681585257436683*^9, {
   3.681588818643874*^9, 3.68158882224041*^9}, {3.6816039209133673`*^9, 
   3.681603978014973*^9}, 3.6816040159742737`*^9, {3.68160425701083*^9, 
   3.681604324912594*^9}, {3.6816043708838124`*^9, 3.681604395329851*^9}, {
   3.6816044410436525`*^9, 3.6816044809352636`*^9}, {3.681604581304495*^9, 
   3.681604581408561*^9}, {3.681657788978179*^9, 3.6816577997986774`*^9}, {
   3.681658388036417*^9, 3.681658388337614*^9}, {3.6816584666423044`*^9, 
   3.681658466801412*^9}, {3.681658543235112*^9, 3.6816585444509244`*^9}, {
   3.6816587162912865`*^9, 3.6816588213786974`*^9}, {3.681658853741133*^9, 
   3.6816588544954505`*^9}, {3.6816589093944664`*^9, 3.681658910498202*^9}, {
   3.6816589538124695`*^9, 3.681658961216242*^9}, {3.681659019321334*^9, 
   3.68165902741212*^9}, {3.6816590914616175`*^9, 3.6816591157677307`*^9}, {
   3.681659258204584*^9, 3.681659461082448*^9}, {3.681659669532071*^9, 
   3.681659671022064*^9}, {3.681659706162506*^9, 3.6816597313162856`*^9}, {
   3.681659808123521*^9, 3.6816598312099223`*^9}, {3.6816599096232305`*^9, 
   3.681659938730646*^9}, {3.6816600065518885`*^9, 3.681660025867775*^9}, {
   3.681660056864452*^9, 3.6816600601386366`*^9}, {3.681660324915262*^9, 
   3.6816603310743704`*^9}, 3.6816603734203887`*^9, {3.6816604871622624`*^9, 
   3.6816605001939564`*^9}, {3.681726019259656*^9, 3.681726117312996*^9}, 
   3.6817261890839434`*^9, {3.6817263633960915`*^9, 3.6817263752591195`*^9}, {
   3.6817265926157346`*^9, 3.681726606880471*^9}, {3.6817266668997264`*^9, 
   3.6817267125406976`*^9}, {3.681737754102071*^9, 3.6817377743956075`*^9}, {
   3.681737807716177*^9, 3.6817378088419275`*^9}, {3.6817384089755154`*^9, 
   3.6817384169598455`*^9}, {3.681738453769399*^9, 3.6817386697234554`*^9}, {
   3.6817387708958917`*^9, 3.681738855176112*^9}, {3.6817390914112206`*^9, 
   3.6817391362351217`*^9}, {3.681739252624189*^9, 3.6817392574333997`*^9}, {
   3.681739661725093*^9, 3.681739693822504*^9}, {3.681739852449319*^9, 
   3.681739852764531*^9}, {3.6817401973837595`*^9, 3.6817402118944373`*^9}, 
   3.6817414009559374`*^9, {3.681741459131745*^9, 3.681741580191125*^9}, {
   3.6817416744515905`*^9, 3.681741705967613*^9}, {3.6817418559296923`*^9, 
   3.6817418856745343`*^9}, {3.6817420325103846`*^9, 
   3.6817421352588587`*^9}, {3.6828756460984926`*^9, 3.682876143225466*^9}, 
   3.682876243323327*^9, {3.6828763113636885`*^9, 3.6828763434921064`*^9}, {
   3.6828764696682243`*^9, 3.682876541840211*^9}, {3.6828765823151927`*^9, 
   3.682876584366561*^9}, {3.682876634735857*^9, 3.682876651010708*^9}, {
   3.6828773139891996`*^9, 3.6828773364101458`*^9}, {3.6828773788808804`*^9, 
   3.682877400381214*^9}, {3.682877489771953*^9, 3.6828774903853636`*^9}, {
   3.6828776060872345`*^9, 3.682877608594906*^9}, {3.682881335946268*^9, 
   3.68288136995558*^9}, {3.682882576135539*^9, 3.6828825770011177`*^9}, {
   3.682882635548149*^9, 3.6828826427649612`*^9}, {3.682882688414392*^9, 
   3.682882696965092*^9}, {3.6828827453663607`*^9, 3.682882758678235*^9}, {
   3.68288280128664*^9, 3.682882801830003*^9}, {3.682882985371976*^9, 
   3.6828829854799776`*^9}, {3.6828830826284523`*^9, 
   3.6828830838046455`*^9}, {3.682883151550181*^9, 3.6828831523661866`*^9}, {
   3.682883219319111*^9, 3.682883240973945*^9}, {3.6828845914540353`*^9, 
   3.682884596048645*^9}, {3.682884740497396*^9, 3.6828847409814034`*^9}, {
   3.6830399252545934`*^9, 3.683040021903536*^9}, {3.683040074129644*^9, 
   3.683040109382766*^9}, {3.6830401521016164`*^9, 3.6830401528138976`*^9}, {
   3.6830403419625387`*^9, 3.683040384081685*^9}, {3.6830405507742767`*^9, 
   3.683040554542845*^9}, {3.6830407646220727`*^9, 3.6830407792434945`*^9}, {
   3.683041005852372*^9, 3.683041006316601*^9}, {3.6830410572708087`*^9, 
   3.683041063595398*^9}, {3.683041710352441*^9, 3.683041710548448*^9}, {
   3.6830417661374545`*^9, 3.6830417802909727`*^9}, {3.6830486378439603`*^9, 
   3.6830486617386465`*^9}, {3.6830494878933363`*^9, 3.683049494385665*^9}, {
   3.683049994565211*^9, 3.6830500492853537`*^9}, {3.683050088724822*^9, 
   3.683050102658111*^9}, {3.6830502789247494`*^9, 3.683050279417079*^9}, {
   3.683051358030029*^9, 3.6830513590497074`*^9}, {3.683071209115715*^9, 
   3.683071236472953*^9}, {3.6830714672728186`*^9, 3.6830714684896317`*^9}, {
   3.6830715354192495`*^9, 3.6830715898175154`*^9}, {3.683071625858543*^9, 
   3.6830716635406637`*^9}, {3.683071701500972*^9, 3.6830717333011713`*^9}, {
   3.6830722228226123`*^9, 3.6830722943002644`*^9}, {3.6830728559445696`*^9, 
   3.683072972508274*^9}, {3.6830731256430845`*^9, 3.6830731527751737`*^9}, {
   3.6830741829346232`*^9, 3.6830742453112097`*^9}, {3.6830743162555017`*^9, 
   3.6830743180837207`*^9}, {3.683075201200184*^9, 3.6830752609750347`*^9}, {
   3.68307547026332*^9, 3.683075482021157*^9}, 3.6830755175598507`*^9, {
   3.6830760734353714`*^9, 3.6830763233887806`*^9}, {3.6830763549573927`*^9, 
   3.68307635783331*^9}, {3.6830764258746705`*^9, 3.6830764272325764`*^9}, {
   3.683076460497753*^9, 3.683076499906025*^9}, {3.683076584187575*^9, 
   3.683076587354686*^9}, {3.683113789162665*^9, 3.683113799528575*^9}, {
   3.683473868679073*^9, 3.6834738695539455`*^9}, {3.683474127010831*^9, 
   3.6834741301785593`*^9}, {3.6834742561450167`*^9, 3.683474327471419*^9}, 
   3.683475086419007*^9, {3.683475422019196*^9, 3.683475446846759*^9}, {
   3.6834756211749306`*^9, 3.6834757009501467`*^9}, {3.6834757318607655`*^9, 
   3.6834757544768524`*^9}, {3.6834769318898134`*^9, 
   3.6834769348793306`*^9}, {3.6834769968695316`*^9, 
   3.6834769969916124`*^9}, {3.683481894355544*^9, 3.6834818948128486`*^9}, {
   3.6834819270643625`*^9, 3.6834819273225355`*^9}, {3.683482000056054*^9, 
   3.6834820309506626`*^9}, {3.6834824427203465`*^9, 3.683482445979519*^9}, {
   3.683482476911153*^9, 3.683482477036238*^9}, {3.6834825422897654`*^9, 
   3.683482542403841*^9}, {3.6834939977710204`*^9, 3.6834940006869664`*^9}, {
   3.683494176985549*^9, 3.6834941785385847`*^9}, {3.6835408777038684`*^9, 
   3.6835408802965975`*^9}, {3.6835409304023485`*^9, 
   3.6835409306685247`*^9}, {3.6835409642379184`*^9, 
   3.6835409644720783`*^9}, {3.6835410665411644`*^9, 3.683541068398403*^9}, {
   3.6835431122035*^9, 3.683543112450664*^9}, {3.6835440067658195`*^9, 
   3.6835440271264057`*^9}, {3.683544474519847*^9, 3.6835444860975714`*^9}, {
   3.683544617029913*^9, 3.6835446228367863`*^9}, {3.6835450588397436`*^9, 
   3.683545061975836*^9}, {3.6835472214513702`*^9, 3.683547229002435*^9}, {
   3.6835474251021185`*^9, 3.6835474434665327`*^9}, {3.68354748080097*^9, 
   3.6835475052560797`*^9}, {3.68355064698372*^9, 3.6835506821411705`*^9}, {
   3.683551242334303*^9, 3.6835512425704584`*^9}, {3.6835565254745216`*^9, 
   3.6835565260569096`*^9}, {3.683556674143777*^9, 3.683556674699147*^9}, {
   3.683556765853693*^9, 3.6835567663390145`*^9}, {3.6835842910102105`*^9, 
   3.683584332636979*^9}, {3.6835844874292374`*^9, 3.683584488194749*^9}, {
   3.6835868514937286`*^9, 3.6835868572555695`*^9}, {3.683587296438669*^9, 
   3.683587299464689*^9}, {3.6835875881830444`*^9, 3.68358768050893*^9}, {
   3.68358771727454*^9, 3.6835877186104293`*^9}, {3.683588284515562*^9, 
   3.683588285348117*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6835889282051296`*^9, 3.6835889970091934`*^9, 
  3.6835890518446307`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Data", " ", "Recording"}], " ", "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RecordedComparisonData", "=", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"RecordedComparisonData", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Smoothness\>\"", ",", "Smoothness"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"debugErr", "*", "DataMax"}], ",", "\[IndentingNewLine]", 
          "debugParams", ",", "\[IndentingNewLine]", "TotalRefines", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<BoostRatio\>\"", ",", "boostRatio"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<RefineRatio\>\"", ",", "refineRatio"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<Normalized\>\"", ",", "doNormalize"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<Hessian\>\"", ",", "useHessian"}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6835512635774727`*^9, 3.6835512766051617`*^9}, {
  3.6835513068123145`*^9, 3.6835513199550796`*^9}, {3.6835513562472906`*^9, 
  3.683551464884759*^9}, {3.683551511272703*^9, 3.683551571884137*^9}, {
  3.683551613722046*^9, 3.683551762925576*^9}, {3.6835517985283265`*^9, 
  3.683551982519062*^9}, {3.683552039785263*^9, 3.6835520591141562`*^9}, {
  3.68355704362202*^9, 3.683557044894872*^9}, {3.6835864512419243`*^9, 
  3.6835864512429247`*^9}, {3.6835865192084756`*^9, 3.683586551951908*^9}, {
  3.6835878783786364`*^9, 3.6835878922098627`*^9}, {3.6835885545917225`*^9, 
  3.6835885647725143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "Diagnostic"}], " ", "Tools"}], "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "History"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"debugParams", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "10"}], ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"debugParams", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<Best Parameters\>\"", " ", "Generated", " ", "with", " ", 
     "NMinimize"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoParams", "=", 
     RowBox[{"params", "/.", 
      RowBox[{
       RowBox[{"NMinimize", "[", 
        RowBox[{
         RowBox[{"eFunc", " ", "@@", " ", "params"}], ",", "params"}], "]"}], 
       "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Compare", " ", "current", " ", "data"}], ",", " ", 
     RowBox[{"auto", "-", 
      RowBox[{"fitted", " ", "data"}]}], ",", " ", 
     RowBox[{"and", " ", "generated", " ", "data"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Fitfunction", "@@", 
            RowBox[{"Prepend", "[", 
             RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
         "SamplingSet"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fitfunction", "@@", 
           RowBox[{"Prepend", "[", 
            RowBox[{"AutoParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
        "SamplingSet"}], ",", "\[IndentingNewLine]", "Data"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.681583907879587*^9, 3.681583908109586*^9}, {
   3.6815841498431664`*^9, 3.6815843369873466`*^9}, {3.6815843715436563`*^9, 
   3.6815844247768803`*^9}, {3.6815845055957317`*^9, 
   3.6815845398777423`*^9}, {3.681585388456995*^9, 3.681585416260584*^9}, {
   3.6815854638012447`*^9, 3.68158558561312*^9}, {3.6815856333774595`*^9, 
   3.6815856567101574`*^9}, {3.681585697816263*^9, 3.6815857095368476`*^9}, {
   3.6815908238964005`*^9, 3.6815908354548683`*^9}, {3.6828752895787106`*^9, 
   3.6828753192775946`*^9}, {3.6828767617321186`*^9, 
   3.6828767631860867`*^9}, {3.6828768492823505`*^9, 
   3.6828768503120255`*^9}, {3.6828850410059423`*^9, 3.682885107966795*^9}, {
   3.6828851904843426`*^9, 3.6828852104902706`*^9}, {3.683040664212844*^9, 
   3.6830406713056135`*^9}, 3.683053624434885*^9, {3.683074224863575*^9, 
   3.6830742270330205`*^9}, {3.683488171174701*^9, 3.6834881803566556`*^9}, {
   3.683541086143239*^9, 3.6835410865385046`*^9}, {3.68354173096402*^9, 
   3.68354175174288*^9}, {3.6835521884124084`*^9, 3.683552189038827*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kgtQVGUYhleQhkaSy8ZgwQSiU2DixG25Ji+LsMAusPddMm4pYBuiIQNi
K7OMSF4iBpgRkthpTEDNC0jUQAJLBgkjRUI0LiQKQiRrQBAJiVSz/3dmzpx5
zvs/3/f95z+b3zkgTbfgcDh7/7v/f5qvubDatamy+Qw52Au0FN/20gqJrVHX
dUvzcyixHfyn60w7Qfwi3GuGt/QpiTdBGOSQU6MldsHN3jKX9IvEboiXBVc7
3yF2h+fmZFnFDPFWeJ3EBs1j4lexKo/vrxwi9oBn0t0jzeeJt0GSO7vwMJN4
Oy4Jy9N7thPvQFXIS63OlsRvwHl43b2ev2WMvZFiuernYE+5D7r0MzKxiNgX
Vmt9+jO1xH74tSK1cWye2B9H+d7non0VjHlYuvbpyPF44gB0GLq9wwOJA+E/
2dGyOEd+EJZ700zcEuJgjN4qffa7LXEIXivTPkq9TPOG4nnH8Ilv8onfxGBr
8e6lYuKd2NHUUGT4hTgMnusVSyNpVA/4Qcu9O72ezaMDSvSJ79VV03zh2MbN
bM5bpDwcXzUH5TusUM6Ho8uDsrN6yvkYy1z4umqW6kcgxk7fbefAWBeBHO2B
PFUIzbMLV66/4t11XsryXfjkyonKFS1jTiSeispsy42UR0Kzom1MbSY/Ci0Z
9m2NI1Q/Coh7ILDfqGS5APN79olGVhjrBAiIXHtm/7aK5dGQRV0oHLdmrIvG
d1vLNZWW5Meg7lSLbe1Rqh+DAr9DRTd/pPlicUSb5bqcIWF5LM4VLRQaL4pZ
LsTVppLsP0cZ64Q47ZuVumBDvgjPhWXXxlhRfREGhhRNRiX1j0PuQffhx9lq
lsfBpl4jX2pNZHk87hlv9Kf0MdbFg68X7K8oYOs5CZioWnQzLtP5JEBzOLdo
8A71F0N5/cv8+dIEM0OMUCdJcUWckK0X46PYdu82XqyZDWL06MalDjMi5kvw
uo0pZ/Fjtn9IYDTxkgK/p34SbKxpWTfq9hbzJUhLLvdZK0hivhSe3x7r6h1K
Zr4Up+ofpoTpWa6T4irX6tBn99n+DFK0L3hUDUvo/5JhKm5LsCaLzQMZfpvk
51j485kvw9yjgbQX+oOYL4Pd4RXngbFQ5svx+SZeosBDwHw51Ku3O3u76X+T
Y9o14uyHvN3MlyO1tND9p8w05itwQZHn+8GNPcxXwDX8ktZ2kLFOgVxnh0Iu
rTcosK+99q+JL+j8lMjz5yU+SaH5lTg44KR6uurBfCWehC1zi4N9DGZfCTer
wdMyY5CZOSo09pc5Xs50MjNUGH+/pL6tK4L5KsxadwZsiKDvp4K72z+qd0/u
Zf3VyJ2ai2mo1rD+avxhejnZZLGf+Wrc7yiMbehkuUGNa0lexx0n2f44iTij
ClALjsnwLyM9vmQ=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10g1QkwUcx/GBQww1GRuCbxTEyeRlt4kQYw1/MNgY420vvqJiS9YBF6IR
Qmc6K7NFAaHiUWpgWCe5ifF2TsuV54A1UyO9EA/BQCsURcjAnGa3/7O73e6z
737P8+zZgvWbNXmeLBZL9+z5/6v7cX/55ztfm3+8MtBGbyCu6p9eaRDjGbhi
E6smvggg+0L23bL7O7mMefD3GZvsKJtLDoSEveBQ/UV/8kKYF412bglk/CJ2
3x30OazlkUOwvmagq3cXlxyKfI+hD0Ma/ciL0dlwOsd+mkPmo6C2WFro8CWH
4z3JPktk4xxyJI55t3kbmmaTBfB4v2p4qXkmWYj5vJKPl7Q8RxZBvIXDunzO
m7wUrK9uBDfd9iJHo8/a3hzLZ5OX4aeRkrOuKk9yDOz8LtEn4R7kWLTeuNO5
jc0iv4zit1aXH1755KzbcWBLK/6IznGRxahe3Ve0J4ZxPDZe//4WZzrzeQl4
W62jHaNPya+A/yjimMzEnE8Kc2tGVItjGjkB1ReVXtcuTCcvx7ioWHCn0YcM
9HVvvzr4Kt0vIzAw5QwNqGDudyKaM3Nvx/5Jv5cxEZfj5UFePfOoJ+HrrjFe
YVYQ9SScmjpqCfs2mLoMzdwan6iKUOoyCFetX7W2NYx6MgTVY1a9IIJ6Mg69
vuvT8UkB9RScab0mVphE1FMw7HL2C89EU5ej4MGDiTncWOpyzCwZ9Rv5KI66
AnzXX8rBFyTUFbDuqdP7X5BST8VjFefHdDmop8LR8MPP5m8SqSvxKG/x2yY/
GXUl7LPEXwaUJlNPg2Ge49+hSynU07CuvPyWc6GCugq6bZduTmhSqavwQfKK
nu5CJfV0sE3hRU83pFFPR5N4UVTNSyrqGWA5u/ydJ8jGDFw1721Ln2J6Jh4O
VJ7g/c30TBg27ZPsP8D0LNhvCh6e+5U5fhaa7rXlRtcz589G/6zNBuFdul5k
Yy6k2mEL832ysbZGXvDub0lu27IhUFZyeq0JtFfD70i763c93X+o4WtpWRcQ
uoT2asDznf4Y4bj7/2pTwzIskis+C4N7r8HuBQn2nB3xbkOD/hXts8tKU9w2
anDwulFtqM5026ZB0IHCkwKFjvZanC/bf2pTxxraa/GkLp+7pjaX9loMHY+o
/+WenvZaHNyYVJQrN9D+2XES40wbHPm01yFStXLw+dI3aK/D5Ehtd0hDMe11
OGo738LfuxU9efodris6nDziyKnDm/gPjo+Qxg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{},
  PlotRange->{{0., 100.}, {-55.947653481587324`, 308.0374410548639}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.6835417522141943`*^9}, 
   3.683584482512956*^9, 3.6835883607814355`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dispGradientRange", "=", "3."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dispGradientThresh", "=", "1.5"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradient", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"displayGradient", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"1", ",", "2", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"2", ",", "3", ",", "dispGradientThresh"}], "]"}], ",", 
   RowBox[{"displayGradientNorm", "[", 
    RowBox[{"3", ",", "1", ",", "dispGradientThresh"}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.6834827674949846`*^9, 3.6834827724803104`*^9}, {
  3.6834828277811995`*^9, 3.683482833842241*^9}, {3.6834831095158396`*^9, 
  3.683483126677289*^9}, {3.683483342535281*^9, 3.683483348471242*^9}, {
  3.683541120765334*^9, 3.683541135063873*^9}}],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.683586643390905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwNw8mO0gAAAFCGZQChO9CFAt0LXSnQhQItdEGgbGMCh7nMZBL1pHPx6hcY
/8KTMcb5Af015yWPfXp+95TP5XLfXxde12/yHE4IJOVqOly6HYpSq1a3JLlR
fYNVqhQEkyBEACBeB6BiCSwUJwNFpNq2oqLlijWffbn/sQ3CaRKrDKv0mH6n
K9MdR9VMQWRbuMELGstJbVrneD9NmGarizXm1iic2CvHXdrOfhXNhla2XAXj
CXJb3oXLZOrH3jT1Z+vZPHK9QxS/3H24P51Hct/TjQ6KtWGERlDfHE4N85yu
T0kK5AvHOOEJ8vFyvWb7yy77d/282LydrdNguymAQAmGKhh6i8BlFMkDdazb
KUJgtYHBbcqNVgjdRjt0HW8NJuMm02uxjGAaBM+RAk+JQlsSaVnq9OWeMmBU
hdVUTtd4QwdJQhyakjWURxbOsQCB11pNxZ6Mg8UkDJbZLjrsb+o1exl+3P4a
znzdc8Pd1osjZ7Vc7TPTnxpTD6LI5+Of95uf6fmUXS9/H759Ovz+eveSnI6q
Y2uuEx8Pm0VweXz4DwKsUPc=
              "]], 
             
             PolygonBox[{{176, 78, 79, 114}, {102, 81, 71, 169}, {146, 96, 86,
               191}, {106, 74, 85, 108}, {108, 85, 95, 190}, {174, 77, 78, 
              111}, {110, 86, 76, 173}, {173, 76, 77, 109}, {169, 71, 72, 
              101}, {170, 72, 73, 103}, {172, 73, 74, 106}, {114, 79, 90, 
              116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7663828605875176, 0.2783322162818792, 0.05204309905278229], 
           GraphicsGroupBox[{
             
             PolygonBox[{{101, 82, 169}, {108, 84, 106}, {173, 87, 110}, {195,
               87, 113}, {169, 82, 102}, {107, 84, 133}, {190, 84, 108}, {116,
               89, 114}, {117, 82, 182}, {182, 82, 105}, {115, 89, 158}, {158,
               89, 204}, {143, 87, 195}, {114, 89, 176}, {106, 84, 172}, {109,
               87, 173}}], 
             
             PolygonBox[{{175, 174, 111, 112}, {147, 146, 191, 192}, {171, 
              170, 103, 104}}], 
             
             PolygonBox[{{192, 191, 110, 87, 143}, {112, 111, 176, 89, 115}, {
              204, 89, 116, 164, 165}, {105, 82, 101, 170, 171}, {133, 84, 
              190, 139, 140}, {113, 87, 109, 174, 175}, {178, 177, 102, 82, 
              117}, {104, 103, 172, 84, 107}, {121, 91, 125, 177, 178}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8029657077933638, 0.3432058232293944, 0.08675140800998064], 
           GraphicsGroupBox[{
             
             PolygonBox[{{150, 88, 201}, {175, 88, 113}, {104, 83, 171}, {126,
               83, 188}, {107, 83, 104}, {171, 83, 105}, {165, 100, 204}, {
              112, 88, 175}, {115, 88, 112}}], 
             
             PolygonBox[{{144, 143, 195, 196}, {134, 133, 140, 141}, {122, 
              121, 178, 179}, {148, 147, 192, 193}, {193, 192, 143, 144}, {
              179, 178, 117, 118}, {118, 117, 182, 183}}], 
             
             PolygonBox[{{183, 182, 105, 83, 126}, {201, 88, 115, 158, 159}, {
              159, 158, 204, 100, 166}, {188, 83, 107, 133, 134}, {196, 195, 
              113, 88, 150}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8395485549992099, 0.40807943017690956`, 0.12145971696717899`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{127, 126, 188, 189}, {180, 179, 118, 119}, {160, 
              159, 166, 167}, {145, 144, 196, 197}, {149, 148, 193, 194}, {
              189, 188, 134, 135}, {194, 193, 144, 145}, {197, 196, 150, 
              151}, {184, 183, 126, 127}, {151, 150, 201, 202}, {119, 118, 
              183, 184}, {202, 201, 159, 160}, {123, 122, 179, 180}, {135, 
              134, 141, 142}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8780733399749292, 0.5041588649308337, 0.2181942080887163], 
           GraphicsGroupBox[{
             
             PolygonBox[{{135, 94, 189}, {142, 94, 135}, {145, 97, 194}, {194,
               97, 149}}], 
             
             PolygonBox[{{181, 180, 119, 120}, {152, 151, 202, 203}, {185, 
              184, 127, 128}, {124, 123, 180, 181}, {203, 202, 160, 161}, {
              198, 197, 151, 152}, {120, 119, 184, 185}, {161, 160, 167, 
              168}}], 
             
             PolygonBox[{{128, 127, 189, 94, 136}, {155, 97, 145, 197, 
              198}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9174278503207856, 0.613571511195855, 0.3414304222587004], 
           GraphicsGroupBox[{
             
             PolygonBox[{{168, 99, 161}, {181, 92, 124}, {161, 99, 203}, {120,
               92, 181}}], 
             
             PolygonBox[{{156, 155, 198, 199}, {199, 198, 152, 153}, {129, 
              128, 136, 137}, {186, 185, 128, 129}}], 
             
             PolygonBox[{{153, 152, 203, 99, 162}, {131, 92, 120, 185, 
              186}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9567823606666418, 0.7229841574608762, 0.4646666364286845], 
           GraphicsGroupBox[{
             
             PolygonBox[{{200, 199, 153, 154}, {154, 153, 162, 163}, {187, 
              186, 129, 130}, {157, 156, 199, 200}, {130, 129, 137, 138}, {
              132, 131, 186, 187}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.8431369999999999, 0.5999999999999999], 
           GraphicsGroupBox[{
             
             PolygonBox[{{138, 93, 130}, {163, 98, 154}, {187, 93, 132}, {154,
               98, 200}, {200, 98, 157}, {130, 93, 187}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{132, 187, 130, 138}], 
             LineBox[{157, 200, 154, 163}]}, "350"], 
           Annotation[#, 350, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{162, 153, 199, 156}], 
             LineBox[{131, 186, 129, 137}]}, "300"], 
           Annotation[#, 300, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{124, 181, 120, 185, 128, 136}], 
             LineBox[{155, 198, 152, 203, 161, 168}]}, "250"], 
           Annotation[#, 250, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{149, 194, 145, 197, 151, 202, 160, 167}], 
             LineBox[{123, 180, 119, 184, 127, 189, 135, 142}]}, "200"], 
           Annotation[#, 200, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{166, 159, 201, 150, 196, 144, 193, 148}], 
             LineBox[{122, 179, 118, 183, 126, 188, 134, 141}]}, "150"], 
           Annotation[#, 150, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{121, 178, 117, 182, 105, 171, 104, 107, 133, 140}], 
             
             LineBox[{147, 192, 143, 195, 113, 175, 112, 115, 158, 204, 
              165}]}, "100"], Annotation[#, 100, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{125, 177, 102, 169, 101, 170, 103, 172, 106, 108, 190, 
              139}], 
             
             LineBox[{164, 116, 114, 176, 111, 174, 109, 173, 110, 191, 
              146}]}, "50"], Annotation[#, 50, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0., 1.}], 
        ArrowBox[{{0., 1.}, {-0.0062862063307488735`, 1.}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7663828605875177, 
                0.2783322162818792, 0.05204309905278229}}, {{
                0.8029657077933638, 0.3432058232293944, 
                0.08675140800998064}}, {{0.83954855499921, 0.4080794301769095,
                 0.12145971696717899`}}, {{0.8780733399749292, 
                0.5041588649308337, 0.2181942080887163}}, {{
                0.9174278503207854, 0.6135715111958547, 
                0.3414304222587003}}, {{0.9567823606666418, 
                0.7229841574608762, 0.46466663642868455`}}, {{1., 0.843137, 
                0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.}, {7.5, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{
                    7.5, -22.500000000000007`}, 
                    Offset[{4., 0}, {7.5, -22.500000000000007`}]}, {{7.5, 
                    22.500000000000007`}, 
                    Offset[{4., 0}, {7.5, 22.500000000000007`}]}, {{7.5, 
                    67.49999999999999}, 
                    Offset[{4., 0}, {7.5, 67.49999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.500000000000007`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.500000000000007`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["350", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.027895889481561565`", ",", "379.9081146653228`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "50.`", ",", "100.`", ",", "150.`", ",", "200.`", ",", 
                 "250.`", ",", "300.`", ",", "350.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxdlAtMlWUYgH8uPxwR8a8UYcwIlWYbLjaFyCx+NUi0JShmpKGCosTUTfDa
dKjhDZ2ZVhpJWzU0pvNMm2Ie5R86pymQc4aGSgeVUQiBBy/IpTrY87LvfNsZ
e/bwvXvOt503ImPptAXemqZ1/fdx//3/WKN7j7/1/gz3eVgOz+zle8LP/t3u
gKc/8/Fw6rP7wj3/9B4Pr5vwj6XuE2Cq8w0P1qzbt9zHS/pg+mD6YPpg+mD6
VK+bMH3qfMODNev559yno5w+mD6YPpg+mD6YPtXrJkyfOt/wYM2qvuw+96UP
pg+mD6YPpg+mT/W6CdOnzjc8WLMae9+zUvpg+mD6YPpg+mD6VK+bMH3qfMOD
Nev4KfepjacPpg+mD6YPpg+mT/W6CdOnzjc8WLP27nOfNumD6YPpg+mD6YPp
U71uwvSp8w0P1qwJb7tPl/TB9MH0wfTB9MH0qV43YfrU+YYHa9aKle7jY9IH
0wfTB9MH0wfTp3rdhOlT5xserFmVvb8Xm/TB9MH0wfTB9MH0qV43YfrU+Ybp
2dNVdW36gSBf2Ycwfaq3O2D6YPpg+lSvmzB96nxDmL7DM7/onrVMkz6YPtXb
HTB9MH0wfarXTZg+db4hTF9W/syD0asfy76B6VO93QHTB9MH06d63YTpU+cb
wvRd2xj2amFeu/xeYPpUb3fA9MH0wfSpXjdh+tT5hjB9SQEb3giI7BH+O88n
O+5nb/n94GE8/XhYvW93qPftDjzfDw/j+b54GM/3x8Pqfd1U7+smnvfBw2q/
Yar9hnjeKy3/1rQfjunCKfll/s58m7wfHsbzXnhYvW93qPftDjzvhYfxvBce
xvNeeFi9r5vqfd3E8154WO03TLXfEL/rtYTxjcc7ZL9VhcaM+iSkRbhtS/mR
KZuuCJ+MaHqaPuKG7LPQ3AXZFa5W4bNDjUGLizuFY+d/VFc4wkf22faTR8c4
V9uE64Ns22KrBwjvdy2J7xrZLfvMNencnpR1D4SHrc46WPRenbCRucX3xbLz
sr9Cl6z8bbZPk/CJeQ2D06KeCEdvmvTH+hwv2V8Ftftjaiw/4dpo17ao4EDh
1KWJX4Uv6pH9VXqu6H7eaZdwz+j6jXsi64XLAvYV+q07Kfvq0IoLLwcXNApr
DUFnYpofCc+4MHtM6yVN9lXp0KNbEyL8+vZZrn/d1yv6C58dvO7joMhu2Veh
OVfLM9c8ED7l9X3q3bfqhG+nDDy0vea87KfLr6Tlx/VvEt4VX/NXYvQT4aEP
rV9WLfaS/bRscvBLVRV+whe+zVk+PCRQuOP1CtvY8B7ZP/M/fHPZ1epHsn+m
7hySvjPPJT5vTuTOlMmN4pMu3si6uNsp/klyfpXzwAnxGXNv5s4JPCP7JXZK
QVja3HrZL/Ocv050Bv8pPjF5cVzN7y7xs8J2vxsW+1h869Mhd9YX9Ij3uVPc
mdGqyX6pnOZMDN7rK/vlg7j25LIEP/HDDsZ+k9PcT/zhHUklA4r6i1/VXdhm
TRgoflzL6KSSzZ2yX6a2rK2Lau7bT59P3FrcebNV/KTNJdm+BQ3iizPXVE+8
eF18XPgLCW1PvxMf+E50bZbziuyPjOG+40si78r+qF3VXGFLbBE/yxF1ae3p
dvEhCyMCj1R2iNcX1iwfuahv/zhtWbVR47xlf1y3jf8su1/f/olNPxW9YZe/
+FHpX947k963f7YfMzbVNASK//RY09hBPw0U/y9ZNBeh
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{35, 46, 45}, {46, 35, 36}, {47, 36, 37}, {42, 31, 
              32}, {132, 61, 208}, {131, 62, 209}, {45, 34, 35}, {139, 69, 
              216}, {133, 63, 210}, {138, 68, 215}, {44, 33, 34}, {68, 57, 
              58}, {38, 49, 48}, {42, 53, 52}, {41, 52, 51}, {39, 50, 49}, {
              37, 48, 47}, {43, 32, 33}, {124, 34, 201}, {70, 59, 60}, {48, 
              37, 38}, {137, 67, 214}, {135, 65, 212}, {57, 46, 47}, {49, 38, 
              39}, {55, 44, 45}, {53, 42, 43}, {64, 53, 54}, {54, 43, 44}, {
              66, 55, 56}, {60, 49, 50}, {52, 41, 42}, {63, 52, 53}, {50, 39, 
              40}, {69, 58, 59}, {136, 66, 213}, {134, 64, 211}, {36, 47, 
              46}, {58, 69, 68}, {59, 48, 49}, {56, 45, 46}, {62, 51, 52}, {
              58, 47, 48}, {65, 54, 55}, {59, 70, 69}, {123, 33, 200}, {32, 
              43, 42}, {121, 32, 199}, {31, 42, 41}, {57, 68, 67}, {49, 60, 
              59}, {125, 35, 202}, {127, 37, 204}, {130, 40, 207}, {129, 39, 
              206}, {128, 38, 205}, {126, 36, 203}, {48, 59, 58}, {67, 56, 
              57}, {51, 62, 61}, {46, 57, 56}, {55, 66, 65}, {44, 55, 54}, {
              54, 65, 64}, {47, 58, 57}, {56, 67, 66}, {45, 56, 55}, {43, 54, 
              53}, {53, 64, 63}, {52, 63, 62}, {34, 45, 44}, {33, 44, 43}}], 
             
             PolygonBox[{{202, 35, 34, 124}, {203, 36, 35, 125}, {199, 32, 31,
               122}, {201, 34, 33, 123}, {204, 37, 36, 126}, {200, 33, 32, 
              121}, {211, 64, 65, 135}, {209, 62, 63, 133}, {214, 67, 68, 
              138}, {208, 61, 62, 131}, {206, 39, 38, 128}, {210, 63, 64, 
              134}, {216, 69, 70, 140}, {213, 66, 67, 137}, {215, 68, 69, 
              139}, {212, 65, 66, 136}, {205, 38, 37, 127}, {207, 40, 39, 
              129}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7919336506499893, 0.3236423011526482, 0.07628464347382614], 
           GraphicsGroupBox[{
             
             PolygonBox[{{117, 27, 195}, {133, 73, 209}, {136, 76, 212}, {137,
               77, 213}, {138, 78, 214}, {155, 78, 231}, {135, 75, 211}, {153,
               77, 229}, {151, 76, 227}, {149, 75, 225}, {157, 79, 233}, {143,
               71, 217}, {140, 80, 216}, {141, 72, 219}, {121, 22, 200}, {147,
               74, 223}, {145, 73, 221}, {139, 79, 215}, {134, 74, 210}, {131,
               72, 208}, {111, 22, 190}, {114, 24, 192}, {127, 27, 205}, {124,
               24, 202}, {113, 23, 191}, {115, 25, 193}, {116, 26, 194}, {120,
               30, 198}, {126, 26, 204}, {123, 23, 201}, {128, 28, 206}, {129,
               29, 207}, {118, 28, 196}, {122, 21, 199}, {125, 25, 203}, {119,
               29, 197}}], 
             
             PolygonBox[{{201, 23, 24, 124}, {205, 27, 28, 128}, {203, 25, 26,
               126}, {206, 28, 29, 129}, {202, 24, 25, 125}, {233, 79, 80, 
              159}, {204, 26, 27, 127}, {191, 23, 22, 111}, {199, 21, 22, 
              121}, {207, 29, 30, 130}, {193, 25, 24, 114}, {200, 22, 23, 
              123}, {194, 26, 25, 115}, {197, 29, 28, 118}, {190, 22, 21, 
              112}, {192, 24, 23, 113}, {217, 71, 72, 141}, {212, 76, 75, 
              135}, {221, 73, 74, 147}, {196, 28, 27, 117}, {209, 73, 72, 
              131}, {210, 74, 73, 133}, {211, 75, 74, 134}, {208, 72, 71, 
              132}, {214, 78, 77, 137}, {216, 80, 79, 139}, {215, 79, 78, 
              138}, {213, 77, 76, 136}, {231, 78, 79, 157}, {229, 77, 78, 
              155}, {219, 72, 73, 145}, {227, 76, 77, 153}, {223, 74, 75, 
              149}, {198, 30, 29, 119}, {225, 75, 76, 151}, {195, 27, 26, 
              116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8467160848861445, 0.4207898546568075, 0.12825997612622878`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{108, 18, 187}, {118, 18, 197}, {119, 19, 198}, {110,
               20, 189}, {107, 17, 186}, {109, 19, 188}, {103, 13, 182}, {101,
               12, 181}, {112, 11, 190}, {113, 13, 192}, {117, 17, 196}, {116,
               16, 195}, {115, 15, 194}, {114, 14, 193}, {106, 16, 185}, {105,
               15, 184}, {111, 12, 191}, {104, 14, 183}}], 
             
             PolygonBox[{{222, 221, 147, 148}, {187, 18, 17, 107}, {186, 17, 
              16, 106}, {188, 19, 18, 108}, {198, 19, 20, 120}, {197, 18, 19, 
              119}, {228, 227, 153, 154}, {191, 12, 13, 113}, {195, 16, 17, 
              117}, {224, 223, 149, 150}, {192, 13, 14, 114}, {189, 20, 19, 
              109}, {194, 15, 16, 116}, {226, 225, 151, 152}, {196, 17, 18, 
              118}, {154, 153, 229, 230}, {185, 16, 15, 105}, {184, 15, 14, 
              104}, {183, 14, 13, 103}, {156, 155, 231, 232}, {152, 151, 227, 
              228}, {232, 231, 157, 158}, {158, 157, 233, 234}, {234, 233, 
              159, 160}, {150, 149, 225, 226}, {230, 229, 155, 156}, {148, 
              147, 223, 224}, {142, 141, 219, 220}, {182, 13, 12, 101}, {220, 
              219, 145, 146}, {146, 145, 221, 222}, {218, 217, 141, 142}, {
              190, 11, 12, 111}, {144, 143, 217, 218}, {181, 12, 11, 102}, {
              193, 14, 15, 115}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9053623713493014, 0.5800273006054154, 0.3036481213857891], 
           GraphicsGroupBox[{
             
             PolygonBox[{{156, 88, 230}, {106, 6, 186}, {107, 7, 187}, {104, 
              4, 184}, {173, 87, 247}, {108, 8, 188}, {171, 86, 245}, {167, 
              84, 241}, {109, 9, 189}, {103, 3, 183}, {163, 81, 235}, {165, 
              83, 239}, {161, 82, 237}, {101, 2, 182}, {105, 5, 185}, {177, 
              89, 251}, {142, 82, 218}, {175, 88, 249}, {158, 89, 232}, {160, 
              90, 234}, {152, 86, 226}, {154, 87, 228}, {148, 84, 222}, {102, 
              1, 181}, {169, 85, 243}, {146, 83, 220}, {150, 85, 224}}], 
             PolygonBox[{{187, 7, 8, 108}, {188, 8, 9, 109}, {185, 5, 6, 
              106}, {224, 85, 84, 148}, {189, 9, 10, 110}, {226, 86, 85, 
              150}, {182, 2, 3, 103}, {228, 87, 86, 152}, {239, 83, 84, 
              167}, {222, 84, 83, 146}, {234, 90, 89, 158}, {183, 3, 4, 
              104}, {243, 85, 86, 171}, {241, 84, 85, 169}, {245, 86, 87, 
              173}, {247, 87, 88, 175}, {181, 1, 2, 101}, {232, 89, 88, 
              156}, {249, 88, 89, 177}, {251, 89, 90, 179}, {237, 82, 83, 
              165}, {186, 6, 7, 107}, {184, 4, 5, 105}, {220, 83, 82, 142}, {
              235, 81, 82, 161}, {218, 82, 81, 144}, {230, 88, 87, 154}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9642953423886204, 0.7438716035075518, 0.4881930738410208], 
           GraphicsGroupBox[{
             
             PolygonBox[{{248, 247, 175, 176}, {174, 173, 247, 248}, {178, 
              177, 251, 252}, {166, 165, 239, 240}, {176, 175, 249, 250}, {
              162, 161, 237, 238}, {168, 167, 241, 242}, {170, 169, 243, 
              244}, {252, 251, 179, 180}, {238, 237, 165, 166}, {250, 249, 
              177, 178}, {246, 245, 173, 174}, {172, 171, 245, 246}, {242, 
              241, 169, 170}, {236, 235, 161, 162}, {244, 243, 171, 172}, {
              240, 239, 167, 168}, {164, 163, 235, 236}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{176, 98, 248}, {166, 93, 238}, {162, 92, 236}, {168,
               94, 240}, {170, 95, 242}, {174, 97, 246}, {172, 96, 244}, {178,
               99, 250}, {180, 100, 252}}], 
             
             PolygonBox[{{242, 95, 94, 168}, {244, 96, 95, 170}, {250, 99, 98,
               176}, {240, 94, 93, 166}, {238, 93, 92, 162}, {236, 92, 91, 
              164}, {248, 98, 97, 174}, {252, 100, 99, 178}, {246, 97, 96, 
              172}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{164, 236, 162, 238, 166, 240, 168, 242, 170, 244, 172, 
              246, 174, 248, 176, 250, 178, 252, 180}]}, "10"], 
           Annotation[#, 10, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{179, 251, 177, 249, 175, 247, 173, 245, 171, 243, 169, 
              241, 167, 239, 165, 237, 161, 235, 163}]}, "8"], 
           Annotation[#, 8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{102, 181, 101, 182, 103, 183, 104, 184, 105, 185, 106, 
              186, 107, 187, 108, 188, 109, 189, 110}], 
             
             LineBox[{144, 218, 142, 220, 146, 222, 148, 224, 150, 226, 152, 
              228, 154, 230, 156, 232, 158, 234, 160}]}, "6"], 
           Annotation[#, 6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{112, 190, 111, 191, 113, 192, 114, 193, 115, 194, 116, 
              195, 117, 196, 118, 197, 119, 198, 120}], 
             
             LineBox[{159, 233, 157, 231, 155, 229, 153, 227, 151, 225, 149, 
              223, 147, 221, 145, 219, 141, 217, 143}]}, "4"], 
           Annotation[#, 4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{122, 199, 121, 200, 123, 201, 124, 202, 125, 203, 126, 
              204, 127, 205, 128, 206, 129, 207, 130}], 
             
             LineBox[{132, 208, 131, 209, 133, 210, 134, 211, 135, 212, 136, 
              213, 137, 214, 138, 215, 139, 216, 140}]}, "2"], 
           Annotation[#, 2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1., 0.1}], 
        ArrowBox[{{1., 0.1}, {1., 0.09622530305709945}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7919336506499893, 
                0.32364230115264814`, 0.07628464347382614}}, {{
                0.8467160848861444, 0.4207898546568075, 
                0.12825997612622878`}}, {{0.9053623713493014, 
                0.5800273006054155, 0.3036481213857892}}, {{
                0.9642953423886204, 0.7438716035075518, 
                0.48819307384102073`}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -90.00000000000001}, {7.5, 90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -60.}, 
                    Offset[{4., 0}, {7.5, -60.}]}, {{7.5, -30.}, 
                    Offset[{4., 0}, {7.5, -30.}]}, {{
                    7.5, -1.1203851362875822`*^-14}, 
                    Offset[{4., 0}, {7.5, -1.1203851362875822`*^-14}]}, {{7.5,
                     30.}, 
                    Offset[{4., 0}, {7.5, 30.}]}, {{7.5, 59.999999999999986`}, 
                    Offset[{4., 0}, {7.5, 59.999999999999986`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -60.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -30.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -1.1203851362875822`*^-14}], {-1, 
                    0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 30.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 59.999999999999986`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.06458277106188802`", ",", "10.211703974250959`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "2.`", ",", "4.`", ",", "6.`", ",", "8.`", ",", "10.`"}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
4OD/A6bExtY=
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJw1kalOg1EQhf/LUor7W1BtSWi6GFqKoIuireviujiWhAcAAQlYkCwWcGwW
Ak8AHiQvgAXZBNcEzuR+iC83986dmTNn0tu7vZ2JIAi6YlKkREzERUfURUMs
uSDo6XwTLdEP/H1NtHmrk2P3B2Kh8grO138VyyIjsuJCFMRYrIicyItfznNq
Deh3Qu5IfIs5cShK1Mvxt42Oa1EWU87fh8StdpJZ2+g07bPO67hiZsutiB+x
II7Fp/0TB9QI8avKLEW0tqjdwNsO+hLkmY4tsSlW1Xdd5we59rZBzzhzDqnR
xXeLW868cms67wJ/FvH4Fl+izu/AZnwkXkOv1Z6xP+KeHZgHCbRm6WczNNGd
J1Z2XtO72BPTYh+vzbcb8kvoyVG/hE9VvM0QL+JjBE1nzG/ej8m5xIsoO0g7
r+sZP3r4V0ZznR5N7l/4fySe8MH8C9Ef4W8FfYvO7/GFXQ3YQ4gXCTw0nSn2
1udfjLckdWPkRZnh3/s4sRFenIo/Q/A/Hw==
              "]], 
             PolygonBox[CompressedData["
1:eJwt0LFOAkEQxvE9giAd0Y4ciReJjXdoARwVFzsSu0voSEh4AG3IxVZKwFbs
FGwl8ATaY8sD2EKrtfDf3Ff8MruZ3ZnZ9fr38V3GGFNCFn9wUcYEQ61PscOD
1gX8IO8YUyVeYYYVbhDac+SmRB8N5Ni/EK9xgT3maJq0hq31SWwjxqWT3rF3
63jFLyo4xwj/CNTjGSecj4gtfGiGUD2W+MKtZvTIPertFdVe6K6d4Yz8m3pH
qn3spG+1b3jHWLMEmmWAIxSR4ElvdfW3iXK25xYb9NCxfaj9rbWd0We/1l90
UWN/AE4hJ1s=
              "]]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7597140062148782, 0.26650611004890945`, 0.045715962822687306`], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwt0bsrxXEYx/Hnd8gxKIV0LHIsBgwK5ZTFYrEwmOUPcCnJRGxuWdw6kWsm
ctsxY/QHmBSTYjLg/en7GV49T8/v+X0vz7c4PjkykYuIdlRgBU34Qj6L6CMe
4w9d2EVVlvp38IlWLCNHvZu4jw80Ywk1Wfq3jDr3HGLT+/6Y8i2cR+pR7zex
Dev49V6r2HauWoG+EvFMa5APEu9QTz5AvMKpz6+zRJbW3ECRfIh4j+tI922k
1oJ+8gvt43Vu8Kb9sKAzUh8mPuIVDZhDp9d8wCxqMYNe6qPEZ7y7ru+3kc6v
exz5DJp9h/ufsOY5aB491MeIL34nvdciTrxONd8PPE+91RSxEtPY82z1VpeR
7qU5zfteut8/OZU2JA==
              "]], 
             PolygonBox[CompressedData["
1:eJwt0LGOQVEQxvFzRbHZRiPsbQSNAoUEyUo0Go2GQqMRD0AEoSJa4gW28wYS
PWp0sv2WViVegP/EV/xyztw5M/fMSXR6jW7AORdFEA98wccCY3wijD+MEFL+
iqFiqx1gjxqayHjOfaDE/htrnJRro0Buw1pRTYJ4rt7W8x9LJHUnu9sFLdSR
5/xZ/aw+S3zQ3nomiWeqtR53HFVbRZr8D2sOKTjilfb27Ym+Zgtp9oj3nsVm
2mKnXmXEvfeb+PrnFBO9XQw3/Gp2u3OR8y9fLiPR
              "]], 
             
             PolygonBox[{{246, 245, 130, 30, 142}, {266, 265, 152, 49, 164}, {
              157, 52, 172, 272, 273}, {253, 252, 151, 43, 148}, {261, 260, 
              160, 52, 156}, {143, 39, 140, 245, 246}, {137, 34, 150, 252, 
              253}, {277, 276, 162, 57, 177}, {178, 66, 175, 276, 277}, {149, 
              43, 159, 260, 261}, {166, 58, 163, 265, 266}, {273, 272, 173, 
              61, 174}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7923935907487393, 0.3244579285699952, 0.0767210158250374], 
           GraphicsGroupBox[{
             
             PolygonBox[{{291, 67, 181}, {135, 33, 238}, {107, 3, 109}, {238, 
              33, 136}, {277, 67, 178}, {144, 42, 247}, {310, 97, 213}, {261, 
              42, 149}, {302, 77, 194}, {148, 33, 253}, {126, 14, 232}, {290, 
              77, 192}, {246, 40, 143}, {273, 51, 157}, {117, 14, 113}, {301, 
              87, 204}, {253, 33, 137}, {142, 40, 246}, {174, 51, 273}, {232, 
              14, 117}, {247, 42, 145}, {177, 67, 277}, {311, 87, 205}, {156, 
              42, 261}}], 
             
             PolygonBox[{{165, 164, 268, 269}, {269, 268, 154, 155}, {194, 77,
               67, 291}, {231, 230, 127, 128}, {281, 280, 166, 167}, {109, 3, 
              14, 114}, {279, 278, 179, 180}, {204, 87, 97, 310}, {192, 77, 
              87, 301}, {180, 179, 280, 281}, {178, 67, 77, 290}, {205, 87, 
              77, 302}, {113, 14, 3, 112}, {267, 266, 164, 165}, {167, 166, 
              266, 267}, {155, 154, 256, 257}, {215, 97, 87, 311}, {128, 127, 
              240, 241}}], 
             
             PolygonBox[{{251, 250, 149, 42, 144}, {257, 256, 143, 40, 153}, {
              114, 14, 126, 230, 231}, {181, 67, 177, 278, 279}, {259, 258, 
              157, 51, 158}, {145, 42, 156, 258, 259}, {241, 240, 137, 33, 
              135}, {136, 33, 148, 250, 251}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8250731752826005, 0.382409747091081, 0.10772606882738747`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{217, 98, 214}, {153, 50, 257}, {257, 50, 155}, {144,
               32, 251}, {193, 68, 293}, {158, 41, 259}, {235, 32, 132}, {267,
               59, 167}, {259, 41, 145}, {231, 13, 114}, {165, 59, 267}, {311,
               98, 215}, {284, 59, 170}, {251, 32, 136}, {131, 32, 235}, {114,
               13, 109}, {228, 23, 125}, {293, 68, 184}, {279, 68, 181}, {182,
               59, 284}, {241, 23, 128}, {223, 13, 110}, {135, 23, 241}, {180,
               68, 279}}], 
             
             PolygonBox[{{206, 205, 302, 303}, {128, 23, 13, 231}, {195, 194, 
              291, 292}, {303, 302, 194, 195}, {110, 13, 23, 228}}], 
             
             PolygonBox[{{292, 291, 181, 68, 193}, {125, 23, 135, 238, 239}, {
              132, 32, 144, 247, 248}, {108, 107, 109, 13, 223}, {184, 68, 
              180, 281, 282}, {214, 98, 311, 205, 206}, {170, 59, 165, 269, 
              270}, {239, 238, 136, 32, 131}, {282, 281, 167, 59, 182}, {270, 
              269, 155, 50, 168}, {248, 247, 145, 41, 146}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8583022579715265, 0.44919168626428996`, 0.1562822880894322], 
           GraphicsGroupBox[{
             
             PolygonBox[{{223, 2, 108}, {312, 88, 207}, {101, 2, 103}, {131, 
              22, 239}, {121, 22, 225}, {239, 22, 125}, {304, 78, 197}, {193, 
              78, 292}, {292, 78, 195}, {206, 88, 214}, {303, 88, 206}, {225, 
              22, 122}}], 
             
             PolygonBox[{{185, 184, 282, 283}, {111, 110, 228, 229}, {249, 
              248, 146, 147}, {207, 88, 78, 304}, {183, 182, 284, 285}, {236, 
              235, 132, 133}, {133, 132, 248, 249}, {294, 293, 184, 185}, {
              195, 78, 88, 303}, {271, 270, 168, 169}, {285, 284, 170, 171}, {
              283, 282, 182, 183}, {171, 170, 270, 271}}], 
             
             PolygonBox[{{103, 2, 223, 110, 111}, {197, 78, 193, 293, 294}, {
              122, 22, 131, 235, 236}, {229, 228, 125, 22, 121}, {218, 217, 
              214, 88, 312}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8934577788198491, 0.5469303833802382, 0.2663696264515876], 
           GraphicsGroupBox[{
             
             PolygonBox[{{196, 69, 296}, {283, 69, 185}, {229, 12, 111}, {271,
               60, 171}, {249, 31, 133}, {296, 69, 188}, {121, 12, 229}, {222,
               12, 104}, {312, 99, 218}, {220, 99, 216}, {169, 60, 271}, {183,
               69, 283}, {111, 12, 103}, {147, 31, 249}}], 
             
             PolygonBox[{{198, 197, 294, 295}, {208, 207, 304, 305}, {123, 
              122, 236, 237}, {305, 304, 197, 198}, {226, 225, 122, 123}}], 
             
             PolygonBox[{{188, 69, 183, 285, 286}, {237, 236, 133, 31, 134}, {
              216, 99, 312, 207, 208}, {286, 285, 171, 60, 186}, {102, 101, 
              103, 12, 222}, {104, 12, 121, 225, 226}, {295, 294, 185, 69, 
              196}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9286132996681717, 0.6446690804961865, 0.37645696481374313`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{134, 21, 237}, {222, 1, 102}, {313, 89, 209}, {305, 
              89, 208}, {196, 79, 295}, {208, 89, 216}, {306, 79, 200}, {295, 
              79, 198}, {237, 21, 123}}], 
             
             PolygonBox[{{209, 89, 79, 306}, {198, 79, 89, 305}, {105, 104, 
              226, 227}, {189, 188, 286, 287}, {297, 296, 188, 189}, {287, 
              286, 186, 187}}], 
             
             PolygonBox[{{106, 1, 222, 104, 105}, {200, 79, 196, 296, 297}, {
              227, 226, 123, 21, 124}, {221, 220, 216, 89, 313}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9637688205164944, 0.7424077776121348, 0.4865443031758985], 
           GraphicsGroupBox[{
             
             PolygonBox[{{105, 11, 106}, {287, 70, 189}, {124, 11, 227}, {227,
               11, 105}, {187, 70, 287}, {313, 100, 221}}], 
             
             PolygonBox[{{201, 200, 297, 298}, {307, 306, 200, 201}, {210, 
              209, 306, 307}}], 
             
             PolygonBox[{{219, 100, 313, 209, 210}, {298, 297, 189, 70, 
              199}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{307, 90, 210}, {210, 90, 219}, {298, 80, 201}, {199,
               80, 298}}], 
             PolygonBox[{{201, 80, 90, 307}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{199, 298, 201, 307, 210, 219}]}, "20"], 
           Annotation[#, 20, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{106, 105, 227, 124}], 
             LineBox[{221, 313, 209, 306, 200, 297, 189, 287, 187}]}, 
            "17.5`"], Annotation[#, 17.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{102, 222, 104, 226, 123, 237, 134}], 
             
             LineBox[{186, 286, 188, 296, 196, 295, 198, 305, 208, 216, 
              220}]}, "15"], Annotation[#, 15, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{218, 312, 207, 304, 197, 294, 185, 283, 183, 285, 171, 
              271, 169}], 
             
             LineBox[{101, 103, 111, 229, 121, 225, 122, 236, 133, 249, 
              147}]}, "12.5`"], Annotation[#, 12.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{108, 223, 110, 228, 125, 239, 131, 235, 132, 248, 146}], 
             
             LineBox[{168, 270, 170, 284, 182, 282, 184, 293, 193, 292, 195, 
              303, 206, 214, 217}]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{153, 257, 155, 269, 165, 267, 167, 281, 180, 279, 181, 
              291, 194, 302, 205, 311, 215}], 
             
             LineBox[{158, 259, 145, 247, 144, 251, 136, 238, 135, 241, 128, 
              231, 114, 109, 107}]}, "7.5`"], 
           Annotation[#, 7.5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{112, 113, 117, 232, 126, 230, 127, 240, 137, 253, 148, 
              250, 149, 261, 156, 258, 157, 273, 174}], 
             
             LineBox[{142, 246, 143, 256, 154, 268, 164, 266, 166, 280, 179, 
              278, 177, 277, 178, 290, 192, 301, 204, 310, 213}]}, "5"], 
           Annotation[#, 5, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{115, 116, 118, 233, 129, 243, 138, 242, 139, 254, 150, 
              252, 151, 262, 159, 260, 160, 274, 172, 272, 173, 288, 190, 299,
               202, 308, 211}], 
             
             LineBox[{119, 224, 120, 234, 130, 245, 140, 244, 141, 255, 152, 
              265, 163, 264, 161, 263, 162, 276, 175, 275, 176, 289, 191, 300,
               203, 309, 212}]}, "2.5`"], 
           Annotation[#, 2.5, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0.1, 0.}], 
        ArrowBox[{{0.1, 0.}, {
         0.09622530305709945, -0.0062862063307488735`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7597140062148781, 
                0.2665061100489094, 0.045715962822687306`}}, {{
                0.7923935907487393, 0.3244579285699952, 
                0.0767210158250374}}, {{0.8250731752826005, 0.382409747091081,
                 0.10772606882738747`}}, {{0.8583022579715265, 
                0.44919168626428996`, 0.1562822880894322}}, {{
                0.8934577788198491, 0.5469303833802382, 
                0.26636962645158757`}}, {{0.9286132996681717, 
                0.6446690804961865, 0.3764569648137431}}, {{
                0.9637688205164944, 0.7424077776121348, 
                0.4865443031758985}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -50.000000000000014`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -50.000000000000014`}]}, {{
                    7.500000000000001, -10.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -10.00000000000001}]}, {{
                    7.500000000000001, 29.999999999999982`}, 
                    Offset[{4., 0}, {7.500000000000001, 
                    29.999999999999982`}]}, {{7.500000000000001, 
                    69.99999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    69.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -50.000000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -10.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.999999999999982`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    69.99999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.06382965066837774`", ",", "21.32649286721024`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "2.5`", ",", "5.`", ",", "7.5`", ",", "10.`", ",", "12.5`", 
                 ",", "15.`", ",", "17.5`", ",", "20.`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.683586643944274*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
4sspUXYUHvgfxk4QgA==
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{119, 35, 138}, {198, 35, 123}, {67, 14, 86}, {191, 
              35, 119}, {14, 3, 4}, {91, 25, 88}, {164, 4, 68}, {192, 25, 
              91}, {65, 1, 162}, {64, 2, 163}, {138, 35, 198}}], 
             
             PolygonBox[{{162, 1, 2, 64}, {163, 2, 3, 66}, {123, 35, 25, 
              192}, {88, 25, 14, 69}, {69, 14, 4, 164}, {66, 3, 14, 67}, {89, 
              25, 35, 191}, {86, 14, 25, 89}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7620732569878286, 0.2706898496707547, 0.047954323447663184`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{196, 37, 139}, {191, 24, 89}, {69, 15, 88}, {66, 13,
               163}, {154, 37, 229}, {165, 5, 70}, {64, 12, 162}, {164, 15, 
              69}, {139, 37, 154}, {82, 11, 171}, {80, 12, 173}, {174, 15, 
              71}, {67, 13, 66}, {87, 24, 115}, {229, 37, 148}, {89, 24, 
              86}}], 
             
             PolygonBox[{{173, 12, 13, 84}, {163, 13, 12, 64}, {171, 11, 12, 
              80}, {84, 13, 24, 87}, {162, 12, 11, 65}, {86, 24, 13, 67}, {71,
               15, 5, 165}, {193, 192, 91, 92}, {68, 5, 15, 164}, {124, 123, 
              192, 193}, {199, 198, 123, 124}}], 
             
             PolygonBox[{{115, 24, 191, 119, 120}, {92, 91, 88, 15, 174}, {
              120, 119, 138, 37, 196}, {148, 37, 138, 198, 199}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.799960541456963, 0.33787665957456503`, 0.08390022912046809], 
           GraphicsGroupBox[{
             
             PolygonBox[{{84, 23, 173}, {165, 16, 71}, {176, 16, 74}, {111, 
              23, 190}, {90, 16, 176}, {166, 6, 72}, {87, 23, 84}, {85, 23, 
              111}}], 
             
             PolygonBox[{{155, 154, 229, 230}, {197, 196, 139, 140}, {149, 
              148, 199, 200}, {74, 16, 6, 166}, {140, 139, 154, 155}, {200, 
              199, 124, 125}, {116, 115, 120, 121}, {125, 124, 193, 194}, {
              121, 120, 196, 197}, {70, 6, 16, 165}, {93, 92, 174, 175}, {194,
               193, 92, 93}, {83, 82, 171, 172}, {230, 229, 148, 149}, {172, 
              171, 80, 81}}], 
             
             PolygonBox[{{81, 80, 173, 23, 85}, {175, 174, 71, 16, 90}, {190, 
              23, 87, 115, 116}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8378478259260973, 0.40506346947837524`, 0.11984613479327297`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{175, 26, 93}, {109, 21, 185}, {168, 7, 76}, {85, 22,
               81}, {122, 26, 214}, {73, 7, 168}, {214, 26, 95}, {105, 22, 
              188}, {116, 34, 190}, {90, 26, 175}, {81, 22, 172}, {121, 34, 
              116}, {117, 34, 134}, {197, 34, 121}}], 
             
             PolygonBox[{{177, 176, 74, 75}, {185, 21, 22, 105}, {201, 200, 
              125, 126}, {141, 140, 155, 156}, {75, 74, 166, 167}, {231, 230, 
              149, 150}, {172, 22, 21, 83}, {150, 149, 200, 201}, {126, 125, 
              194, 195}, {156, 155, 230, 231}}], 
             
             PolygonBox[{{112, 111, 190, 34, 117}, {167, 166, 72, 7, 73}, {95,
               26, 90, 176, 177}, {195, 194, 93, 26, 122}, {188, 22, 85, 111, 
              112}, {134, 34, 197, 140, 141}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8776470235091289, 0.5029736281622997, 0.21685922445350297`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{77, 9, 170}, {195, 36, 126}, {97, 18, 181}, {122, 
              36, 195}, {145, 36, 226}, {181, 18, 78}, {94, 17, 179}, {226, 
              36, 207}, {167, 17, 75}, {73, 17, 167}}], 
             
             PolygonBox[{{189, 188, 112, 113}, {168, 18, 17, 73}, {113, 112, 
              117, 118}, {170, 9, 10, 79}, {169, 8, 9, 77}, {78, 18, 8, 
              169}, {106, 105, 188, 189}, {96, 95, 177, 178}, {215, 214, 95, 
              96}, {118, 117, 134, 135}, {135, 134, 141, 142}, {232, 231, 150,
               151}, {110, 109, 185, 186}, {157, 156, 231, 232}, {151, 150, 
              201, 202}, {186, 185, 105, 106}, {142, 141, 156, 157}, {76, 8, 
              18, 168}, {179, 17, 18, 97}}], 
             
             PolygonBox[{{178, 177, 75, 17, 94}, {202, 201, 126, 36, 145}, {
              207, 36, 122, 214, 215}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.91840480051394, 0.6162876091719897, 0.34448968134181257`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{235, 39, 212}, {94, 27, 178}, {210, 31, 221}, {127, 
              27, 218}, {160, 39, 235}, {100, 19, 184}, {132, 33, 224}, {218, 
              27, 99}, {169, 19, 78}, {221, 31, 108}, {118, 33, 113}, {113, 
              33, 189}, {178, 27, 96}, {205, 39, 158}, {77, 19, 169}, {158, 
              39, 160}, {114, 33, 132}, {79, 20, 170}}], 
             
             PolygonBox[{{184, 19, 20, 103}, {233, 232, 151, 152}, {136, 135, 
              142, 143}, {170, 20, 19, 77}, {208, 207, 215, 216}, {203, 202, 
              145, 146}, {227, 226, 207, 208}, {180, 179, 97, 98}, {187, 186, 
              106, 107}, {98, 97, 181, 182}, {152, 151, 202, 203}, {146, 145, 
              226, 227}}], 
             
             PolygonBox[{{212, 39, 157, 232, 233}, {108, 31, 110, 186, 187}, {
              182, 181, 78, 19, 100}, {216, 215, 96, 27, 127}, {107, 106, 189,
               33, 114}, {99, 27, 94, 179, 180}, {143, 142, 157, 39, 205}, {
              224, 33, 118, 135, 136}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9591625775187509, 0.7296015901816794, 0.472120138230122], 
           GraphicsGroupBox[{
             
             PolygonBox[{{187, 32, 108}, {114, 32, 107}, {220, 28, 102}, {98, 
              28, 180}, {103, 30, 184}, {180, 28, 99}, {104, 30, 130}, {107, 
              32, 187}, {129, 28, 220}, {131, 32, 223}}], 
             
             PolygonBox[{{217, 216, 127, 128}, {211, 210, 221, 222}, {128, 
              127, 218, 219}, {133, 132, 224, 225}, {236, 235, 212, 213}, {
              206, 205, 158, 159}, {234, 233, 152, 153}, {159, 158, 160, 
              161}, {137, 136, 143, 144}, {153, 152, 203, 204}, {144, 143, 
              205, 206}, {161, 160, 235, 236}, {228, 227, 208, 209}, {209, 
              208, 216, 217}, {183, 182, 100, 101}, {213, 212, 233, 234}, {
              147, 146, 227, 228}, {204, 203, 146, 147}, {225, 224, 136, 
              137}}], 
             
             PolygonBox[{{101, 100, 184, 30, 104}, {223, 32, 114, 132, 133}, {
              102, 28, 98, 182, 183}, {219, 218, 99, 28, 129}, {222, 221, 108,
               32, 131}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             
             PolygonBox[{{101, 29, 183}, {56, 43, 29}, {183, 29, 102}, {104, 
              29, 101}, {147, 38, 204}, {204, 38, 153}}], 
             
             PolygonBox[{{131, 45, 57, 222}, {137, 48, 59, 225}, {222, 57, 46,
               211}, {228, 60, 38, 147}, {234, 62, 51, 213}, {129, 42, 54, 
              219}, {159, 50, 61, 206}, {128, 40, 53, 217}, {236, 63, 52, 
              161}, {223, 58, 45, 131}, {213, 51, 63, 236}, {217, 53, 41, 
              209}, {219, 54, 40, 128}, {161, 52, 50, 159}, {144, 49, 48, 
              137}, {133, 47, 58, 223}, {206, 61, 49, 144}, {209, 41, 60, 
              228}, {153, 38, 62, 234}, {225, 59, 47, 133}, {220, 55, 42, 
              129}}], 
             
             PolygonBox[{{130, 44, 56, 29, 104}, {102, 29, 43, 55, 
              220}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{130, 104, 101, 183, 102, 220, 129, 219, 128, 217, 209, 
              228, 147, 204, 153, 234, 213, 236, 161, 159, 206, 144, 137, 225,
               133, 223, 131, 222, 211}]}, "1.4`"], 
           Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{103, 184, 100, 182, 98, 180, 99, 218, 127, 216, 208, 
              227, 146, 203, 152, 233, 212, 235, 160, 158, 205, 143, 136, 224,
               132, 114, 107, 187, 108, 221, 210}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{79, 170, 77, 169, 78, 181, 97, 179, 94, 178, 96, 215, 
              207, 226, 145, 202, 151, 232, 157, 142, 135, 118, 113, 189, 106,
               186, 110}]}, "1"], Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{76, 168, 73, 167, 75, 177, 95, 214, 122, 195, 126, 201, 
              150, 231, 156, 141, 134, 117, 112, 188, 105, 185, 109}]}, 
            "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{72, 166, 74, 176, 90, 175, 93, 194, 125, 200, 149, 230, 
              155, 140, 197, 121, 116, 190, 111, 85, 81, 172, 83}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{70, 165, 71, 174, 92, 193, 124, 199, 148, 229, 154, 139,
               196, 120, 115, 87, 84, 173, 80, 171, 82}]}, "0.4`"], 
           Annotation[#, 0.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{65, 162, 64, 163, 66, 67, 86, 89, 191, 119, 138, 198, 
              123, 192, 91, 88, 69, 164, 68}]}, "0.2`"], 
           Annotation[#, 0.2, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0., 1.}], 
        ArrowBox[{{0., 1.}, {-0.0062862063307488735`, 1.}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7620732569878286, 
                0.2706898496707547, 0.047954323447663184`}}, {{
                0.799960541456963, 0.33787665957456503`, 
                0.08390022912046809}}, {{0.8378478259260974, 
                0.40506346947837524`, 0.11984613479327297`}}, {{
                0.8776470235091289, 0.5029736281622997, 
                0.21685922445350297`}}, {{0.9184048005139399, 
                0.6162876091719895, 0.34448968134181246`}}, {{
                0.9591625775187509, 0.7296015901816795, 
                0.472120138230122}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -89.99999999999999}, {
                  7.500000000000001, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -67.5}, 
                    Offset[{4., 0}, {7.500000000000001, -67.5}]}, {{
                    7.500000000000001, -22.49999999999999}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -22.49999999999999}]}, {{
                    7.500000000000001, 22.500000000000007`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    22.500000000000007`}]}, {{7.500000000000001, 
                    67.50000000000003}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    67.50000000000003}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -67.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -22.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    22.500000000000007`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 
                    67.50000000000003}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.03318617211003633`", ",", "1.5003908234564838`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2`", ",", "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", 
                 ",", "1.2`", ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{168, 2, 108}, {65, 1, 149}, {223, 7, 55}, {73, 4, 
              162}, {55, 7, 198}, {192, 6, 132}, {61, 2, 153}, {198, 7, 
              138}, {79, 5, 211}, {174, 3, 114}, {186, 5, 126}, {92, 7, 
              223}, {180, 4, 120}, {86, 6, 217}, {69, 3, 157}}], 
             
             PolygonBox[{{120, 4, 3, 174}, {108, 2, 1, 49}, {162, 4, 5, 79}, {
              138, 7, 6, 192}, {153, 2, 3, 69}, {149, 1, 2, 61}, {132, 6, 5, 
              186}, {217, 6, 7, 92}, {211, 5, 6, 86}, {126, 5, 4, 180}, {157, 
              3, 4, 73}, {114, 3, 2, 168}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7596436593099185, 0.2663813614902026, 0.0456492205568986], 
           GraphicsGroupBox[{
             PolygonBox[{{56, 8, 204}, {204, 8, 144}, {229, 8, 56}, {98, 8, 
              229}}], 
             
             PolygonBox[{{175, 174, 114, 115}, {158, 157, 73, 74}, {218, 217, 
              92, 93}, {181, 180, 120, 121}, {121, 120, 174, 175}, {154, 153, 
              69, 70}, {163, 162, 79, 80}, {115, 114, 168, 169}, {212, 211, 
              86, 87}, {109, 108, 49, 50}, {127, 126, 180, 181}, {150, 149, 
              61, 62}, {187, 186, 126, 127}, {66, 65, 149, 150}, {62, 61, 153,
               154}, {80, 79, 211, 212}, {74, 73, 162, 163}, {133, 132, 186, 
              187}, {70, 69, 157, 158}, {139, 138, 192, 193}, {193, 192, 132, 
              133}, {169, 168, 108, 109}, {93, 92, 223, 224}, {87, 86, 217, 
              218}, {199, 198, 138, 139}}], 
             PolygonBox[{{144, 8, 55, 198, 199}, {224, 223, 55, 8, 98}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8054475322054265, 0.34760692685358624`, 0.08910606148970283], 
           GraphicsGroupBox[{
             
             PolygonBox[{{81, 80, 212, 213}, {159, 158, 74, 75}, {128, 127, 
              181, 182}, {88, 87, 218, 219}, {155, 154, 70, 71}, {200, 199, 
              139, 140}, {140, 139, 193, 194}, {75, 74, 163, 164}, {134, 133, 
              187, 188}, {225, 224, 98, 99}, {164, 163, 80, 81}, {205, 204, 
              144, 145}, {122, 121, 175, 176}, {116, 115, 169, 170}, {151, 
              150, 62, 63}, {94, 93, 224, 225}, {194, 193, 133, 134}, {188, 
              187, 127, 128}, {182, 181, 121, 122}, {213, 212, 87, 88}, {71, 
              70, 158, 159}, {145, 144, 199, 200}, {170, 169, 109, 110}, {230,
               229, 56, 57}, {63, 62, 154, 155}, {219, 218, 93, 94}, {57, 56, 
              204, 205}, {99, 98, 229, 230}, {67, 66, 150, 151}, {176, 175, 
              115, 116}, {110, 109, 50, 51}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8513083345632523, 0.4297473160726854, 0.13438124967081294`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{82, 81, 213, 214}, {146, 145, 200, 201}, {58, 57, 
              205, 206}, {68, 67, 151, 152}, {226, 225, 99, 100}, {72, 71, 
              159, 160}, {195, 194, 134, 135}, {111, 110, 51, 52}, {129, 128, 
              182, 183}, {141, 140, 194, 195}, {117, 116, 170, 171}, {64, 63, 
              155, 156}, {123, 122, 176, 177}, {231, 230, 57, 58}, {76, 75, 
              164, 165}, {183, 182, 122, 123}, {177, 176, 116, 117}, {214, 
              213, 88, 89}, {220, 219, 94, 95}, {89, 88, 219, 220}, {95, 94, 
              225, 226}, {100, 99, 230, 231}, {165, 164, 81, 82}, {152, 151, 
              63, 64}, {160, 159, 75, 76}, {189, 188, 128, 129}, {156, 155, 
              71, 72}, {201, 200, 140, 141}, {206, 205, 145, 146}, {171, 170, 
              110, 111}, {135, 134, 188, 189}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9005824924658251, 0.5667383740536331, 0.2886802264071976], 
           GraphicsGroupBox[{
             
             PolygonBox[{{209, 10, 234}, {105, 12, 238}, {72, 12, 156}, {103, 
              11, 236}, {238, 12, 78}, {64, 11, 152}}], 
             
             PolygonBox[{{90, 89, 220, 221}, {96, 95, 226, 227}, {118, 117, 
              171, 172}, {156, 12, 11, 64}, {166, 165, 82, 83}, {227, 226, 
              100, 101}, {101, 100, 231, 232}, {112, 111, 52, 53}, {161, 160, 
              76, 77}, {77, 76, 165, 166}, {130, 129, 183, 184}, {196, 195, 
              135, 136}, {236, 11, 12, 105}, {221, 220, 95, 96}, {184, 183, 
              123, 124}, {152, 11, 10, 68}, {207, 206, 146, 147}, {234, 10, 
              11, 103}, {178, 177, 117, 118}, {59, 58, 206, 207}, {147, 146, 
              201, 202}, {124, 123, 177, 178}, {172, 171, 111, 112}, {136, 
              135, 189, 190}, {202, 201, 141, 142}, {215, 214, 89, 90}, {83, 
              82, 214, 215}, {190, 189, 129, 130}, {232, 231, 58, 59}, {142, 
              141, 195, 196}}], 
             PolygonBox[{{78, 12, 72, 160, 161}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.949856650368398, 0.7037294320345806, 0.44297920314358186`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{107, 13, 240}, {77, 13, 161}, {161, 13, 78}, {240, 
              13, 85}}], 
             
             PolygonBox[{{228, 227, 101, 102}, {104, 103, 236, 237}, {106, 
              105, 238, 239}, {185, 184, 124, 125}, {167, 166, 83, 84}, {191, 
              190, 130, 131}, {113, 112, 53, 54}, {60, 59, 207, 208}, {235, 
              234, 103, 104}, {148, 147, 202, 203}, {222, 221, 96, 97}, {237, 
              236, 105, 106}, {84, 83, 215, 216}, {91, 90, 221, 222}, {97, 96,
               227, 228}, {131, 130, 184, 185}, {203, 202, 142, 143}, {233, 
              232, 59, 60}, {125, 124, 178, 179}, {137, 136, 190, 191}, {208, 
              207, 147, 148}, {173, 172, 112, 113}, {216, 215, 90, 91}, {143, 
              142, 196, 197}, {197, 196, 136, 137}, {119, 118, 172, 173}, {
              179, 178, 118, 119}, {102, 101, 232, 233}, {210, 209, 234, 
              235}}], 
             
             PolygonBox[{{239, 238, 78, 13, 107}, {85, 13, 77, 166, 
              167}}]}]}, {
           EdgeForm[], 
           RGBColor[1., 0.843137, 0.6], 
           GraphicsGroupBox[{
             PolygonBox[{{167, 14, 85}, {84, 14, 167}, {23, 24, 48}}], 
             
             PolygonBox[{{143, 38, 21, 203}, {97, 27, 41, 222}, {137, 37, 20, 
              197}, {228, 42, 27, 97}, {235, 44, 30, 210}, {148, 39, 22, 
              208}, {131, 36, 19, 191}, {233, 43, 28, 102}, {240, 47, 32, 
              107}, {239, 46, 31, 106}, {237, 45, 29, 104}, {113, 33, 15, 
              173}, {125, 35, 18, 185}, {91, 25, 40, 216}, {185, 18, 36, 
              131}, {54, 16, 33, 113}, {119, 34, 17, 179}, {106, 31, 45, 
              237}, {102, 28, 42, 228}, {107, 32, 46, 239}, {104, 29, 44, 
              235}, {60, 9, 43, 233}, {173, 15, 34, 119}, {222, 41, 25, 91}, {
              208, 22, 9, 60}, {179, 17, 35, 125}, {203, 21, 39, 148}, {191, 
              19, 37, 137}, {197, 20, 38, 143}, {85, 14, 47, 240}}], 
             PolygonBox[{{216, 40, 26, 14, 84}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{210, 235, 104, 237, 106, 239, 107, 240, 85, 167, 84, 
              216, 91, 222, 97, 228, 102, 233, 60, 208, 148, 203, 143, 197, 
              137, 191, 131, 185, 125, 179, 119, 173, 113, 54}]}, "1.4`"], 
           Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{53, 112, 172, 118, 178, 124, 184, 130, 190, 136, 196, 
              142, 202, 147, 207, 59, 232, 101, 227, 96, 221, 90, 215, 83, 
              166, 77, 161, 78, 238, 105, 236, 103, 234, 209}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{68, 152, 64, 156, 72, 160, 76, 165, 82, 214, 89, 220, 
              95, 226, 100, 231, 58, 206, 146, 201, 141, 195, 135, 189, 129, 
              183, 123, 177, 117, 171, 111, 52}]}, "1"], 
           Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{51, 110, 170, 116, 176, 122, 182, 128, 188, 134, 194, 
              140, 200, 145, 205, 57, 230, 99, 225, 94, 219, 88, 213, 81, 164,
               75, 159, 71, 155, 63, 151, 67}]}, "0.8`"], 
           Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{50, 109, 169, 115, 175, 121, 181, 127, 187, 133, 193, 
              139, 199, 144, 204, 56, 229, 98, 224, 93, 218, 87, 212, 80, 163,
               74, 158, 70, 154, 62, 150, 66}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{49, 108, 168, 114, 174, 120, 180, 126, 186, 132, 192, 
              138, 198, 55, 223, 92, 217, 86, 211, 79, 162, 73, 157, 69, 153, 
              61, 149, 65}]}, "0.4`"], 
           Annotation[#, 0.4, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{1., 0.1}], 
        ArrowBox[{{1., 0.1}, {1., 0.09622530305709945}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7596436593099185, 
                0.26638136149020253`, 0.0456492205568986}}, {{
                0.8054475322054265, 0.34760692685358624`, 
                0.08910606148970283}}, {{0.8513083345632523, 
                0.4297473160726854, 0.13438124967081294`}}, {{
                0.9005824924658252, 0.5667383740536333, 
                0.2886802264071976}}, {{0.949856650368398, 0.7037294320345805,
                 0.44297920314358175`}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -90.}, {7.500000000000001, 
                  90.00000000000003}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -64.28571428571428}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -64.28571428571428}]}, {{
                    7.500000000000001, -38.57142857142856}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -38.57142857142856}]}, {{
                    7.500000000000001, -12.857142857142847`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -12.857142857142847`}]}, {{
                    7.500000000000001, 12.85714285714287}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    12.85714285714287}]}, {{7.500000000000001, 
                    38.57142857142859}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    38.57142857142859}]}, {{7.500000000000001, 
                    64.2857142857143}, 
                    Offset[{4., 0}, {7.500000000000001, 64.2857142857143}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {
                    7.500000000000001, -64.28571428571428}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -38.57142857142856}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -12.857142857142847`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    12.85714285714287}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.2\"", 1.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    38.57142857142859}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    64.2857142857143}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.2899100828452562`", ",", "1.5035279820742864`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4`", ",", "0.6`", ",", "0.8`", ",", "1.`", ",", "1.2`", 
                 ",", "1.4`"}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1: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
+AcAD9/L
        "], {{{
           EdgeForm[], 
           RGBColor[0.711529, 0.181058, 0.], 
           GraphicsGroupBox[{
             
             PolygonBox[{{100, 8, 201}, {135, 8, 87}, {154, 1, 65}, {169, 8, 
              135}, {127, 1, 70}, {174, 8, 169}, {201, 8, 174}, {87, 8, 
              100}, {65, 1, 127}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.7798547734903954, 0.3022224175440922, 0.06482469892789602], 
           GraphicsGroupBox[{
             
             PolygonBox[{{131, 6, 81}, {165, 6, 78}, {78, 6, 131}, {197, 6, 
              165}, {149, 14, 118}, {81, 6, 92}, {116, 14, 149}, {122, 14, 
              116}, {92, 6, 197}}], 
             
             PolygonBox[{{88, 87, 100, 101}, {101, 100, 201, 202}, {128, 127, 
              70, 71}, {175, 174, 169, 170}, {155, 154, 65, 66}, {136, 135, 
              87, 88}, {202, 201, 174, 175}, {66, 65, 127, 128}, {170, 169, 
              135, 136}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8321922816347966, 0.3950343004701883, 0.11448038571750889`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{166, 165, 78, 79}, {89, 88, 101, 102}, {156, 155, 
              66, 67}, {171, 170, 136, 137}, {203, 202, 175, 176}, {79, 78, 
              131, 132}, {82, 81, 92, 93}, {132, 131, 81, 82}, {129, 128, 71, 
              72}, {102, 101, 202, 203}, {150, 149, 118, 119}, {93, 92, 197, 
              198}, {117, 116, 149, 150}, {137, 136, 88, 89}, {176, 175, 170, 
              171}, {123, 122, 116, 117}, {67, 66, 128, 129}, {198, 197, 165, 
              166}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.8871080230550983, 0.5292769155755978, 0.24648575915213536`], 
           GraphicsGroupBox[{
             
             PolygonBox[{{96, 9, 107}, {210, 11, 185}, {161, 3, 159}, {5, 2, 
              3}, {181, 10, 98}, {113, 13, 147}, {188, 13, 113}, {109, 10, 
              208}, {105, 11, 111}, {77, 5, 85}, {85, 5, 195}, {140, 9, 96}, {
              179, 9, 140}, {195, 5, 163}, {147, 13, 114}, {153, 13, 188}, {
              107, 9, 206}, {111, 11, 210}, {183, 11, 144}, {192, 3, 161}, {
              144, 11, 105}, {68, 2, 75}, {125, 2, 68}, {185, 11, 183}, {208, 
              10, 181}, {98, 10, 142}}], 
             
             PolygonBox[{{129, 3, 2, 67}, {206, 9, 10, 109}, {163, 5, 3, 
              192}, {75, 2, 5, 77}, {142, 10, 9, 179}, {172, 171, 137, 138}, {
              204, 203, 176, 177}, {90, 89, 102, 103}, {138, 137, 89, 90}, {
              199, 198, 166, 167}, {167, 166, 79, 80}, {83, 82, 93, 94}, {94, 
              93, 198, 199}, {151, 150, 119, 120}, {80, 79, 132, 133}, {177, 
              176, 171, 172}, {103, 102, 203, 204}, {133, 132, 82, 83}}], 
             
             PolygonBox[{{157, 156, 67, 2, 125}, {159, 3, 129, 72, 73}, {124, 
              123, 117, 13, 153}, {114, 13, 117, 150, 151}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9434108306019098, 0.6858088889557592, 0.4227945173664488], 
           GraphicsGroupBox[{
             
             PolygonBox[{{130, 4, 76}, {146, 12, 112}, {191, 15, 190}, {77, 4,
               75}, {212, 12, 187}, {153, 15, 124}}], 
             
             PolygonBox[{{162, 161, 159, 160}, {115, 114, 151, 152}, {143, 
              142, 179, 180}, {134, 133, 83, 84}, {126, 125, 68, 69}, {86, 85,
               195, 196}, {182, 181, 98, 99}, {184, 183, 144, 145}, {141, 140,
               96, 97}, {145, 144, 105, 106}, {97, 96, 107, 108}, {200, 199, 
              167, 168}, {186, 185, 183, 184}, {209, 208, 181, 182}, {108, 
              107, 206, 207}, {110, 109, 208, 209}, {205, 204, 177, 178}, {
              139, 138, 90, 91}, {158, 157, 125, 126}, {95, 94, 199, 200}, {
              164, 163, 192, 193}, {84, 83, 94, 95}, {180, 179, 140, 141}, {
              173, 172, 138, 139}, {193, 192, 161, 162}, {196, 195, 163, 
              164}, {152, 151, 120, 121}, {91, 90, 103, 104}, {207, 206, 109, 
              110}, {160, 159, 73, 74}, {104, 103, 204, 205}, {99, 98, 142, 
              143}, {148, 147, 114, 115}, {178, 177, 172, 173}, {211, 210, 
              185, 186}}], 
             
             PolygonBox[{{190, 15, 153, 188, 189}, {189, 188, 113, 12, 212}, {
              187, 12, 111, 210, 211}, {76, 4, 80, 133, 134}, {112, 12, 113, 
              147, 148}, {194, 4, 77, 85, 86}, {168, 167, 80, 4, 194}, {69, 
              68, 75, 4, 130}, {106, 105, 111, 12, 146}}]}]}, {
           EdgeForm[], 
           RGBColor[
           0.9999999999999999, 0.8431369999999999, 0.5999999999999999], 
           GraphicsGroupBox[{
             
             PolygonBox[{{145, 56, 33, 184}, {207, 57, 35, 108}, {162, 20, 47,
               193}, {134, 48, 21, 76}, {86, 24, 49, 194}, {184, 33, 36, 
              186}, {189, 41, 43, 190}, {106, 34, 56, 145}, {196, 50, 24, 
              86}, {91, 7, 51, 139}, {76, 21, 46, 130}, {164, 22, 50, 196}, {
              130, 46, 17, 69}, {211, 60, 39, 187}, {115, 40, 61, 148}, {212, 
              62, 41, 189}, {139, 51, 26, 173}, {112, 38, 59, 146}, {121, 42, 
              63, 152}, {209, 58, 37, 110}, {168, 25, 52, 200}, {126, 45, 16, 
              158}, {194, 49, 25, 168}, {193, 47, 22, 164}, {160, 19, 20, 
              162}, {187, 39, 62, 212}, {148, 61, 38, 112}, {186, 36, 60, 
              211}, {110, 37, 57, 207}, {152, 63, 40, 115}, {141, 53, 29, 
              180}, {104, 31, 7, 91}, {182, 32, 58, 209}, {146, 59, 34, 
              106}, {108, 35, 30, 97}, {143, 54, 64, 99}, {178, 28, 55, 
              205}, {99, 64, 32, 182}, {69, 17, 45, 126}, {173, 26, 28, 
              178}, {205, 55, 31, 104}, {180, 29, 54, 143}, {200, 52, 27, 
              95}, {74, 18, 19, 160}, {95, 27, 23, 84}, {97, 30, 53, 141}, {
              190, 43, 44, 191}, {84, 23, 48, 134}}]}]}}, {{}, 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             
             LineBox[{158, 126, 69, 130, 76, 134, 84, 95, 200, 168, 194, 86, 
              196, 164, 193, 162, 160, 74}], 
             
             LineBox[{191, 190, 189, 212, 187, 211, 186, 184, 145, 106, 146, 
              112, 148, 115, 152, 121}], 
             LineBox[{91, 139, 173, 178, 205, 104, 91}], 
             LineBox[{97, 141, 180, 143, 99, 182, 209, 110, 207, 108, 97}]}, 
            "1.4`"], Annotation[#, 1.4, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{124, 153, 188, 113, 147, 114, 151, 120}], 
             LineBox[{73, 159, 161, 192, 163, 195, 85, 77, 75, 68, 125, 157}], 
             LineBox[{83, 133, 80, 167, 199, 94, 83}], 
             LineBox[{90, 138, 172, 177, 204, 103, 90}], 
             LineBox[{140, 96, 107, 206, 109, 208, 181, 98, 142, 179, 140}], 
             LineBox[{144, 105, 111, 210, 185, 183, 144}]}, "1.2`"], 
           Annotation[#, 1.2, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{72, 129, 67, 156}], 
             LineBox[{119, 150, 117, 123}], 
             LineBox[{82, 132, 79, 166, 198, 93, 82}], 
             LineBox[{89, 137, 171, 176, 203, 102, 89}]}, "1"], 
           Annotation[#, 1, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{118, 149, 116, 122}], 
             LineBox[{71, 128, 66, 155}], 
             LineBox[{131, 81, 92, 197, 165, 78, 131}], 
             LineBox[{88, 136, 170, 175, 202, 101, 88}]}, "0.8`"], 
           Annotation[#, 0.8, "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              AbsoluteThickness[1.6]], 
             LineBox[{70, 127, 65, 154}], 
             LineBox[{135, 87, 100, 201, 174, 169, 135}]}, "0.6`"], 
           Annotation[#, 0.6, "Tooltip"]& ], {}, {}}}], {
        RGBColor[0, 0, 1], 
        PointSize[0.05], 
        PointBox[{0.1, 0.}], 
        ArrowBox[{{0.1, 0.}, {
         0.09622530305709945, -0.0062862063307488735`}}]}}, {
      DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]}, DisplayFunction :> Identity, Frame -> 
       True, FrameStyle -> Automatic, FrameTicks -> {{Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}, {
         Charting`FindScaledTicks[
           (Charting`SimpleTicks[#, #2, 6]& )[
            SlotSequence[1]], {Identity, Identity}]& , None}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, 
       Method -> {"DefaultBoundaryStyle" -> Automatic}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& }}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               
               RasterBox[{{{0.711529, 0.181058, 0.}}, {{0.7798547734903954, 
                0.3022224175440922, 0.06482469892789602}}, {{
                0.8321922816347966, 0.3950343004701883, 
                0.11448038571750889`}}, {{0.8871080230550983, 
                0.5292769155755979, 0.2464857591521355}}, {{
                0.9434108306019099, 0.6858088889557592, 
                0.4227945173664487}}, {{1., 0.843137, 0.6}}}, {{
                  Rational[-15, 2], -90}, {
                  Rational[15, 2], 90}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -90}, {
                    Rational[-15, 2], -90}, {
                    Rational[-15, 2], 90}, {
                    Rational[15, 2], 90}, {
                    Rational[15, 2], -90}}, {{
                   7.5, -90}, {-7.5, -90}, {-7.5, 90}, {7.5, 90}, {
                   7.5, -90}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 
                 LineBox[{{7.500000000000001, -89.99999999999999}, {
                  7.500000000000001, 90.00000000000001}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -60.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -60.00000000000001}]}, {{
                    7.500000000000001, -29.999999999999996`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -29.999999999999996`}]}, {{
                    7.500000000000001, 0.}, 
                    Offset[{4., 0}, {7.500000000000001, 0.}]}, {{
                    7.500000000000001, 29.999999999999996`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    29.999999999999996`}]}, {{7.500000000000001, 
                    59.99999999999999}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    59.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -60.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -29.999999999999996`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 0.}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.2\"", 1.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.999999999999996`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.4\"", 1.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    59.99999999999999}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 180}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"VibrantColorDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.43890322289749767`", ",", "1.5010172205037566`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6`", ",", "0.8`", ",", "1.`", ",", "1.2`", ",", "1.4`"}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "180"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6828856244854097`*^9, 3.682885658385309*^9, 3.683040967486393*^9, 
   3.683041406891592*^9, 3.6830415613102627`*^9, 3.6830710614342594`*^9, 
   3.683072088549097*^9, {3.683482731436929*^9, 3.6834827605633583`*^9}, {
   3.6834828228719234`*^9, 3.683482834540708*^9}, {3.6834828850273848`*^9, 
   3.6834829022048435`*^9}, {3.6834831184908266`*^9, 
   3.6834831276549397`*^9}, {3.6834833213381414`*^9, 3.683483349099661*^9}, {
   3.6835411096068907`*^9, 3.6835411355982285`*^9}, 3.683554694702958*^9, {
   3.6835866167161107`*^9, 3.6835866447358065`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinePlot", "[", 
  RowBox[{"debugParams", ",", 
   RowBox[{"Length", "@", "debugParams"}], ",", 
   RowBox[{"Length", "@", "debugParams"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6830692319356985`*^9, 3.6830692410077477`*^9}, {
  3.683069288780509*^9, 3.6830693884828587`*^9}, {3.6830695073112*^9, 
  3.6830695356883616`*^9}, {3.683069599773278*^9, 3.683069663057469*^9}, {
  3.683069789201457*^9, 3.6830698576584196`*^9}, {3.683070163231711*^9, 
  3.6830702045470853`*^9}, {3.6830702361531553`*^9, 3.6830702640967865`*^9}, {
  3.68307035266383*^9, 3.683070352766901*^9}, {3.683070419108245*^9, 
  3.6830704319868298`*^9}, {3.683070465875395*^9, 3.6830705107849436`*^9}, {
  3.68307054256513*^9, 3.6830705500821414`*^9}, {3.683070588742916*^9, 
  3.6830706078446493`*^9}, {3.6830710863168488`*^9, 3.6830710973852262`*^9}, {
  3.6834826901238575`*^9, 3.6834827184722815`*^9}, {3.683586455641859*^9, 
  3.683586473513995*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1: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
Sj2VwzzaG1tZNUkRW7efW9APPw4G3sU+XJ4nZPk+4Cdt2mqxP3lW3OORDZyu
Vtk3/J0im8b9mTHvgl74nUkA7sPiVOIG/LL6s+TlsM/Bh5tfYfyPn6Ef7J6g
SOHlcDPMO31eZuOzqGfF+VgCXFjItxHj5zw9nycG+//to2djxynioymljfnO
sY5p9iTw0u1Zaz+OUeS04r5WnOPWHvlUjP48qLR4iQ34i306+zA+0xYeZWFc
cWycV1rzjSI1iTsiMZ59tP7Y43k9qzlxZPVXithRNb//v1d5EdlyFbgiU73W
4ghFbp71F8E4DJZ5/gHz2jD28bIXwxQZSs+Kw/iJ81JJeIb+xi+gvf8LRTwl
T4pg304bzb6F9d0sYD///BBFPHhf8q4EruXdpIG+vfL2xc2RwJW5W10xf803
HtlSANzk78gpGvBd0W13MB6+cot73AFefL1D5OogRaqzeji4YJ/NhlcFvIDn
pN//Mz9AkTMrS1nxe8vpwnP4/l4rC+7vAR4gN22C36V52cka+zSRO25qGf0U
uUFxXWSFfW40vbiL88Jf0c7kvs+wj5vCUay/h330WnDuW/B37WAC3rjLsQrj
NkB6jRTqWTu0UZrnE/jAY7or6l/tbCSE+x/75znI0EeRqnZOhv/ryO0S0XPY
T+7ZkdfaQ5Gdh20HsC8KY0yafYLrP32WvdRNEf0huU41WF+6YmrDeuC3vjc/
pXVR5Hbu+/k3+P76po0MT6GfnHJUfNVJkYzwG/fwXjpNVOf5X1gvbaW/+jDw
8G1GBdx4P7BH4zrGCeepC3XLgGfutz6P9SiH490+vG+0q36dmfCRIvULJBy/
93L7Solk4J1feOMkgI9dll6G8ezIS33D92xzWcuU2gH6BGmZYX4JsQozhQI/
wqx1jAd41cX4UNTzp7zDVvQN8fCx817tFBG7cn0M/eGYt4gD+oxH8y778jaK
jDdFKOP6H1svxWL+xuy7XD/TSpG46/66GJ+s6ptOYh2czKzJFwbe2pjWgjyi
99o25Gfq1jpIt1BEOibnF56LoPcDzZvYN74pHBT8QJFON2ZvjIftvtyJqcBP
vtjONNFMkb5+8Xm8/2f65f8N3//8ijXdd99B3iWJlWOfE/OW17gLeKbW/hDp
Joo8WbVcVB7WH3tq5Yp15ByPqGl9I/hGbO9XEay/VxpN8d6mZnrPKlfgWYY/
HuAct1HsXMgr4ClZl4p+NVDEuOeGEfpq95J6N+YLv3zDvQDgGfLXHNGfe5kU
BUKAy6QzPZysp8iVgH4n1EeCb747Fvtb1QN39wBvs9exw3iOO/mw5jHwif2m
Ofl1FOnmU76E8bbOdqUs6qDWf7Nv9i34wKGDb7DfZvvhFYvn6zxIt5EH/ku4
oRz1vFMrn5kO3LK8KsGiliLtmVQ93lfc6++LxXiWWRXOtfUNRXqPlx7Gfixh
996kPODrJ1PfaLymyOLxEXf8nUXWXaIH+8DguVo9hhqKrNm5YQnnwbOCcYET
GM/DWsszX1Eku/S8nSL+nktPibMCLnf56dR24ILLlwbRh9OX2X3F+rKPvibh
ZxVFWBlkqtAPP101H6gC/iQjbzQCuOw6xkHUWSPPSPkd8J0e+70EgPPxnn2J
/qB0RvUz9gN8v8cY7rykCNvrH+sxL3rlhaqQz/eNXF4BXD1AyAXzt0X+hQj2
dRuyagNPvKBIxH6eYvTb38qaKveBG2e0jr+tBP8XyH2I8Z+7KLPiLnAW4dUC
3MAjj3ruRz/35KlKRR97kSHbq1tBkWcRx5tw/Y7SX4+TcL2KVdbO5xTxuuow
hestjmyNL0R/OP9hwLqcIiu9OJzx/TdQzZ/jMT47X5ptKKPICh9/X9ShpDXS
ohH46ePLrv8qpcjeJiVnVfw7h9ykmzh3OJpGWEQ/pcjq2edN2P//m4u9wgu+
ccZuZmwjcNdU144OvMcYFKxkA17MojY0WEIRlp/M+Tjv8+75TMP7AaZlLCfO
Ac93KfiJvqG1+guzP3ClgRVzvMA5Re14sI86bt12+znwf4+5N98upohi4P6D
//fnNtkP32IdEQxr5AWeHKsvjvPaa6OgqkTgb4qruM8UUSRe2UEV9Rm1sDuK
9fRE1JOkjicQn749tqgPszk7UwX6BvvLKDHgx6iPNMzfxqZH29BPfowXPthd
CHG+rS0CfeC5TbljCfCQ2Wdv/AsoksJ5sRrzQmLBdO4h9vntMsLn8ikiqZk1
i+fbuV6/oRjr5iq/54cfU+Ra8a2X2Oc8GlSJxP7K4bm6jmYe6Knefxa/t+fO
hrTXmC/fejo/P6RIeTZnrRist1p0CEWfzzL+xOqcS5GpsO0++HtQ/HTROBPo
3Hg734oFOMNRRVn01UC14oYvsP7i2rvVCTmwf/G9DEH8PYK5dyXGp7zo0g1p
4BPvx2qxbmq2Zrth/to5SrVlP6DIOYm8UfRtLw/P6ffYD0uu418DfGFlThX6
hvQQxzD6TLl8c1poNkVG9Pnl0Gcm+vLe4f1bPAn+9TGLIrxJIZvQH1waxc7V
YH5dKtdZDTxcmSMadVjlzlhXBDz7joWMZSb4v1HmEOopt/u1BO4fQ8877Xwf
fM919Bs+t/7inGYl1tkTXSedMiiiNufqgOe1tzPtMu6j56rBapoOfaCMuzf2
ddWqp1sbcI5wkfuwLI0i8gevhq8G7sy2ZRnWX1Wn0Vf3UylSGS5tiHWQvbn9
mRHoWfuRk2dNCkVu/aA7WsH6IXnnfk1Y7zbErNCYTBGd9EvnLIB7nRrpwnuz
pX8Vb08AvyeZVoDxKXrbV30AuMIC9YYGvOfKRkaMhxrtQ+vxfco0i9oeJlHE
nvu7CfrbjIKYPvqtZsvRfH3gkfTBd/hd3+pmh7Cf/H5Bd2vVXYooPTaqwH1e
ar6vwX126evb6gDfZvrWBPU82Fe8H33skVzDpvREiPNszjHcp+nE/UrMI81V
y5MXEyiyp0X2//7B6949u1rgs71p18yBh17/tgb7yX8Czj9wH96zqSxBdyji
osJVhfs7GdbdqwZ+75pwVWI8RQxWqYxiflm2mB5/A/z4z6UN6XHgJ+eTtPG5
jjuGmXD9FTcmn+u3KbLVtE8Rn1seHOiHPnM7Scpo/y2KpE27b0YdJsKrc/Dc
7V0qP3PEQl/9kpMb+7T5/ck/fqGPKZ3dc+0mxPO24+pKsF5nZUQF9plfJYVN
JIC/mRk7JgBc2Sei7xHwjhXx7x/doEhZdLc47sN047PWDPARUVqkAnDGjykF
+P6Xgo4ko89LFj7tSooG35tZFY/39kNPXvmj3z6beRbICLzGb+oJ6h+13lqq
G3ha+9jHndchr8NeeaFuyTLnw5qAJ8fd7rh5jSJHvMonMC9ayfwx1KFKedq7
8ipFYgebhvF3lpC9nDdwHwPLyztboyiyfnGbMgW8m6GTHX0pOzMz5V0kReYy
Uuux3wja/Vv1O37vQFL0oysUiYrbHYf9g/kh+6foq3HTjVZHIyjCdP+B6/9/
F3Rg4tN6iOenfcpSNOD7HZS6sa5FZd41XAHciFkvOe8yRdKVfj9cg3G1LKwO
fYn81ho2BM73r/Qv5ss2pR0VGJ/3RwpV3oZTxEZaNBjre/j27uBx4APx0etN
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
7QGXHhoJZY9fieert2dhz2HU85Rnp2E3jbyy0EvBvwd4GpdzHfuTj1GiZLET
nsvg+AnvIQ98u9uDvs2szH7x1kcaWeIKs7BBHT73TuF9xaGvDK5GwNfRNIrw
9xH7QNcT2P8IvXqzcbiDRjbPxT5AffbXSimEYFx5zv8OBt50rcIG66aNt7/L
VeButhXifMBvj7lux/p7aWz0E557eEZzSmw7+E/T3lnk+e52Osg7aoRduIGX
64mdwLzI+jPKi/qzOm4c9muD85op+or6y+7+0Y36BDFXWDa3gs7lVWbYf1Yp
SX7bC3y2Jr2NH3h5ivp5rLNh8uUHjmPf4njI17KFRuYaFLRw/etm00+Yd3c2
bUhy/0Aj3/xUDVD/gMbd07g+sKik2fM9jdTpMWX+fy+3UmzLbuAqgb/bbZpp
ZPuBwzOow12ZMKkI4Feqd4WIvKMRr6gJJpy7n2dsMsZ+1Umi3reqEdYPzy7D
39+VzB1G6vHcm9oXvYGHSFW/xT6QaWA8qwr7BIWClYLAff6138D+x6x1lzLG
1ftEn9/FDeAn8dyfjLG/UnrKiT68NDTAbgn8UO7+BxgP2cuaVLEvMi3gk2ut
p5HxpY3vsa8zyei9hXP91YS6+u3Av4ynyuHvv/dunQvCfunmF7egyjoacXL9
GoPxzHKZOnYIuEdLVM8a4Nmm5cWoZ8qvtUu4/xn3Z0xH39LItZurVTGPOMb+
NjsBLznJ0JBZSyOOu3nY8Lxu1kKqos/wXONvfAPf6364GePf5/Sf6CPA544P
yHe9ppENFqcT0N+EjEoU0J/9WmzUGmpoRDYnZBueV8Vj0ZW4/p+zTnNyNY3c
iX/+/5xVJnxwWTDmdZbTPutXNBJhmOaOvvHlsk8f1mW+knDnnpc08qTtXB7+
zviK7GeswLgVy1b1BS4uUOGIf4/hWX9pGuO2kNVDcukFjexafXUe96l15ZVE
vzU/EmV7Drj2fE4R6kPPdnH1xjhheFT0s5JGVvYL/R+3m+z48nGfg8fYru4G
XlJ+hxf7IquVHjKo563m3YK5FZBHEmGpqIPMaMDXk8BD5b1Kvz+nEXNzM1XU
LbK25ek5zNN6Tk0R4EY1KYJ4Xt/+xfRhvj8aPiirXk4jSnvvUajDrdhnFMZh
X0EfpVZGI6dLWQLQ9/rE7Y7i+Sa+MSpZ9YxGJG73j2Gf/LreSKgS31N1t3jX
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
Pnxu7z0N7R9qNGJ68X7YNuDd9AOLqOeA6LGc+g00MnrCXwrvl/wcGGwVQQd7
i8f7L6pCv/qBHusFnKdK6Az24W9UnG4rAqf1rb/iBDxf8NsUziORXxXC36nQ
CJsbzzTqmUm3rOCGfTZK1bO6AT+xy5MP62NOuBjHCuDzfh+TppWhf9j+UmYr
8JNNi7uwvhgFdqicAP65OkIR/fbm7guM2D9vaNiXNaIE7/niIYVxyLWLMC4C
72rceNAKuMn0QyXU4dcN21DsN3gu7vNPUYQ+tp9FBHUem94WhHG1d/Gl/IAC
jbzj5pxBPXOviJb+Av419akFD3BjZjYKn/vrlpzvJ+DNTI6GkvI0cvvG83D0
gY967CXoY2d9Dp4Sk4O8CBFTwny0ffwyButX2GTgTQZZGrHnkxdAPalAht3a
8L3CfLEBldLg2++53h0HXsUzN4L9rQCz84rDwPPTvy64Yt0XahzJxL7rd2Aw
F/BIj0uimL85ZWn6FOwjemQkK0OKRhgzzIRQz8i15h8EgF/5xCOoBvwafWga
9eTq90jogH10f999XLyeRmxsd3Ng3IrzaYhhXKnxbjwoD/zVKsnrGCcd9pl9
rLAPrb3s+k1JGlkcOROHeqa9aLqA83Uuk5LzNwmYm5QkKrAuF8UIcaDPS5aF
CysBL/8T2Ir1/b+OzT6YyiyO49fVDSvZnoe4yMvFUuGOabJyaY9KonbTbmyo
W2RtI/Kewd1IjWpbzfZ61XKRWU3eqXZq1ZYmsWLR5m02bfRq08XN5nZL7e+7
/37mN+c553d+5/v7nueZR+g02Yr8tERLjm91JF0dHyzHfwqlBeZW0A3PyiqW
KeHZuvyLR6APTbc94mfRc8/vaizMdKA+++6ubgNxne5t0wDF22y3Dtpiz7Ol
U2vrcA9a5/3FfS+K36ROZQ525BunRp7GEf85sDUb95FlWplvpy3P5oYJRehT
SvfnKvQRtTjdJZn4DllkMvxGRV9POPL5ZYnpP8bEG04FTuF9XbhZ2qA1cbdb
na5FC+i8z0k+D99lPtI/+pjGqRx0vGlPXHrC0gv9lHmuz4DOa+3VpYU2PDPx
1b3Cuub5BV2DP9mreyYTEg8076xGPj/3sdebpnjv5sAbkdakS6qU3ai39x5j
3hrop2dAYrkV+UxD/wnoc/mHv9yRHzdjS89+Mc8Sw+q7kU/d7KnNk4i/uPbA
lCXPfPxm/BFfqeg9Y0Dx92Iuj2oteKZa2qVFPdicvh8GP5MrkEuG5/PMy85P
grr6KGMgy5Xix9tPmVSa07r2Cb7JxXpTb0gOUXxF0h7pejPqp4/XKfAeoC79
s8OpFP+y8YRWn/iWQ7ZC8Oj48StpxKO6/7xaz/OsSjWnBPvoZb/yB+x7UuyZ
no3Evw2Yfw757P0xy2SCuMDM89EUx7PLecvL4aOaRMHX4YdDby6MPUy8PlJ5
BnoobgtKRT7Tdj3ztCDeL28oQx6mhQMCHfy55KCVch7PMo6dOIo+WLVotAX6
UPLH+wEj4gOh6lr0qZiFfp8iPxarL4wkfMyzmYjt+YgvDuJlAuLhroaKZlO6
P76NeYA6XyYz34S+cKfI4Hch8Zak3QXYx00uxx/hvGT9tr9UOpdnsjBnO+yj
rLTsFu5TvJ7f8QAT0uFB9+fQn+q7ORGYvzQhdtJ/DulGWsUg+tr9gqJLmGek
Y9RpB2OeWZZsiIGvVlgMmYopfqU22WPYiGfRx0QRUdCHkswj93CfNc/dpzCk
enYbM8f3lDz/N3WhFO+cXBxuSzylUbwLvv3DRPLGJcSD7R4m/GJA90fTtDH0
wa0zETXQgRftX42tJO5cL5div1a4+TTj/Y/2rO+rltk0Tx+FEH3ZfptNnzON
43QyxFBGXLJm2A/5H8zfa2CIc3S7QVEmovuC6vsO1FvH5CdV0AHlr3zv9Cye
dVq4yLCPsW2ra7GuPHGujy9xlUftbZyjuLDMFH3ig+rgmHh98kUTV4qR5+pt
mlaOeJ2GLcgX0nxK93lAx2aW+17Fc/Vlbcp8PZ4Z9GUWIc+GidckFsTd96Y/
jRPwLLcnegX0ueFc3mLMxz5OmCP9wLE1riPN0E9ucV5PAMV3/fS+vXuGY9Kk
DkUi8YRKVQ58lDxl1dlU4u0Xdirw/V1vf/8EdMCrVpdjQvzJJWkt9GTzw52L
oPPrK/Y4Fb/jWNdQXiv28cGRmu9ccH7vya0ciLdpR1/ju1tYh38NdGBIa+xd
+JZjytQbu5FPE9c78TzFH5NrZHrEl/RuDYTPTCuUnIQ/7CjsC43QcWziWntU
CPH8XLUT6vmgykxV9oZjz+5sTkfdnio5+tz6/3rude/VcqxjTU048paaoTbD
+Nt2+h3QTHPsbGdrJ557KyBkFfJ2XbPAZvo1x9bOhGegPne0al3A9Qrejf79
L8dELxNzwRPbRcnoO0/kh5XnpziWkB78AlyUXWGD/e1/oPk65BXHjIYF+8Gj
sluUmE/M3OzhrkmODW0Q20IH0gQLl2Mco8amjY4THAu8KhrHehOyqq/Ah3Rr
Bf4Bao79B7zY8yc=
     "]]}, Line3DBox[CompressedData["
1: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
Sj2VwzzaG1tZNUkRW7efW9APPw4G3sU+XJ4nZPk+4Cdt2mqxP3lW3OORDZyu
Vtk3/J0im8b9mTHvgl74nUkA7sPiVOIG/LL6s+TlsM/Bh5tfYfyPn6Ef7J6g
SOHlcDPMO31eZuOzqGfF+VgCXFjItxHj5zw9nycG+//to2djxynioymljfnO
sY5p9iTw0u1Zaz+OUeS04r5WnOPWHvlUjP48qLR4iQ34i306+zA+0xYeZWFc
cWycV1rzjSI1iTsiMZ59tP7Y43k9qzlxZPVXithRNb//v1d5EdlyFbgiU73W
4ghFbp71F8E4DJZ5/gHz2jD28bIXwxQZSs+Kw/iJ81JJeIb+xi+gvf8LRTwl
T4pg304bzb6F9d0sYD///BBFPHhf8q4EruXdpIG+vfL2xc2RwJW5W10xf803
HtlSANzk78gpGvBd0W13MB6+cot73AFefL1D5OogRaqzeji4YJ/NhlcFvIDn
pN//Mz9AkTMrS1nxe8vpwnP4/l4rC+7vAR4gN22C36V52cka+zSRO25qGf0U
uUFxXWSFfW40vbiL88Jf0c7kvs+wj5vCUay/h330WnDuW/B37WAC3rjLsQrj
NkB6jRTqWTu0UZrnE/jAY7or6l/tbCSE+x/75znI0EeRqnZOhv/ryO0S0XPY
T+7ZkdfaQ5Gdh20HsC8KY0yafYLrP32WvdRNEf0huU41WF+6YmrDeuC3vjc/
pXVR5Hbu+/k3+P76po0MT6GfnHJUfNVJkYzwG/fwXjpNVOf5X1gvbaW/+jDw
8G1GBdx4P7BH4zrGCeepC3XLgGfutz6P9SiH490+vG+0q36dmfCRIvULJBy/
93L7Solk4J1feOMkgI9dll6G8ezIS33D92xzWcuU2gH6BGmZYX4JsQozhQI/
wqx1jAd41cX4UNTzp7zDVvQN8fCx817tFBG7cn0M/eGYt4gD+oxH8y778jaK
jDdFKOP6H1svxWL+xuy7XD/TSpG46/66GJ+s6ptOYh2czKzJFwbe2pjWgjyi
99o25Gfq1jpIt1BEOibnF56LoPcDzZvYN74pHBT8QJFON2ZvjIftvtyJqcBP
vtjONNFMkb5+8Xm8/2f65f8N3//8ijXdd99B3iWJlWOfE/OW17gLeKbW/hDp
Joo8WbVcVB7WH3tq5Yp15ByPqGl9I/hGbO9XEay/VxpN8d6mZnrPKlfgWYY/
HuAct1HsXMgr4ClZl4p+NVDEuOeGEfpq95J6N+YLv3zDvQDgGfLXHNGfe5kU
BUKAy6QzPZysp8iVgH4n1EeCb747Fvtb1QN39wBvs9exw3iOO/mw5jHwif2m
Ofl1FOnmU76E8bbOdqUs6qDWf7Nv9i34wKGDb7DfZvvhFYvn6zxIt5EH/ku4
oRz1vFMrn5kO3LK8KsGiliLtmVQ93lfc6++LxXiWWRXOtfUNRXqPlx7Gfixh
996kPODrJ1PfaLymyOLxEXf8nUXWXaIH+8DguVo9hhqKrNm5YQnnwbOCcYET
GM/DWsszX1Eku/S8nSL+nktPibMCLnf56dR24ILLlwbRh9OX2X3F+rKPvibh
ZxVFWBlkqtAPP101H6gC/iQjbzQCuOw6xkHUWSPPSPkd8J0e+70EgPPxnn2J
/qB0RvUz9gN8v8cY7rykCNvrH+sxL3rlhaqQz/eNXF4BXD1AyAXzt0X+hQj2
dRuyagNPvKBIxH6eYvTb38qaKveBG2e0jr+tBP8XyH2I8Z+7KLPiLnAW4dUC
3MAjj3ruRz/35KlKRR97kSHbq1tBkWcRx5tw/Y7SX4+TcL2KVdbO5xTxuuow
hestjmyNL0R/OP9hwLqcIiu9OJzx/TdQzZ/jMT47X5ptKKPICh9/X9ShpDXS
ohH46ePLrv8qpcjeJiVnVfw7h9ykmzh3OJpGWEQ/pcjq2edN2P//m4u9wgu+
ccZuZmwjcNdU144OvMcYFKxkA17MojY0WEIRlp/M+Tjv8+75TMP7AaZlLCfO
Ac93KfiJvqG1+guzP3ClgRVzvMA5Re14sI86bt12+znwf4+5N98upohi4P6D
//fnNtkP32IdEQxr5AWeHKsvjvPaa6OgqkTgb4qruM8UUSRe2UEV9Rm1sDuK
9fRE1JOkjicQn749tqgPszk7UwX6BvvLKDHgx6iPNMzfxqZH29BPfowXPthd
CHG+rS0CfeC5TbljCfCQ2Wdv/AsoksJ5sRrzQmLBdO4h9vntMsLn8ikiqZk1
i+fbuV6/oRjr5iq/54cfU+Ra8a2X2Oc8GlSJxP7K4bm6jmYe6Knefxa/t+fO
hrTXmC/fejo/P6RIeTZnrRist1p0CEWfzzL+xOqcS5GpsO0++HtQ/HTROBPo
3Hg734oFOMNRRVn01UC14oYvsP7i2rvVCTmwf/G9DEH8PYK5dyXGp7zo0g1p
4BPvx2qxbmq2Zrth/to5SrVlP6DIOYm8UfRtLw/P6ffYD0uu418DfGFlThX6
hvQQxzD6TLl8c1poNkVG9Pnl0Gcm+vLe4f1bPAn+9TGLIrxJIZvQH1waxc7V
YH5dKtdZDTxcmSMadVjlzlhXBDz7joWMZSb4v1HmEOopt/u1BO4fQ8877Xwf
fM919Bs+t/7inGYl1tkTXSedMiiiNufqgOe1tzPtMu6j56rBapoOfaCMuzf2
ddWqp1sbcI5wkfuwLI0i8gevhq8G7sy2ZRnWX1Wn0Vf3UylSGS5tiHWQvbn9
mRHoWfuRk2dNCkVu/aA7WsH6IXnnfk1Y7zbErNCYTBGd9EvnLIB7nRrpwnuz
pX8Vb08AvyeZVoDxKXrbV30AuMIC9YYGvOfKRkaMhxrtQ+vxfco0i9oeJlHE
nvu7CfrbjIKYPvqtZsvRfH3gkfTBd/hd3+pmh7Cf/H5Bd2vVXYooPTaqwH1e
ar6vwX126evb6gDfZvrWBPU82Fe8H33skVzDpvREiPNszjHcp+nE/UrMI81V
y5MXEyiyp0X2//7B6949u1rgs71p18yBh17/tgb7yX8Czj9wH96zqSxBdyji
osJVhfs7GdbdqwZ+75pwVWI8RQxWqYxiflm2mB5/A/z4z6UN6XHgJ+eTtPG5
jjuGmXD9FTcmn+u3KbLVtE8Rn1seHOiHPnM7Scpo/y2KpE27b0YdJsKrc/Dc
7V0qP3PEQl/9kpMb+7T5/ck/fqGPKZ3dc+0mxPO24+pKsF5nZUQF9plfJYVN
JIC/mRk7JgBc2Sei7xHwjhXx7x/doEhZdLc47sN047PWDPARUVqkAnDGjykF
+P6Xgo4ko89LFj7tSooG35tZFY/39kNPXvmj3z6beRbICLzGb+oJ6h+13lqq
G3ha+9jHndchr8NeeaFuyTLnw5qAJ8fd7rh5jSJHvMonMC9ayfwx1KFKedq7
8ipFYgebhvF3lpC9nDdwHwPLyztboyiyfnGbMgW8m6GTHX0pOzMz5V0kReYy
Uuux3wja/Vv1O37vQFL0oysUiYrbHYf9g/kh+6foq3HTjVZHIyjCdP+B6/9/
F3Rg4tN6iOenfcpSNOD7HZS6sa5FZd41XAHciFkvOe8yRdKVfj9cg3G1LKwO
fYn81ho2BM73r/Qv5ss2pR0VGJ/3RwpV3oZTxEZaNBjre/j27uBx4APx0etN
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
7QGXHhoJZY9fieert2dhz2HU85Rnp2E3jbyy0EvBvwd4GpdzHfuTj1GiZLET
nsvg+AnvIQ98u9uDvs2szH7x1kcaWeIKs7BBHT73TuF9xaGvDK5GwNfRNIrw
9xH7QNcT2P8IvXqzcbiDRjbPxT5AffbXSimEYFx5zv8OBt50rcIG66aNt7/L
VeButhXifMBvj7lux/p7aWz0E557eEZzSmw7+E/T3lnk+e52Osg7aoRduIGX
64mdwLzI+jPKi/qzOm4c9muD85op+or6y+7+0Y36BDFXWDa3gs7lVWbYf1Yp
SX7bC3y2Jr2NH3h5ivp5rLNh8uUHjmPf4njI17KFRuYaFLRw/etm00+Yd3c2
bUhy/0Aj3/xUDVD/gMbd07g+sKik2fM9jdTpMWX+fy+3UmzLbuAqgb/bbZpp
ZPuBwzOow12ZMKkI4Feqd4WIvKMRr6gJJpy7n2dsMsZ+1Umi3reqEdYPzy7D
39+VzB1G6vHcm9oXvYGHSFW/xT6QaWA8qwr7BIWClYLAff6138D+x6x1lzLG
1ftEn9/FDeAn8dyfjLG/UnrKiT68NDTAbgn8UO7+BxgP2cuaVLEvMi3gk2ut
p5HxpY3vsa8zyei9hXP91YS6+u3Av4ynyuHvv/dunQvCfunmF7egyjoacXL9
GoPxzHKZOnYIuEdLVM8a4Nmm5cWoZ8qvtUu4/xn3Z0xH39LItZurVTGPOMb+
NjsBLznJ0JBZSyOOu3nY8Lxu1kKqos/wXONvfAPf6364GePf5/Sf6CPA544P
yHe9ppENFqcT0N+EjEoU0J/9WmzUGmpoRDYnZBueV8Vj0ZW4/p+zTnNyNY3c
iX/+/5xVJnxwWTDmdZbTPutXNBJhmOaOvvHlsk8f1mW+knDnnpc08qTtXB7+
zviK7GeswLgVy1b1BS4uUOGIf4/hWX9pGuO2kNVDcukFjexafXUe96l15ZVE
vzU/EmV7Drj2fE4R6kPPdnH1xjhheFT0s5JGVvYL/R+3m+z48nGfg8fYru4G
XlJ+hxf7IquVHjKo563m3YK5FZBHEmGpqIPMaMDXk8BD5b1Kvz+nEXNzM1XU
LbK25ek5zNN6Tk0R4EY1KYJ4Xt/+xfRhvj8aPiirXk4jSnvvUajDrdhnFMZh
X0EfpVZGI6dLWQLQ9/rE7Y7i+Sa+MSpZ9YxGJG73j2Gf/LreSKgS31N1t3jX
UxqJ6+Vzwz5wyOvKWpxDGTVXxQcD33l2WzX2JzZ/Gpp0cY6Y6gteAzw44Lwp
9rcH5lb5p2HfFSWTXlBCI08XExgx3tYWB1xKAv7avu+yLvD8l/1bsQ+p9RI5
chDjav95zqfFcO5jO+rQBxwK1ij7YBzmjbJKAa/U/XUK421L4q2UaODb6PbV
YUXwPpKe5bh+RvhIB8aJlvRNu7YnNPJ437ZBjJPJ5p9uZ7APeSOyyAv8iYrw
Dqw7eS6OZzH+FUvk9mkWQvxketWhng5/KyIxPted2/PRtAD6sTzpH1gHR41t
AvC5hjKrq7Tzwa84FGVxvos3MdDA9z/tSk/meUwjh4+vVsG4ErCaaW0Bnnbo
kVH1Ixrh+vKAxx547MOqRUnM0yci0d7ACwN5omyxj6rQssN5aiS2gIEf+Dqn
VQ8wfvhj9V5iv6efkR9Y+JBGMqXKdLAf22V3TL4QuKeB7i1T4H3ratnQHxiC
j7OhbofW8ak15NLIjZPXMvCeJGjX3LGjwCV/5G41A74Y+U0M6/56izPGt7Fv
PLrtcEEOjewI222BuqVbOT24hLrRNzxeAZz13IeTWEeSFcsozHfDDJ1Dex/Q
SM2z0RnM0yr7ZX9RHwW5+ojr2TRCvxPLinF+2+9pzVn027tzSflZNBKYZjyD
9Sthom7xGnC2wLfrn2VCvRZO/79O/dor3BKE57ipnjnzPo1k1WdTqH/hXIlN
CvbnNEaWkxk0smB1KBjrUW/RzzrsD2M+/GIVTaeR/Quy3nivvlS2I6oTuKB2
zo+aNPB/VZ8zOP9uLdn2BuN89WmRC07Anw23VBsCj2HcEOgGXCDIeeLXPRqp
Cneu1wc+oej+9xjwSM9huzPAXxb9sPz/795zVUsyML8YJrz/pEJdvpoXhT7g
Ifek8ybwD49DL7sA/8bo9hJ/dzBm3SyBcei7FClblQJ978+LopjvEjfWGcZh
nRpgvL8C+M/jgeexvhhT3DboG/ciW9+aJ9PI/a+aLzA+v+h01WJerx72dD2S
RCMO+/X88bmP2aqO4T52hgcm/O7SyIfegi0YD1n+fUPY/wguU3R2S4T6fiHX
Gd9/76tta7HuRw5SBdoJNHKL+yRtJ74/e+Mi1t9dw/2vv8bTiOUn1jP4+/Vz
BamOceCXlafko4HPv37NjHP6N4clvg/Ard5c3KkEvCvLkM8U68uuHkW8f2MI
jPB9FUcjrUmON3HuYx3+XYI+KWAWVm8FvDir4y2+D3eXAvdj4FnSjsx1t6GP
svbZjd+VaLLjTjJw69w73trAhwJzK9HHDP3+BmC/kbtkkB5/i0biB19O4Hr3
WdU/uP7Wsr6/o7HQNxZK96GedRUuY6iPClPQZkngC40ny/D3ynKVMEG89842
93exiqGR6Vd6sbiP2YaAAPSxO6K2H+xu0oiIMmca+pWByzK/cODuHS2x22/Q
SLcECyf6Eh9/ImcZ8DEV5yKpaBpZa7mseB9+b4riEP6u5F23g7/3Go2w/IsR
QX+o9NhbOgP80zshhyvAry9du4K/s3i5vlz/DXjbfNlKFeCDW/qfYXxObUya
wrxwbLE+1XgVzotZRW8z9v+cGm6Y1/M37347APx82cJqzC9m1w6HR8Dvd6lo
jURBnVrfm451JKQwYw59g/WX3wdH4H00HZoe1i/DrWVXgH+LfmXVFAk+s6Ro
g/k4UBe/lID1xcdJSw54qJSOG/rDhz7vnAfApdK87vldoZGo81/mMM4Vc5/a
xADP1/rh9iiCRpitmQ9iP3CcTeki9ucL1m/tmi+Dn196cxbj8+H68G3xwL1q
+Io7w6GONE4H4z1hzCenS7nAk5QiUt9cgjqVrl2FfivPcssiCt+n3DD+VhiN
XF5S98S6M+geebsb9fd8KWZ8EfrPje8fY/2y6zwsjn0gs71R9+gFyEfakP0W
4EROXBN9MqRgtv8icPfLoVwYh38ZNwe8wfP6VMYqCNxIy3wY5xpnx7rNL/B7
M1q6UkJppDr4ciD2A9emXDPxfT7zP9FYDfzy85gv/3/Xh8kwjMN1f0OHL5+n
ERdW9b0YV+3HWjxKMN4k3m8YDYFzp5XFoT8X8nVl3sV+7Gq3ljrwltePq1B/
/wB2ddTNMq1/9bFgGgmQOFKNPpD7rUYS83dpi1fYzXM0curGAVncx73G4SDW
i1Me4f3JZ2kkbH4zI+rPb879Df//i27yvHWJDqIRteQLNzAf9XqcmNC3LX2u
pLicoZFH65K40CcrLCbyJoDPdF81XXWaRqxrjaoOAr/g1mmBc8cVPznn56eg
f3sxOIK+8dxf7RD2yfl+1xbsgHsa1fViXljd3SeCdVCka3hwKpBGYte1WWDd
EXA92dAEfMuHW2mngG9PzBfBPlZWPCId/XP84ftVswEw58YWqmC+s3WnqqUD
32tQIegO3OVxTgjq+WJS2wn75EaG2H+1/jSyPLX9J+ZpxSo2nfvAC4ZefhQA
/mbu+xk8F5XOv4yYF7sn2/pt/aD/N7X/hXpecSSsT4H/oT2oDzoJ876fugjm
xaDJYD7uE7wxkPnqCfBt2fmPGJ/Pas8dw+f6CBa3h/rSSN7BwhEz4G4Zrefx
/fdYR7TZ+cCcwvy0BufQRzNxHoylwoRpvWnrSm+YC5x3SDhjXHHsS7HHOP9S
9PzFcRpJveoq7IC+t/8TB86J74TsPxwCXqejL4x9i9uETtp79M/rzxaZgZde
iJzE3/EvzztdGECflOgdvHWMRppt2+YN0Ie3v+tH3aTFljmuAb6Bc3Mmnnvu
7l/yWE+7NfWOx3vRyFmBa//37SXXFnsw/v2vbIhnA16lXvVKA/s93ZPHSoFz
CTQudzlKI7nL00uwPt5W1dmMeXpHxIzrsSeNfOSTa0Y9JdiGFv8/l9v7kkeP
QL24WqGLes4qz/DkA6/1PW7JCfyeZFobxvnXjqBpzK8C57Zb9MPQJ4ywxeH+
Yc7it7EuHN3nfoTFA+p1dN0r1N9f/1TaO+DLecTiW91oZCx+87cdwLuMQ7PR
n+elBFacP0QjtZ2RulinNhefzV4O+nvGnysRB77vWjID9hUG7474jMB61ya+
4FJXGtlyXqME/eHg0Ngu9LFau+hoU+DLN3kHom4WqVXHcvC5GZzLXrvQSIXM
QRus440nhE914XqfZwe1gcv0BLBh3NokKVRgXfjOJDB215lGhFUX5NE35Fh8
1ArQ/6061v90opGZ/uC7qFtTspoW5kVidqW6GnAe0bLL6HuPyvn10DdKY47X
OjrCvCYTX4bnQudO/ozndWT+clrAQRrhfSpvgroFKRuM4HPn642+nzxAI27H
Bxix3pUGtT9pRD+0aC7atR/q8vspV4xbySBNgufIP/bHnt8B5qZff+PQV3Mn
D0VzgG5PNnjZPLGDOstppuEG/PD673uxvh//IdBoB7xv9Ohf9NsfnDfUsG80
lFJ9N7+PRojJGl6sO++mPXLRT6ReKchcB7521WZ3jGd9umzoV+BqX20OCQE3
r6xw2gR8z6WoFfg+ZVzlTnF7Ib8eZuxE3ZLbtn8px/iMC11kB/6jJ3kO67ta
+G63HuzDT9ZHHN5DIw/Eevox/kVdGrZjv5fYoylWtptGilbc88M41OTfxIS6
reBdnJ3dBX7LrxKL/tDaK1yM+dUUalUrBpz6xayG9fdCqdZJ3Oc318cFVVuI
5/An+7C/3fzhph0+t+b0+JiMDfj/A85d2Jd60K1jME7shK6vY94JPrwrwxjv
e8fsX+0VAT0FVhqElFlDnybc5OaBvsTjxYLzi87+pAoP4Eb5yy3QH7SZmm7j
3Bc9WajKC3yi6OR1rL/ZR3emjAEPD3319uF26Fsk1v3GeJb62nVwAfiQKvs6
Q+DZe54tmqA/f9pS9Ry4QWX7mrfbwIcdnMbNgd/RiLyCvqfqXfzMBLglb2Qj
fteZ7Olr/cAHLlHBBVuhXjw59v/8eE6aeRL7vWeNvXd5ge/y3FaLeSGl/oe3
Bvux7koHhy00csCSMRj1XHebMQz1cbRLq75lBfl75tsa1NMqXVOpDnhUPd3u
mSWNiNn+e4j1S8iyaT3m0caffx/UbKYRH1tle9xfvZT151vgcsfXpRZZ0Mj3
itNv8D0F1OSCRoHH8zzmvbQJ+rF3XzR2Y59wdt3Pe8APvmKbUDenkWG65RTe
z/w7WCwiDvof69gx325GIycFxjQxDtvqvw0s4fcyvVf1Al70UoUT/aRcUe86
1gu9NUOV86Y0YvznsgrqZpuj+6ka9fysWH4a+EB6ZxDG4aaX+izTwG07rj+Y
NKERKduPpRiHIw891Nqw/3nL12UDfPehU9/wXGQkj8fi/U/Uh9f12cY0UtBs
mYS6qWZU8KIvaS+9SBs3ohHlF2ZKWB/LvvPVNwOvniijCwMX87v9As9l7ieV
9xl9Pj9iRNWQRn4XCLehzr/cXO/ic7d8fW+iQmgk6F3ZdqyP904Uj38BbiTC
oEczgLng8RM69pMJa7hKMC/kJnk12/RpRNS6qQzriw/rmNBq0C3u0fF7vno0
8ifvbjL6QKRFkjPOKR9DzIOFgWc4KL6zA24eO3wY6+Zp55qRZ7o0cuVW5VeM
2ysjKu+ZYB/ByxMPtwPft9xlAOtO0s0KV9RfvEbJvVuHRpwHB1rwnkE3/RNz
Lda17+o/9gKvKPR7irrdDzf93o790vo/6+q1wQcO2zaiH35Lko1C/Z9oPNul
APxIyEV5XL/6xEI4zoObvY5nndWC81qbaoz6HMv2VkPd5ne4bnmuSSM3y7Y+
Q3+wnlLTxD58+Jgtw4gG1H2l4VCcaxY5w1NxH+bmpA1z6jQyKzqxgH3vTNOh
Pnxu7z0N7R9qNGJ68X7YNuDd9AOLqOeA6LGc+g00MnrCXwrvl/wcGGwVQQd7
i8f7L6pCv/qBHusFnKdK6Az24W9UnG4rAqf1rb/iBDxf8NsUziORXxXC36nQ
CJsbzzTqmUm3rOCGfTZK1bO6AT+xy5MP62NOuBjHCuDzfh+TppWhf9j+UmYr
8JNNi7uwvhgFdqicAP65OkIR/fbm7guM2D9vaNiXNaIE7/niIYVxyLWLMC4C
72rceNAKuMn0QyXU4dcN21DsN3gu7vNPUYQ+tp9FBHUem94WhHG1d/Gl/IAC
jbzj5pxBPXOviJb+Av419akFD3BjZjYKn/vrlpzvJ+DNTI6GkvI0cvvG83D0
gY967CXoY2d9Dp4Sk4O8CBFTwny0ffwyButX2GTgTQZZGrHnkxdAPalAht3a
8L3CfLEBldLg2++53h0HXsUzN4L9rQCz84rDwPPTvy64Yt0XahzJxL7rd2Aw
F/BIj0uimL85ZWn6FOwjemQkK0OKRhgzzIRQz8i15h8EgF/5xCOoBvwafWga
9eTq90jogH10f999XLyeRmxsd3Ng3IrzaYhhXKnxbjwoD/zVKsnrGCcd9pl9
rLAPrb3s+k1JGlkcOROHeqa9aLqA83Uuk5LzNwmYm5QkKrAuF8UIcaDPS5aF
CysBL/8T2Ir1/b+OzT6YyiyO49fVDSvZnoe4yMvFUuGOabJyaY9KonbTbmyo
W2RtI/Kewd1IjWpbzfZ61XKRWU3eqXZq1ZYmsWLR5m02bfRq08XN5nZL7e+7
/37mN+c553d+5/v7nueZR+g02Yr8tERLjm91JF0dHyzHfwqlBeZW0A3PyiqW
KeHZuvyLR6APTbc94mfRc8/vaizMdKA+++6ubgNxne5t0wDF22y3Dtpiz7Ol
U2vrcA9a5/3FfS+K36ROZQ525BunRp7GEf85sDUb95FlWplvpy3P5oYJRehT
SvfnKvQRtTjdJZn4DllkMvxGRV9POPL5ZYnpP8bEG04FTuF9XbhZ2qA1cbdb
na5FC+i8z0k+D99lPtI/+pjGqRx0vGlPXHrC0gv9lHmuz4DOa+3VpYU2PDPx
1b3Cuub5BV2DP9mreyYTEg8076xGPj/3sdebpnjv5sAbkdakS6qU3ai39x5j
3hrop2dAYrkV+UxD/wnoc/mHv9yRHzdjS89+Mc8Sw+q7kU/d7KnNk4i/uPbA
lCXPfPxm/BFfqeg9Y0Dx92Iuj2oteKZa2qVFPdicvh8GP5MrkEuG5/PMy85P
grr6KGMgy5Xix9tPmVSa07r2Cb7JxXpTb0gOUXxF0h7pejPqp4/XKfAeoC79
s8OpFP+y8YRWn/iWQ7ZC8Oj48StpxKO6/7xaz/OsSjWnBPvoZb/yB+x7UuyZ
no3Evw2Yfw757P0xy2SCuMDM89EUx7PLecvL4aOaRMHX4YdDby6MPUy8PlJ5
BnoobgtKRT7Tdj3ztCDeL28oQx6mhQMCHfy55KCVch7PMo6dOIo+WLVotAX6
UPLH+wEj4gOh6lr0qZiFfp8iPxarL4wkfMyzmYjt+YgvDuJlAuLhroaKZlO6
P76NeYA6XyYz34S+cKfI4Hch8Zak3QXYx00uxx/hvGT9tr9UOpdnsjBnO+yj
rLTsFu5TvJ7f8QAT0uFB9+fQn+q7ORGYvzQhdtJ/DulGWsUg+tr9gqJLmGek
Y9RpB2OeWZZsiIGvVlgMmYopfqU22WPYiGfRx0QRUdCHkswj93CfNc/dpzCk
enYbM8f3lDz/N3WhFO+cXBxuSzylUbwLvv3DRPLGJcSD7R4m/GJA90fTtDH0
wa0zETXQgRftX42tJO5cL5div1a4+TTj/Y/2rO+rltk0Tx+FEH3ZfptNnzON
43QyxFBGXLJm2A/5H8zfa2CIc3S7QVEmovuC6vsO1FvH5CdV0AHlr3zv9Cye
dVq4yLCPsW2ra7GuPHGujy9xlUftbZyjuLDMFH3ig+rgmHh98kUTV4qR5+pt
mlaOeJ2GLcgX0nxK93lAx2aW+17Fc/Vlbcp8PZ4Z9GUWIc+GidckFsTd96Y/
jRPwLLcnegX0ueFc3mLMxz5OmCP9wLE1riPN0E9ucV5PAMV3/fS+vXuGY9Kk
DkUi8YRKVQ58lDxl1dlU4u0Xdirw/V1vf/8EdMCrVpdjQvzJJWkt9GTzw52L
oPPrK/Y4Fb/jWNdQXiv28cGRmu9ccH7vya0ciLdpR1/ju1tYh38NdGBIa+xd
+JZjytQbu5FPE9c78TzFH5NrZHrEl/RuDYTPTCuUnIQ/7CjsC43QcWziWntU
CPH8XLUT6vmgykxV9oZjz+5sTkfdnio5+tz6/3rude/VcqxjTU048paaoTbD
+Nt2+h3QTHPsbGdrJ557KyBkFfJ2XbPAZvo1x9bOhGegPne0al3A9Qrejf79
L8dELxNzwRPbRcnoO0/kh5XnpziWkB78AlyUXWGD/e1/oPk65BXHjIYF+8Gj
sluUmE/M3OzhrkmODW0Q20IH0gQLl2Mco8amjY4THAu8KhrHehOyqq/Ah3Rr
Bf4Bao79B7zY8yc=
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Medium,
  PlotRange->{{5.654866776461628, 9.064027993199742}, {-0.37100946866968154`, 
    7.131145844801221}, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.6364631226542565`, -0.47908775929129743`, \
-2.0662858277066647`},
  ViewVertical->{0.41022074403144015`, 
   0.25261614158123447`, -2.190753332444831}]], "Output",
 CellChangeTimes->{
  3.6830695367470675`*^9, {3.683069623332985*^9, 3.6830696495914907`*^9}, {
   3.683070166579464*^9, 3.683070268543749*^9}, 3.683070363702191*^9, {
   3.6830704110598774`*^9, 3.6830704345745564`*^9}, {3.6830704867158957`*^9, 
   3.683070511203221*^9}, {3.683070592611495*^9, 3.6830705951131606`*^9}, {
   3.683071082124053*^9, 3.6830710985640125`*^9}, 3.6830711414896326`*^9, 
   3.683071185518984*^9, 3.6830721021371555`*^9, {3.683482685901039*^9, 
   3.6834827187354584`*^9}, {3.683586462875688*^9, 3.6835864739332743`*^9}, 
   3.6835883691650295`*^9, 3.6835885891087627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RecordedComparisonData", "[", 
      RowBox[{"[", 
       RowBox[{"sm", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "@", "ToSpacedString"}], "/@", 
            RowBox[{"RecordedComparisonData", "[", 
             RowBox[{"[", 
              RowBox[{"sm", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5", ",", "6", ",", "7", ",", "8"}], 
                "}"}]}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ToSpacedString", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Final error:\>\"", ",", 
               RowBox[{"Last", "@", 
                RowBox[{"RecordedComparisonData", "[", 
                 RowBox[{"[", 
                  RowBox[{"sm", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sm", ",", "1", ",", 
          RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"LegendFunction", "->", "\"\<Panel\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Inverse power of two gradient smoothing function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iterations\>\"", ",", "\"\<Error\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68354176658178*^9, 3.683541767117134*^9}, {
   3.6835430681030846`*^9, 3.6835430725340366`*^9}, {3.6835435344847717`*^9, 
   3.6835435812579727`*^9}, {3.6835436223694086`*^9, 
   3.6835437299741793`*^9}, {3.683543785355125*^9, 3.6835437916643305`*^9}, {
   3.683543882185715*^9, 3.683543921987266*^9}, {3.6835521130451317`*^9, 
   3.6835521800098057`*^9}, {3.6835522121252275`*^9, 3.683552364081595*^9}, {
   3.6835524035439186`*^9, 3.683552485126339*^9}, {3.683553052933615*^9, 
   3.6835530923639183`*^9}, {3.6835532902593145`*^9, 
   3.6835532915401692`*^9}, {3.6835533638423977`*^9, 
   3.6835533641846275`*^9}, {3.68355339530539*^9, 3.6835534359635096`*^9}, {
   3.6835534932297087`*^9, 3.6835534959275093`*^9}, {3.6835535285412655`*^9, 
   3.6835535650866437`*^9}, 3.6835536885690145`*^9, {3.6835540353483443`*^9, 
   3.6835540522846413`*^9}, {3.6835864511508617`*^9, 
   3.6835864511708755`*^9}, {3.683586589223773*^9, 3.6835866131007013`*^9}, {
   3.683588191891774*^9, 3.6835882035515537`*^9}, {3.683588700479041*^9, 
   3.6835887062478876`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
9BQt0ZVeCn/MWciw89b7VB208o+hz7nsZNCV53i8Du1kInt/mYcM21ItYln/
u57QeNRYiAy8M0MSQ84kUHXT2XyZSoYf+qc76tH/9tdksM5rvZOCfrr2nAyT
JBm2S1i4nEAfOzITsHE9GV5u9F3UQl9ouU63ViDDtM3iRy60eWoiI0iJDPe/
suQNHSHBxN72uCRlMnid/hbej/ZkXrzwQIMMFXfZeRvQ95JOClYAGYy5I5du
oRf5XHWebifDseq2w5fRvhX1axp2kuEOeX25J1rugGpTjSkZ2JbePbFEnzmg
o1mynwwzr9/qa6LXDJKTMm3I8Ndw3EkErTnz9EuMPRly9A4cXDyM62W4kIzX
YTL0hnwz7EQveqeH7jlKhqWZBwfz0e9y306v8yDDGp8VlXB0DLX16qw3Gco0
hj6ZoZNjb7vVnyJDcYnnVSm0xUfWqIvBZHix9XThOjTLjbRFozAynEhJrlly
wv2swoe3q87j/WWMN0Nog9Q+oYooMvAnua68QOd4tbw7GouuO2RThPa8HEgn
JZDha+t7yQT0N9Zrs2XXyUB2W9hwCt37PdvPKpUMctvvMFuglQnOzMl0MgwE
iD3ZgH61MBJ94R6+PoRNkhX973xEhsJHZUGdh7B+vRSqTM8nQ+2zgDd30Q8F
f9Gki8kwEjMRdBz9Qeb4oawyMswu3O9RRDcYTd+WqCLDviXFthFcZ86ea/h0
vY4Ml579jclGL/v8keJsIkNw7f63d9Ev3p877/cC41FXfj4E7aCsxfa5hQx+
f38PHkP/iH1TpNNGhqjlOZk96Ps9DUm3Osigpr397Db0TNn5itluMjyRvBZC
QStP2crs6iUDS1LI+JwDCeJFj/1IGSSD25rJG53olDWP+YeGyaDc/GtLIZr9
6dpUhR9kqHFw2RaJDlEIunliAucnxoewQUeH2FNzf+N8Nn/lkka36FvTv82R
oeCtWPFPexJELbQ+oP/Fc5zSfo8idOAV4Q/GzBQYDOhRTUGv/7L3jh8rBfp9
Da5dRdeK36Td4qSA4tboXf5oV/ch/TpeCgSXT0RpoQ2k+BR6BfH17hwZyuh1
3u8+zpMp0Kd0KVwAPXDnvYUAQQEBGe+GxYO4P8m6c19SjAKz15vW96Fv+93v
3iRJAT1JP4On6DA/nd/q0hTY9KjlVQb69WDmX5CjgFNC7JtQ9L/zLwXyNMaH
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
23dsAwlOzg2nxWdifee0eZSE/j8mudDX
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+n+aEpaN
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.25884899754542623`, 3.7869142596898353`}, 
     PlotRange -> {{-0.14660474197263076`, 7.037027614686276}, {
      3.896343624729324, 10.680964257177669`}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, 
     AxesOrigin -> {-0.25884899754542623`, 3.7869142596898353`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
     FormBox["\"Inverse power of two gradient smoothing function with various \
length amounts\"", TraditionalForm], 
     PlotRange -> {{-0.14660474197263076`, 7.037027614686276}, {
      3.896343624729324, 10.680964257177669`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        GridBox[{{"\"Smoothness 6\""}, {"\"BoostRatio 1.1\""}, {
          "\"RefineRatio 0.95\""}, {"\"Normalized False\""}, {
          "\"Hessian False\""}, {"\"Final error: 115.327\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 12\""}, {"\"BoostRatio 1.1\""}, {
          "\"RefineRatio 0.95\""}, {"\"Normalized False\""}, {
          "\"Hessian False\""}, {"\"Final error: 93.5647\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 12\""}, {"\"BoostRatio 1.1\""}, {
          "\"RefineRatio 0.95\""}, {"\"Normalized True\""}, {
          "\"Hessian False\""}, {"\"Final error: 70.3462\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TagBox[
        GridBox[{{"\"Smoothness 12\""}, {"\"BoostRatio 1.1\""}, {
          "\"RefineRatio 0.95\""}, {"\"Normalized False\""}, {
          "\"Hessian False\""}, {"\"Final error: 91.8027\""}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Panel\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6835522287813387`*^9, 3.6835522994604845`*^9}, {
   3.6835523546092763`*^9, 3.683552364358779*^9}, {3.683552462688371*^9, 
   3.683552485568639*^9}, 3.6835526012052774`*^9, 3.6835526663597407`*^9, {
   3.6835530266560855`*^9, 3.683553093436634*^9}, 3.683553239940746*^9, 
   3.683553294545171*^9, {3.68355339899585*^9, 3.683553436228687*^9}, 
   3.6835534987213736`*^9, 3.6835535373231273`*^9, 3.6835536895046444`*^9, {
   3.6835540376398745`*^9, 3.6835540536205335`*^9}, 3.683554156537191*^9, 
   3.683554796294816*^9, 3.68358434927608*^9, 3.6835865584572477`*^9, {
   3.6835865902404494`*^9, 3.683586613778156*^9}, {3.6835881963087187`*^9, 
   3.6835882040188646`*^9}, 3.6835882770846033`*^9, 3.6835883922964582`*^9, 
   3.683588568870248*^9, {3.683588689260558*^9, 3.683588706732211*^9}, 
   3.683588821115693*^9, 3.683588933456635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RecordedComparisonData", "[", 
        RowBox[{"[", 
         RowBox[{"sm", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"RecordedComparisonData", "[", 
         RowBox[{"[", 
          RowBox[{"sm", ",", "4"}], "]"}], "]"}], "/", "1000."}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Length of smoothing function\>\"", ",", 
      "\"\<Corrections / Iterations\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Correction Amounts of P2 Smoothing Function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.683552682523522*^9, 3.683552775077264*^9}, {
  3.6835528142403884`*^9, 3.6835528380512714`*^9}, {3.6835528788905144`*^9, 
  3.683552879876172*^9}, {3.68355293815705*^9, 3.683552947575333*^9}, {
  3.683554803332513*^9, 3.683554804964599*^9}, {3.683557032347498*^9, 
  3.683557032427553*^9}, {3.6835864511898894`*^9, 3.683586451194891*^9}, {
  3.6835889109836435`*^9, 3.683588911211796*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{6., 1.809}, {12., 1.7870000000000001`}, {12., 
      1.649}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length of smoothing function\"", TraditionalForm], 
    FormBox["\"Corrections / Iterations\"", TraditionalForm]},
  AxesOrigin->{5.90625, 1.6410000000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
   "\"Correction Amounts of P2 Smoothing Function with various length amounts\
\"", TraditionalForm],
  PlotRange->{{6., 12.}, {1.649, 1.809}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683552697318392*^9, 3.6835527753544464`*^9}, 
   3.6835528434338627`*^9, {3.683552880078307*^9, 3.6835529050449634`*^9}, {
   3.683552939469926*^9, 3.683552947985607*^9}, 3.6835530342051215`*^9, 
   3.683553296462451*^9, 3.683554162734328*^9, 3.683554362881834*^9, {
   3.6835547942304416`*^9, 3.6835548062584624`*^9}, 3.683586570042976*^9, 
   3.6835882735222287`*^9, 3.6835886912268686`*^9, 3.6835888800239897`*^9, 
   3.683588911514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"Data", "\[IndentingNewLine]", "TrueParams"}], "Input",
 CellChangeTimes->{{3.683554807958602*^9, 3.683554808228776*^9}, {
  3.6835549504336414`*^9, 3.6835549905783253`*^9}, {3.683584462578661*^9, 
  3.6835844653785295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.011063058376388223`"}], ",", 
   RowBox[{"-", "0.010865207119348212`"}], ",", 
   RowBox[{"-", "0.010642971433242918`"}], ",", 
   RowBox[{"-", "0.010395804883883208`"}], ",", 
   RowBox[{"-", "0.010123426923443259`"}], ",", 
   RowBox[{"-", "0.009825866542054598`"}], ",", 
   RowBox[{"-", "0.009503508128514066`"}], ",", 
   RowBox[{"-", "0.009157139230949655`"}], ",", 
   RowBox[{"-", "0.008787999835593146`"}], ",", 
   RowBox[{"-", "0.008397832703571693`"}], ",", 
   RowBox[{"-", "0.00798893422211403`"}], ",", 
   RowBox[{"-", "0.007564205138146197`"}], ",", 
   RowBox[{"-", "0.0071272004494260825`"}], ",", 
   RowBox[{"-", "0.006682177631771536`"}], ",", 
   RowBox[{"-", "0.006234142281356454`"}], ",", 
   RowBox[{"-", "0.00578889014942507`"}], ",", 
   RowBox[{"-", "0.005353044444218202`"}], ",", 
   RowBox[{"-", "0.004934087172706258`"}], ",", 
   RowBox[{"-", "0.00454038319436124`"}], ",", 
   RowBox[{"-", "0.004181195562346861`"}], ",", 
   RowBox[{"-", "0.0038666906360372818`"}], ",", 
   RowBox[{"-", "0.0036079313647706924`"}], ",", 
   RowBox[{"-", "0.0034168570684908767`"}], ",", 
   RowBox[{"-", "0.0033062479789204217`"}], ",", 
   RowBox[{"-", "0.003289672757838031`"}], ",", 
   RowBox[{"-", "0.003381417179788232`"}], ",", 
   RowBox[{"-", "0.003596392158207092`"}], ",", 
   RowBox[{"-", "0.00395001930974196`"}], ",", 
   RowBox[{"-", "0.004458092294865194`"}], ",", 
   RowBox[{"-", "0.005136612247240866`"}], ",", 
   RowBox[{"-", "0.006001595713302743`"}], ",", 
   RowBox[{"-", "0.007068853670798724`"}], ",", 
   RowBox[{"-", "0.008353740384322177`"}], ",", 
   RowBox[{"-", "0.009870871090719012`"}], ",", 
   RowBox[{"-", "0.011633807791271456`"}], ",", 
   RowBox[{"-", "0.013654712764102772`"}], ",", 
   RowBox[{"-", "0.015943969802479918`"}], ",", 
   RowBox[{"-", "0.018509773635469816`"}], ",", 
   RowBox[{"-", "0.021357688499195473`"}], ",", 
   RowBox[{"-", "0.02449017740172475`"}], ",", 
   RowBox[{"-", "0.02790610426381008`"}], ",", 
   RowBox[{"-", "0.031600211821996356`"}], ",", 
   RowBox[{"-", "0.035562578949939326`"}], ",", 
   RowBox[{"-", "0.039778061887123656`"}], ",", 
   RowBox[{"-", "0.04422572475948838`"}], ",", 
   RowBox[{"-", "0.04887826573053922`"}], ",", 
   RowBox[{"-", "0.053701446129833366`"}], ",", 
   RowBox[{"-", "0.058653530962311136`"}], ",", 
   RowBox[{"-", "0.06368475029930994`"}], ",", 
   RowBox[{"-", "0.06873679218101993`"}], ",", 
   RowBox[{"-", "0.07374233880961306`"}], ",", 
   RowBox[{"-", "0.07862465896933975`"}], ",", 
   RowBox[{"-", "0.0832972707595458`"}], ",", 
   RowBox[{"-", "0.0876636898516831`"}], ",", 
   RowBox[{"-", "0.09161727956261824`"}], ",", 
   RowBox[{"-", "0.09504122005224723`"}], ",", 
   RowBox[{"-", "0.09780861487965505`"}], ",", 
   RowBox[{"-", "0.09978275396252069`"}], ",", 
   RowBox[{"-", "0.10081755265056964`"}], ",", 
   RowBox[{"-", "0.10075818711474666`"}], ",", 
   RowBox[{"-", "0.09944194653639005`"}], ",", 
   RowBox[{"-", "0.09669932261996991`"}], ",", 
   RowBox[{"-", "0.09235535671198657`"}], ",", 
   RowBox[{"-", "0.08623126424888546`"}], ",", 
   RowBox[{"-", "0.07814635533848882`"}], ",", 
   RowBox[{"-", "0.06792026896167963`"}], ",", 
   RowBox[{"-", "0.05537553652256226`"}], ",", 
   RowBox[{"-", "0.04034048823471725`"}], ",", 
   RowBox[{"-", "0.022652513067641`"}], ",", 
   RowBox[{"-", "0.002161679651379554`"}], ",", "0.021265278388978678`", ",", 
   "0.04774061375887955`", ",", "0.07735085979806296`", ",", 
   "0.11015178000217142`", ",", "0.1461629916378222`", ",", 
   "0.18536228969143426`", ",", "0.2276797054916948`", ",", 
   "0.2729913431770267`", ",", "0.32111304672903873`", ",", 
   "0.3717939605348938`", ",", "0.42471005733655587`", ",", 
   "0.4794577189186456`", ",", "0.5355474669084438`", ",", 
   "0.5923979535227526`", ",", "0.6493303348887851`", ",", 
   "0.7055631625612043`", ",", "0.7602079419039725`", ",", 
   "0.8122655189296253`", ",", "0.860623469791444`", ",", 
   "0.9040546791821276`", ",", "0.941217305156374`", ",", 
   "0.970656338088584`", ",", "0.9908069702986022`", ",", "1.`", ",", 
   "0.9964694982934682`", ",", "0.9783629705648395`", ",", 
   "0.9437542434529588`", ",", "0.890659305106704`", ",", 
   "0.8170553193147979`", ",", "0.7209030228147326`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.683554808425911*^9, {3.6835549521868086`*^9, 3.683554990799472*^9}, 
   3.6835843561406565`*^9, 3.683584465553646*^9, 3.683584575804551*^9, 
   3.6835865761850734`*^9, 3.6835878149843464`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.030906485860783`", ",", "6.964797923357601`", ",", 
   RowBox[{"-", "6.236022470905077`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683554808425911*^9, {3.6835549521868086`*^9, 3.683554990799472*^9}, 
   3.6835843561406565`*^9, 3.683584465553646*^9, 3.683584575804551*^9, 
   3.6835865761850734`*^9, 3.6835878149923525`*^9}]
}, Open  ]]
},
WindowSize->{1600, 814},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 280, 6, 90, "Input"],
Cell[841, 28, 4567, 88, 710, "Input",
 InitializationCell->True],
Cell[5411, 118, 37683, 803, 2033, "Input",
 InitializationCell->True],
Cell[43097, 923, 107, 3, 29, "Input"],
Cell[43207, 928, 2732, 53, 150, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[45964, 985, 10546, 158, 173, "Input",
 InitializationCell->True],
Cell[56513, 1145, 2653, 46, 386, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59203, 1196, 13274, 244, 548, "Input"],
Cell[72480, 1442, 130, 2, 28, "Output"]
}, Open  ]],
Cell[72625, 1447, 1958, 40, 290, "Input"],
Cell[CellGroupData[{
Cell[74608, 1491, 3822, 96, 310, "Input"],
Cell[78433, 1589, 4003, 78, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82473, 1672, 1092, 24, 90, "Input"],
Cell[83568, 1698, 606, 9, 28, "Output"],
Cell[84177, 1709, 61589, 1241, 188, "Output"],
Cell[145769, 2952, 66731, 1326, 188, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212537, 4283, 950, 15, 29, "Input"],
Cell[213490, 4300, 55302, 916, 320, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268829, 5221, 3375, 70, 310, "Input"],
Cell[272207, 5293, 97870, 1682, 405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370114, 6980, 1487, 36, 130, "Input"],
Cell[371604, 7018, 1661, 40, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373302, 7063, 239, 3, 50, "Input"],
Cell[373544, 7068, 4556, 90, 124, "Output"],
Cell[378103, 7160, 370, 7, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
