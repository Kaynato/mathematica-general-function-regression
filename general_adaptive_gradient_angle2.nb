(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    466980,       8703]
NotebookOptionsPosition[    465219,       8645]
NotebookOutlinePosition[    465567,       8660]
CellTagsIndexPosition[    465524,       8657]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"**", 
   RowBox[{
   "*", "\[IndentingNewLine]", "TEMPLATE", " ", "FOR", " ", "ITERATIVE", " ", 
    "OPTIMIZATION", " ", "ALGORITHMS", "\[IndentingNewLine]", "Zicheng", " ", 
    "Gao"}]}], "\[IndentingNewLine]", " ", "****)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "Settings"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InitIterationSettings", "[", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Controls", " ", "-", " ", 
        RowBox[{
        "zero", " ", "fps", " ", "means", " ", "that", " ", "there", " ", 
         "is", " ", "NO", " ", "DELAY"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"doPrint", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doPoint", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doGraph", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEPlot", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"showAll", "=", "False"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"*", " ", "Adaptivity"}], " ", "**)"}], "\[IndentingNewLine]", 
       RowBox[{"BoostRatio", "=", "1.05"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RefineRatio", "=", "0.8"}], ";", "\[IndentingNewLine]", 
       RowBox[{"MaxCorrections", "=", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ErrorRatio", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Acceleration", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AccelBoost", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelRefine", "=", "1."}], ";", "\[IndentingNewLine]", 
       RowBox[{"AccelAmt", "=", "0.00"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"showMistakes", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fps", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Tracker", " ", "values"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"historyAmt", "=", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RefreshInterval", "=", "50"}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.683453669707604*^9, 3.6834536754316063`*^9}, {
   3.683475391860078*^9, 3.683475415478833*^9}, {3.6834763677667036`*^9, 
   3.68347638801742*^9}, {3.6834766625609846`*^9, 3.683476678659403*^9}, {
   3.6834819022317977`*^9, 3.683481908458951*^9}, {3.6834828069823236`*^9, 
   3.6834828150106783`*^9}, {3.683506294653036*^9, 3.6835062964742503`*^9}, {
   3.683541039822339*^9, 3.6835410400745077`*^9}, {3.6835413793833466`*^9, 
   3.683541380017769*^9}, {3.6835430788782673`*^9, 3.683543078980337*^9}, {
   3.6835443377746286`*^9, 3.6835443442829695`*^9}, {3.6835448579666367`*^9, 
   3.683544858642089*^9}, {3.683551184152491*^9, 3.6835511849680333`*^9}, {
   3.683554222110929*^9, 3.6835542236829777`*^9}, {3.6835860643398304`*^9, 
   3.6835860661930656`*^9}, {3.683586115472941*^9, 3.683586118149725*^9}, {
   3.6835892970038157`*^9, 3.6835892977363043`*^9}, 3.68358942242348*^9, {
   3.6835915770620203`*^9, 3.68359158358337*^9}, {3.6839037021458817`*^9, 
   3.683903704691967*^9}, {3.6839037410297537`*^9, 3.6839037645391245`*^9}, {
   3.683904072864169*^9, 3.6839040758187957`*^9}, {3.6839041282984333`*^9, 
   3.683904154777026*^9}, {3.6841458969561996`*^9, 3.684145922001277*^9}, {
   3.68415442607829*^9, 3.6841544319633613`*^9}, {3.684154474584613*^9, 
   3.6841544768689437`*^9}, {3.68422652357506*^9, 3.6842265256554203`*^9}, {
   3.684227646892226*^9, 3.6842276551525483`*^9}, {3.6842286802044*^9, 
   3.68422868078552*^9}, {3.6842288405958767`*^9, 3.6842288439533224`*^9}, {
   3.684230054529559*^9, 3.6842300591302013`*^9}, {3.6842336718949213`*^9, 
   3.6842336724664636`*^9}, {3.6842380174291925`*^9, 
   3.6842380277905993`*^9}, {3.684244538225571*^9, 3.684244539218691*^9}, {
   3.6842447027949715`*^9, 3.6842447369667797`*^9}, {3.684245421776371*^9, 
   3.6842454219638844`*^9}, {3.684245455410366*^9, 3.684245455676019*^9}, {
   3.684245709678302*^9, 3.684245710132448*^9}, {3.6842468531174526`*^9, 
   3.6842468665698442`*^9}, {3.6842489007252254`*^9, 3.684248900874992*^9}, {
   3.6842534787125063`*^9, 3.684253483460732*^9}, {3.6842665759714503`*^9, 
   3.684266578654337*^9}, {3.684677101201646*^9, 3.6846771019971743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InitFunctionData", "[", 
    RowBox[{
    "steepness_", ",", "sharpness_", ",", "paramVariance_", ",", 
     "manualTrueParams_", ",", "noiseFactor_", ",", " ", "noiseDistribution_",
      ",", "forceData_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"eFunc", ",", "params"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ParamVariance", "=", "paramVariance"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", " ", "we", " ", "are", " ", "forcing", " ", "data"}], 
       ",", " ", 
       RowBox[{"use", " ", "data"}], ",", " ", 
       RowBox[{"otherwise", " ", "generate", " ", "data"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "forceData", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Data", "=", "forceData"}], ";", "\[IndentingNewLine]", 
        RowBox[{"DataLength", "=", 
         RowBox[{"Length", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SamplingSet", "=", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"Range", "@", "DataLength"}]}], "/", 
          RowBox[{"N", "@", "SamplingRate"}]}]}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Else", " ", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SamplingSet", "=", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"Range", "@", "DataLength"}]}], "/", 
          RowBox[{"N", "@", "SamplingRate"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"TrueParams", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "manualTrueParams", "]"}], ">", "0"}], ",",
            "manualTrueParams", ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "paramVariance"}], ",", "paramVariance"}], "}"}], 
             ",", "varamt"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Data", " ", "Generation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"NoiselessData", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Fitfunction", "@@", " ", "#"}], "&"}], ")"}], "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{"TrueParams", ",", " ", "#"}], "]"}], "&"}], " ", "/@",
              "SamplingSet"}], ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AddNoise", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "+", 
            RowBox[{"noiseFactor", "*", 
             RowBox[{"RandomVariate", "[", "noiseDistribution", "]"}]}]}], 
           ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Data", "=", 
         RowBox[{"AddNoise", "/@", "NoiselessData"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"DataN", "=", 
      RowBox[{"Norm", "@", "Data"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Data", "=", 
      RowBox[{"Normalize", "@", "Data"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"params", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Unique", "[", "\"\<p\>\"", "]"}], ",", 
        RowBox[{"{", "varamt", "}"}]}], "]"}]}], ";", 
     RowBox[{"paramh", "=", 
      RowBox[{"Hold", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Data", " ", "is", " ", "already", " ", 
       RowBox[{"normalized", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Angdif", "[", 
       RowBox[{"v_", ",", "w_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "@", "v"}], "\[Equal]", "0"}], "||", 
           RowBox[{
            RowBox[{"Norm", "@", "w"}], "\[Equal]", "0"}]}], ",", 
          RowBox[{"Return", "@", 
           RowBox[{"(", "0", ")"}]}]}], "]"}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "@", "v"}], ".", "w"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"N", "@", "v"}], ".", "v"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"N", "@", "w"}], ".", "w"}], "]"}]}], ")"}]}]}], ")"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalKappa]", "=", "steepness"}], ";", 
     RowBox[{"Q", "=", "sharpness"}], ";", 
     RowBox[{
      RowBox[{"AngMap", "[", "x_", "]"}], ":=", 
      RowBox[{"\[CapitalKappa]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], "+", "1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "Q"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "1"}], ")"}], "^", "2"}]}], "]"}]}], ")"}], 
        "/", "5"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eFunc", "=", 
      RowBox[{"paramh", "/.", 
       RowBox[{
        RowBox[{"_", "[", "vars__", "]"}], "\[RuleDelayed]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "vars", "}"}], ",", 
          RowBox[{"AngMap", "@", 
           RowBox[{"N", "[", 
            RowBox[{"Angdif", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Normalize", "[", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Fitfunction", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"{", "vars", "}"}], ",", "#"}], "]"}]}], ")"}], 
                   "&"}], "/@", "SamplingSet"}], ")"}], "]"}], ")"}], ",", 
              "Data"}], "]"}], "]"}]}]}], "]"}]}]}]}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindError", "[", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AError", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Fitfunction", "@@", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                 "SamplingSet"}], ")"}], "-", 
              RowBox[{"DataN", " ", "Data"}]}], ")"}], "^", "2"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"DataLength", "-", "varamt"}], ")"}]}], ")"}], "^", 
        "0.5"}]}], ";"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Global"}], " ", "Iteration", " ", 
    RowBox[{"Reset", " ", "/", " ", "Initialize"}]}], " ", 
   "***)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitIterationData", "[", 
    RowBox[{"factorx_", ",", "manualParams_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totalIter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"factor", "=", "factorx"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Corrections", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ConsecCorrections", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "History", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"iterParams", "=", 
      RowBox[{"initParams", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "manualParams", "]"}], ">", "0"}], ",", 
         "manualParams", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ParamVariance"}], ",", "ParamVariance"}], "}"}], 
           ",", "varamt"}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"debugParams", "=", 
      RowBox[{"{", "iterParams", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"err", "=", 
      RowBox[{"eFunc", "@@", "iterParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prevErr", "=", 
      RowBox[{"err", "+", "1."}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"debugErr", "=", 
      RowBox[{"{", "err", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"doPerturb", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FindError", "[", "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinePlot", "[", 
    RowBox[{"points_", ",", " ", "size_", ",", "amount_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"amount", ">", "0"}], "&&", 
           RowBox[{"size", ">", "amount"}]}], ",", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "amount"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}], 
        "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "@", 
      RowBox[{"Line", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"amount", ">", "0"}], "&&", 
          RowBox[{"size", ">", "amount"}]}], ",", 
         RowBox[{"points", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "amount"}], ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}]}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Default", "[", 
    RowBox[{"RefreshSPlot", ",", "1"}], "]"}], "=", "\"\<Speed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefreshSPlot", "[", "goal_.", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dims", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "debugParams"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"varamt", "\[NotEqual]", "2"}], ",", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SPlot", "=", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eFunc", "@@", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "0"}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{
                 RowBox[{"-", "1."}], "+", 
                 RowBox[{"Min", "@", "#"}]}], ",", 
                RowBox[{"1.", "+", 
                 RowBox[{"Max", "@", "#"}]}]}], "}"}], "&"}], "@", 
             RowBox[{"(", 
              RowBox[{"First", "/@", "dims"}], ")"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"y", ",", 
                RowBox[{
                 RowBox[{"-", "1."}], "+", 
                 RowBox[{"Min", "@", "#"}]}], ",", 
                RowBox[{"1.", "+", 
                 RowBox[{"Max", "@", "#"}]}]}], "}"}], "&"}], "@", 
             RowBox[{"(", 
              RowBox[{"Last", "/@", "dims"}], ")"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "goal"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], ";"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SLinePlot", "[", 
    RowBox[{"points_", ",", "size_", ",", "amount_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{"SPlot", ",", 
     RowBox[{"Graphics", "@", 
      RowBox[{"Line", "@", 
       RowBox[{"(", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"amount", ">", "0"}], "&&", 
           RowBox[{"size", ">", "amount"}]}], ",", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "amount"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "points"}], "]"}], 
        ")"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Visualize", "[", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "@", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Data vs Function\>\"", ",", "\"\<Parameter Space\>\"", ",", 
          "\"\<Error over iterations\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Fitfunction", "@@", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@",
                "SamplingSet"}], ",", 
              RowBox[{"DataN", " ", "Data"}]}], "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotLegends", "->", "None"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"doPoint", ",", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"varamt", "\[Equal]", "3"}], ",", 
              RowBox[{"LinePlot", "[", 
               RowBox[{"debugParams", ",", "totalIter", ",", "historyAmt"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"varamt", "\[Equal]", "2"}], ",", 
              RowBox[{"SLinePlot", "[", 
               RowBox[{"debugParams", ",", "totalIter", ",", "historyAmt"}], 
               "]"}], ",", "\[IndentingNewLine]", "True", ",", 
              "\"\<Incorrect dimensionality\>\""}], "]"}], ",", 
            "\"\<Disabled\>\""}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"doEPlot", ",", 
            RowBox[{"ListLogLogPlot", "[", 
             RowBox[{"debugErr", ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\"\<Disabled\>\""}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Parameters\>\"", ",", 
          "\"\<Iterations, corrections, \[Alpha], \[Beta], LSTolerance, \
factor\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"showAll", "||", 
             RowBox[{"varamt", "<", "5"}]}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", "iterParams", "}"}], "]"}], ",", 
            "\"\<Displaying parameters would take too much space.\>\""}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"totalIter", ",", "Corrections"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ProgressIndicator", "[", 
                FractionBox["ConsecCorrections", "MaxCorrections"], "]"}], 
               ",", "\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"LSTol", ",", "factor"}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"AError", ",", "prevErr"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddToHistory", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"debugParams", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugParams", ",", "iterParams"}], "]"}]}], ";", 
     RowBox[{"debugErr", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"debugErr", ",", "err"}], "]"}]}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToSpacedString", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"str", ",", 
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringJoin", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< \>\""}], ")"}],
             "&"}], "/@", "str"}], ")"}]}], ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Golden", " ", "Ratio", " ", "Search"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Default", "[", 
     RowBox[{"GoldenRatioSearch", ",", "8"}], "]"}], "=", "False"}], ";", " ", 
   RowBox[{"(*", " ", "Verbose", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Default", "[", 
     RowBox[{"GoldenRatioSearch", ",", "9"}], "]"}], "=", "0"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Constrain", " ", "iterations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GoldenRatioSearch", "[", 
     RowBox[{
     "coeff_", ",", "init_", ",", "d_", ",", "surface_", ",", "tolerance_", 
      ",", "min_", ",", "LSTemp_", ",", "verbose_.", ",", "max_."}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gr", "=", 
         RowBox[{"N", "@", "GoldenRatio"}]}], ",", 
        RowBox[{"f", "=", "coeff"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"coeff", "-", "LSTemp"}]}], ",", 
        RowBox[{"h", "=", 
         RowBox[{"coeff", "+", 
          RowBox[{
           RowBox[{"N", "@", "GoldenRatio"}], "*", "LSTemp"}]}]}], ",", 
        RowBox[{"g", "=", 
         RowBox[{"coeff", "+", 
          RowBox[{
           RowBox[{"N", "@", "GoldenRatio"}], "*", "LSTemp"}], "-", 
          "LSTemp"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"e", "=", 
         RowBox[{
          RowBox[{"surface", "@@", 
           RowBox[{"(", 
            RowBox[{"init", "+", 
             RowBox[{"#", "*", "d"}]}], ")"}]}], "&"}]}], ",", 
        RowBox[{"i", "=", "0"}], ",", "eg", ",", "ef", ",", "eh", ",", "el", 
        ",", "\[IndentingNewLine]", "goLeft", ",", "goRight", ",", 
        RowBox[{"trials", "=", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"f", "-", "g"}], "]"}], ">", "tolerance"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"max", "\[Equal]", "0"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"max", "\[NotEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"i", "++"}], "<", "max"}]}], ")"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"trials", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"trials", ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "f", ",", "g", ",", "h"}], "}"}]}], 
              "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"eg", "=", 
           RowBox[{"e", "@", "g"}]}], ";", 
          RowBox[{"ef", "=", 
           RowBox[{"e", "@", "f"}]}], ";", 
          RowBox[{"eh", "=", 
           RowBox[{"e", "@", "h"}]}], ";", 
          RowBox[{"el", "=", 
           RowBox[{"e", "@", "l"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eh", "<", "ef"}], "&&", 
             RowBox[{"eh", "<", "eg"}]}], ",", 
            RowBox[{
             RowBox[{"h", "+=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"h", "-", "l"}], ")"}], "*", "gr"}]}], ";"}], ",", 
            RowBox[{"(*", " ", "Imbalanced", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"el", "<", "ef"}], "&&", 
                RowBox[{"el", "<", "eg"}]}], ",", 
               RowBox[{"l", "=", 
                RowBox[{"l", "-", 
                 RowBox[{"gr", " ", 
                  RowBox[{"(", 
                   RowBox[{"h", "-", "l"}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ef", "<", "eg"}], ",", 
                 RowBox[{"h", "=", "g"}], ",", 
                 RowBox[{"l", "=", "f"}]}], "]"}]}], 
              RowBox[{"(*", " ", 
               RowBox[{"No", " ", "Problems"}], " ", "*)"}], "]"}], ";"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"h", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "l"}], ")"}], "/", "gr"}]}]}], ";", 
          RowBox[{"g", "=", 
           RowBox[{"l", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "l"}], ")"}], "/", "gr"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{
          RowBox[{"trials", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"trials", ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "f", ",", "g", ",", "h"}], "}"}]}], "]"}]}], 
          ";", 
          RowBox[{"Return", "@", "trials"}]}], ",", 
         RowBox[{"Return", "@", "f"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RefineFactor", "[", "f_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "*=", 
      RowBox[{"RefineRatio", "^", "AccelRefine"}]}], ";", 
     RowBox[{"ConsecCorrections", "++"}], ";", 
     RowBox[{"Corrections", "++"}], ";", 
     RowBox[{"AccelRefine", "+=", "AccelAmt"}], ";", 
     RowBox[{"AccelBoost", "=", "1."}], ";", 
     RowBox[{"Return", "@", "f"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoostFactor", "[", 
     RowBox[{"f_", ",", "ceil_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ConsecCorrections", "=", "0"}], ";", 
      RowBox[{"f", "*=", 
       RowBox[{"BoostRatio", "^", "AccelBoost"}]}], ";", 
      RowBox[{"AccelRefine", "=", "1."}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"f", ">", "ceil"}], ",", 
          RowBox[{"Return", "@", "ceil"}]}], "]"}], "AccelBoost"}], "+=", 
       "AccelAmt"}], ";", 
      RowBox[{"Return", "@", "f"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Default", "[", "RandomDirection", "]"}], "=", "1."}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomDirection", "[", "m_.", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "varamt"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "@", "v"}], "\[Equal]", "0"}], ",", 
        RowBox[{"v", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"1.", ",", "varamt"}], "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"v", "*", "m"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomPerp", "[", "to_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "varamt"}], "]"}]}], ",", 
        RowBox[{"m", "=", 
         RowBox[{"Norm", "@", "to"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "@", "v"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"v", "=", 
           RowBox[{"RandomDirection", "[", "m", "]"}]}], ";", 
          RowBox[{"v", "=", 
           RowBox[{"v", "-", 
            RowBox[{"to", "*", 
             RowBox[{"v", ".", 
              RowBox[{"Normalize", "@", "to"}]}]}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"Normalize", "@", "v"}], "*", "m"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PolyN", "[", "degree_", "]"}], ":=", 
    RowBox[{"Total", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"Slot", ",", 
         RowBox[{"degree", "+", "1"}], ",", "2"}], "]"}], "*", 
       RowBox[{"Flatten", "@", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "^", 
            RowBox[{"(", 
             RowBox[{"#2", "-", "1"}], ")"}]}], "&"}], ",", 
          RowBox[{"Slot", "/@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", 
             RowBox[{"degree", "+", "1"}]}], "]"}]}]}], "]"}]}]}], ")"}]}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Random", " ", "Walk", " ", "Combined", " ", "with", " ", "Pattern", " ", 
    "Search", " ", "and", " ", "Line", " ", "Search"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Iterate", "[", 
     RowBox[{
     "n_", ",", "tolerance_", ",", "factor_", ",", "temp_", ",", "prate_", 
      ",", "pmax_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Omega]", "=", "factor"}], ",", "\[IndentingNewLine]", 
        RowBox[{"heat", "=", "temp"}]}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", "<", "n"}], " ", "&&", 
           RowBox[{"(", 
            RowBox[{"NoErr", "||", 
             RowBox[{"(", 
              RowBox[{"AError", ">", "tolerance"}], ")"}]}], ")"}]}], ")"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"doPoint", "&&", 
             RowBox[{"varamt", "\[Equal]", "2"}], "&&", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"totalIter", ",", "RefreshInterval"}], "]"}], 
              "\[Equal]", "0"}]}], ",", 
            RowBox[{
             RowBox[{"RefreshSPlot", "[", "\"\<Speed\>\"", "]"}], ";"}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "We", " ", "try", " ", "a", " ", "perpendicular", " ", 
            "direction"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"adir", "=", 
           RowBox[{"RandomDirection", "[", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bdir", "=", 
           RowBox[{"RandomPerp", "@", "adir"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"err", "=", 
           RowBox[{"eFunc", "@@", "iterParams"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Alpha]", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Last", "@", 
              RowBox[{"(", 
               RowBox[{"IGRSA", "=", 
                RowBox[{"GoldenRatioSearch", "[", 
                 RowBox[{
                 "\[Omega]", ",", "iterParams", ",", "adir", ",", "eFunc", 
                  ",", "LSTol", ",", "err", ",", "heat", ",", "True"}], 
                 "]"}]}], ")"}]}], ")"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Beta]", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Last", "@", 
              RowBox[{"(", 
               RowBox[{"IGRSB", "=", 
                RowBox[{"GoldenRatioSearch", "[", 
                 RowBox[{
                 "\[Omega]", ",", "iterParams", ",", "bdir", ",", "eFunc", 
                  ",", "LSTol", ",", "err", ",", "heat", ",", "True"}], 
                 "]"}]}], ")"}]}], ")"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eFunc", "@@", 
              RowBox[{"(", 
               RowBox[{"iterParams", "+", 
                RowBox[{"\[Alpha]", " ", "adir"}]}], ")"}]}], "<", 
             RowBox[{"eFunc", "@@", 
              RowBox[{"(", 
               RowBox[{"iterParams", "+", 
                RowBox[{"\[Beta]", " ", "bdir"}]}], ")"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Delta]", "=", "\[Beta]"}], ";", 
             RowBox[{"dir", "=", "bdir"}], ";", 
             RowBox[{"iterParams", "+=", 
              RowBox[{"\[Beta]", " ", "bdir"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Delta]", "=", "\[Alpha]"}], ";", 
             RowBox[{"dir", "=", "adir"}], ";", 
             RowBox[{"iterParams", "+=", 
              RowBox[{"\[Alpha]", " ", "adir"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eFunc", "@@", "iterParams"}], ">", "err"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ConsecCorrections", "++"}], ";", 
             RowBox[{"Corrections", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"iterParams", "-=", 
              RowBox[{"\[Delta]", " ", "dir"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heat", "*=", "0.5"}], ";", 
             RowBox[{"\[Omega]", "*=", "0.667"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ConsecCorrections", "=", "0"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"\[Omega]", "=", 
              RowBox[{"Min", "[", 
               RowBox[{"factor", ",", 
                RowBox[{"1.5", " ", "\[Omega]"}]}], "]"}]}], ";", 
             RowBox[{"heat", "=", 
              RowBox[{"Min", "[", 
               RowBox[{"temp", ",", 
                RowBox[{"2.0", " ", "heat"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AddToHistory", "[", "]"}], ";", 
             RowBox[{"i", "++"}], ";", 
             RowBox[{"totalIter", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"fps", "\[NotEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"Pause", "[", "fps", "]"}], ";"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"FindError", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HDFD", "[", "index_", "]"}], ":=", 
   RowBox[{"Abs", "@", 
    RowBox[{"Fourier", "[", 
     RowBox[{
      RowBox[{"Data", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"2", "I", " ", "\[Pi]", 
         RowBox[{"(", 
          RowBox[{"index", "-", "2"}], ")"}], 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Range", "@", "DataLength"}], "-", "1"}], ")"}]}], "/", 
          "DataLength"}]}], "]"}]}], ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "/", "DataLength"}]}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindMax", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Max", "@", "list"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindIndexFreq", "[", "index_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "-", "2", "+", 
          RowBox[{"2", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FindMax", "@", 
               RowBox[{"HDFD", "@", "#"}]}], "-", "1"}], ")"}], "/", 
            "DataLength"}]}]}], ")"}], "*", "2", "\[Pi]", "*", 
        RowBox[{"SamplingRate", "/", "DataLength"}]}], ")"}]}], "&"}], "/@", 
    "index"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RecoverIndices", "[", "]"}], ":=", 
   RowBox[{"First", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Length", "@", "#"}], ")"}], "/", "2."}], "]"}]}], "]"}], 
       "&"}], "@", 
      RowBox[{"FindPeaks", "@", 
       RowBox[{"Abs", "@", 
        RowBox[{"Fourier", "@", "Data"}]}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RecoverFreqList", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"RecoverIndices", "[", "]"}], ",", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "//", "FindIndexFreq"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RecoverDataFreq", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "@", "#"}]}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"Length", "@", "#"}], "]"}], "]"}]}], "]"}], "&"}], "@", 
    RowBox[{"RecoverFreqList", "[", "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6815621708931227`*^9, 3.681562330352498*^9}, 
   3.681562497040437*^9, {3.6815628024075775`*^9, 3.681562861147148*^9}, {
   3.681563505498472*^9, 3.6815635060864873`*^9}, {3.681564204873289*^9, 
   3.681564205665312*^9}, {3.681564238331339*^9, 3.681564377763912*^9}, {
   3.6815644138774757`*^9, 3.6815644292445745`*^9}, {3.6815644878469906`*^9, 
   3.681564588196496*^9}, {3.6815646717885714`*^9, 3.6815646780740185`*^9}, {
   3.681564713541422*^9, 3.681564713797474*^9}, {3.6815678952129745`*^9, 
   3.681567901730054*^9}, {3.6815679945018387`*^9, 3.6815680009509993`*^9}, {
   3.681568046370693*^9, 3.681568069228405*^9}, {3.6815681126606717`*^9, 
   3.681568302189334*^9}, {3.681568406977435*^9, 3.681568559202245*^9}, {
   3.681568624287523*^9, 3.681568687110731*^9}, {3.6815687298876343`*^9, 
   3.6815687304258556`*^9}, {3.6815687637696657`*^9, 
   3.6815689406475735`*^9}, {3.681569085676959*^9, 3.681569112045782*^9}, {
   3.6815691668767204`*^9, 3.6815691719411526`*^9}, {3.6815694358957815`*^9, 
   3.6815694710235147`*^9}, {3.6815695217459598`*^9, 
   3.6815696667020826`*^9}, {3.6815697393237906`*^9, 3.681569799451787*^9}, {
   3.681569841287245*^9, 3.681569850879549*^9}, {3.681570039047075*^9, 
   3.681570088500207*^9}, {3.6815711382830825`*^9, 3.6815711500490465`*^9}, {
   3.6815713958243575`*^9, 3.6815713987967715`*^9}, {3.681571651690309*^9, 
   3.6815717326270823`*^9}, {3.681571898861825*^9, 3.681571928476057*^9}, {
   3.6815724885189953`*^9, 3.6815725199839554`*^9}, {3.6815726352377763`*^9, 
   3.6815727468631196`*^9}, {3.681572821962291*^9, 3.6815728347201214`*^9}, {
   3.68157295825967*^9, 3.681573001583455*^9}, {3.681573127364339*^9, 
   3.681573136317957*^9}, {3.68157330345288*^9, 3.6815733771014705`*^9}, {
   3.6815734161908703`*^9, 3.6815734168791714`*^9}, 3.6815735440325766`*^9, {
   3.68157358016744*^9, 3.68157358217618*^9}, {3.6815736253621693`*^9, 
   3.6815736295029173`*^9}, {3.6815738429116826`*^9, 
   3.6815738481884356`*^9}, {3.6815738982460203`*^9, 
   3.6815739593413076`*^9}, {3.68158214733538*^9, 3.6815821526995497`*^9}, {
   3.6815823844986544`*^9, 3.6815824054864826`*^9}, {3.6815824431424513`*^9, 
   3.6815826521113873`*^9}, {3.681582727235224*^9, 3.681582879236921*^9}, {
   3.681582932226347*^9, 3.681582992336873*^9}, {3.6815830598288555`*^9, 
   3.6815830617439795`*^9}, {3.681583092533844*^9, 3.6815830959236803`*^9}, {
   3.6815833722720833`*^9, 3.681583493212161*^9}, {3.681583605117122*^9, 
   3.6815836054494004`*^9}, {3.6815840003979025`*^9, 3.68158400184723*^9}, {
   3.6815840403408365`*^9, 3.6815840878485966`*^9}, {3.681584569134416*^9, 
   3.68158457187665*^9}, {3.681584680540204*^9, 3.681584680884739*^9}, {
   3.68158485376423*^9, 3.6815848548258705`*^9}, {3.6815850206636624`*^9, 
   3.681585021053091*^9}, {3.681585083443123*^9, 3.6815850897336245`*^9}, {
   3.6815851822151766`*^9, 3.6815851853968716`*^9}, {3.6815854451033382`*^9, 
   3.6815854479667807`*^9}, {3.681590686564697*^9, 3.6815906958723764`*^9}, {
   3.681590736721639*^9, 3.681590794978259*^9}, {3.681596566755397*^9, 
   3.6815965699455237`*^9}, {3.681603359934925*^9, 3.6816033694795704`*^9}, {
   3.6816035521915236`*^9, 3.681603552737888*^9}, {3.681603699106743*^9, 
   3.6816037052072525`*^9}, {3.681603941321679*^9, 3.6816039418400245`*^9}, {
   3.6816039943817463`*^9, 3.6816039948670697`*^9}, {3.6816040676890893`*^9, 
   3.6816040733506956`*^9}, {3.6816041113588305`*^9, 3.681604125647503*^9}, {
   3.681604159646594*^9, 3.681604230239973*^9}, 3.6816043214220285`*^9, {
   3.681604397409239*^9, 3.6816043993275185`*^9}, {3.6816044366767387`*^9, 
   3.681604443906561*^9}, {3.6816045017122445`*^9, 3.6816045024397297`*^9}, {
   3.6816475221392946`*^9, 3.68164754050082*^9}, 3.681647987229904*^9, {
   3.6816480232892017`*^9, 3.681648208200461*^9}, {3.6816482411758256`*^9, 
   3.6816482815531654`*^9}, {3.681648491473945*^9, 3.6816484959462447`*^9}, {
   3.681648781538802*^9, 3.6816488050024595`*^9}, {3.681649004645697*^9, 
   3.6816490205770655`*^9}, {3.681649122387348*^9, 3.6816491851514544`*^9}, {
   3.681652758744893*^9, 3.6816527610052285`*^9}, {3.6816529879131775`*^9, 
   3.6816530249518147`*^9}, {3.681653312277938*^9, 3.681653462352562*^9}, {
   3.6816535110093822`*^9, 3.6816535368018627`*^9}, {3.681653580859788*^9, 
   3.6816536148198957`*^9}, {3.6816538214525537`*^9, 3.68165385922288*^9}, {
   3.681653979449232*^9, 3.6816539848178177`*^9}, {3.6816544838783803`*^9, 
   3.6816545077942157`*^9}, {3.6816554625155334`*^9, 3.681655463061796*^9}, {
   3.6816569829339094`*^9, 3.6816570470714865`*^9}, {3.681658433926193*^9, 
   3.681658434074292*^9}, {3.6816586282599716`*^9, 3.6816586622370815`*^9}, {
   3.681659804985428*^9, 3.6816598054017067`*^9}, 3.681724521037159*^9, 
   3.6817247737398834`*^9, {3.681725049850954*^9, 3.6817250542918463`*^9}, {
   3.6817257095161085`*^9, 3.681725712780613*^9}, {3.681725994533414*^9, 
   3.681725999538206*^9}, {3.6817265750936427`*^9, 3.681726577329742*^9}, {
   3.681726609100688*^9, 3.681726610747135*^9}, {3.6817344038238297`*^9, 
   3.6817344071070213`*^9}, {3.681737918367159*^9, 3.6817379195629563`*^9}, {
   3.6817392466712227`*^9, 3.681739247062479*^9}, {3.681739635988923*^9, 
   3.6817396402727823`*^9}, {3.681739747079029*^9, 3.6817397781367493`*^9}, {
   3.681739861167135*^9, 3.6817398712318487`*^9}, 3.6817400131845436`*^9, {
   3.681740081319996*^9, 3.6817400986655645`*^9}, {3.6817401731463575`*^9, 
   3.681740173921876*^9}, {3.681741054818036*^9, 3.6817410630014954`*^9}, {
   3.681741396180751*^9, 3.681741398243129*^9}, {3.6817414314682913`*^9, 
   3.681741442898916*^9}, {3.6825142858697195`*^9, 3.682514297896387*^9}, {
   3.6828709618425407`*^9, 3.6828709787118196`*^9}, {3.6828710151744833`*^9, 
   3.6828710177548676`*^9}, {3.682871056451414*^9, 3.6828710727978697`*^9}, 
   3.6828726919252305`*^9, {3.6828727955305076`*^9, 3.6828728555223036`*^9}, {
   3.682873378546649*^9, 3.6828734076373024`*^9}, {3.682873520868531*^9, 
   3.682873559173211*^9}, {3.6828736112941427`*^9, 3.682873752044176*^9}, 
   3.682873790717617*^9, {3.682873910650232*^9, 3.6828739437132616`*^9}, {
   3.6828739933613586`*^9, 3.682873993735608*^9}, {3.682874050554145*^9, 
   3.6828740794894342`*^9}, {3.6828742201533623`*^9, 3.682874265329564*^9}, {
   3.682874298319532*^9, 3.6828745143659678`*^9}, {3.682874570277046*^9, 
   3.682874596047637*^9}, {3.682874636112135*^9, 3.6828746733459735`*^9}, {
   3.6828747254820137`*^9, 3.682874850242854*^9}, {3.6828748812823844`*^9, 
   3.6828749723224497`*^9}, {3.682875009751096*^9, 3.682875121152584*^9}, {
   3.6828751689186645`*^9, 3.682875281614401*^9}, {3.6828753555464134`*^9, 
   3.6828753968699646`*^9}, {3.682876304769292*^9, 3.682876365490773*^9}, {
   3.6828763966515465`*^9, 3.682876430613188*^9}, {3.6828767330169744`*^9, 
   3.6828767574752793`*^9}, {3.682876864445448*^9, 3.682876870552519*^9}, {
   3.682877651198309*^9, 3.682877664183419*^9}, {3.682877798475026*^9, 
   3.682877816052747*^9}, {3.6828781436847534`*^9, 3.682878165585703*^9}, {
   3.6828782135244203`*^9, 3.682878224199538*^9}, {3.6828797475700393`*^9, 
   3.682879998255912*^9}, {3.68288009267686*^9, 3.682880143406395*^9}, {
   3.6828801903913555`*^9, 3.6828802734871845`*^9}, {3.6828803052799473`*^9, 
   3.68288041799209*^9}, {3.6828805392829494`*^9, 3.6828806302816153`*^9}, {
   3.6828808568225594`*^9, 3.682880951656781*^9}, {3.682881043212818*^9, 
   3.6828812745349383`*^9}, {3.6828821517986603`*^9, 3.682882174328681*^9}, {
   3.6828822145555*^9, 3.682882220983786*^9}, {3.6828824057689743`*^9, 
   3.6828824251168723`*^9}, {3.6828824972309494`*^9, 
   3.6828825619140596`*^9}, {3.682882979695325*^9, 3.6828830600888634`*^9}, {
   3.682883195068556*^9, 3.6828832043139057`*^9}, {3.6830396849966636`*^9, 
   3.6830397732688446`*^9}, {3.6830399066630836`*^9, 3.683039913180719*^9}, {
   3.6830399483475113`*^9, 3.683039948975526*^9}, {3.683040242086508*^9, 
   3.6830402424345293`*^9}, {3.683040324076639*^9, 3.683040324392643*^9}, {
   3.683041010420825*^9, 3.6830410349325366`*^9}, 3.6830411257718563`*^9, {
   3.6830417513831806`*^9, 3.6830417517711535`*^9}, {3.6830418588510437`*^9, 
   3.6830418977140875`*^9}, {3.683041942952117*^9, 3.683041985756014*^9}, {
   3.6830485694199595`*^9, 3.683048569545044*^9}, {3.6830486044225082`*^9, 
   3.6830486130522604`*^9}, {3.683049759526929*^9, 3.683049784091267*^9}, 
   3.6830498387137628`*^9, {3.6830499489338756`*^9, 3.6830499829444623`*^9}, {
   3.683050107443301*^9, 3.6830501080437*^9}, {3.6830502134530907`*^9, 
   3.683050237732626*^9}, {3.6830508463538647`*^9, 3.683050848092024*^9}, {
   3.6830512174741836`*^9, 3.683051318327956*^9}, {3.68305141269347*^9, 
   3.6830514189526434`*^9}, {3.6830514490507092`*^9, 
   3.6830514517945375`*^9}, {3.683051513194645*^9, 3.6830515464718294`*^9}, {
   3.6830528447429323`*^9, 3.6830528655883617`*^9}, 3.6830530458067245`*^9, {
   3.6830690703621416`*^9, 3.6830691417092147`*^9}, {3.6830694416214046`*^9, 
   3.6830694434306107`*^9}, {3.6830694833502245`*^9, 3.683069484821205*^9}, {
   3.683070729955146*^9, 3.6830707740605483`*^9}, {3.6830712713652153`*^9, 
   3.6830712716263876`*^9}, {3.6830719460428877`*^9, 3.683071964236906*^9}, {
   3.6830720005991483`*^9, 3.683072014350318*^9}, {3.68307204839301*^9, 
   3.6830720582609043`*^9}, {3.683072135692527*^9, 3.6830721509567013`*^9}, {
   3.6830728276947327`*^9, 3.683072829097669*^9}, {3.6830735964682264`*^9, 
   3.6830735969445453`*^9}, {3.683073691666543*^9, 3.683073692095833*^9}, {
   3.6830737483087044`*^9, 3.6830738016602697`*^9}, {3.6830738397446594`*^9, 
   3.683073884579549*^9}, {3.6830740536964674`*^9, 3.6830740562001324`*^9}, {
   3.683074113623417*^9, 3.683074136141427*^9}, {3.6831137205409174`*^9, 
   3.6831137283381157`*^9}, {3.683114615466959*^9, 3.683114683204441*^9}, {
   3.683282340518567*^9, 3.6832824072357135`*^9}, {3.6832824475178485`*^9, 
   3.6832825729421616`*^9}, {3.6832826105214677`*^9, 3.683282687613647*^9}, 
   3.6832828174469943`*^9, {3.683282888362079*^9, 3.6832828887951603`*^9}, {
   3.683282922716254*^9, 3.683282927889253*^9}, {3.683282959197586*^9, 
   3.6832829787227917`*^9}, {3.683283115450907*^9, 3.6832831376467*^9}, {
   3.6832845350763054`*^9, 3.683284598197768*^9}, {3.6832846488608637`*^9, 
   3.6832846838701496`*^9}, {3.6834531221145186`*^9, 
   3.6834531225835247`*^9}, {3.6834531627014427`*^9, 
   3.6834532309226456`*^9}, {3.683453374690505*^9, 3.6834533843788047`*^9}, {
   3.683453539085793*^9, 3.6834536630132537`*^9}, 3.683453695691606*^9, {
   3.6834738983736906`*^9, 3.6834739148350773`*^9}, {3.6834739684969196`*^9, 
   3.683473969084311*^9}, {3.6834751355005164`*^9, 3.683475142708455*^9}, {
   3.683475301179598*^9, 3.6834753087796564`*^9}, {3.6834759178912888`*^9, 
   3.683476059550787*^9}, {3.6834762186555815`*^9, 3.683476223096542*^9}, {
   3.683476615545763*^9, 3.683476617722215*^9}, {3.683476842666613*^9, 
   3.6834768881495647`*^9}, {3.683477069632125*^9, 3.6834771669518113`*^9}, {
   3.6834772529809628`*^9, 3.6834772563114014`*^9}, {3.6834821858820133`*^9, 
   3.6834822862699795`*^9}, {3.6834823347393136`*^9, 3.683482392754013*^9}, {
   3.683482751210119*^9, 3.683482753181434*^9}, {3.683482786817873*^9, 
   3.683482801103403*^9}, {3.683482869966338*^9, 3.6834828981661496`*^9}, {
   3.683483063285297*^9, 3.6834830994669647`*^9}, {3.6834832963935027`*^9, 
   3.6834833307854443`*^9}, {3.6834890127908435`*^9, 
   3.6834890216122856`*^9}, {3.683493965713439*^9, 3.6834939814519386`*^9}, {
   3.6834944046024194`*^9, 3.6834944049186287`*^9}, {3.6835409768643427`*^9, 
   3.68354103279165*^9}, {3.683542352696763*^9, 3.6835423564522676`*^9}, {
   3.6835425125263824`*^9, 3.6835426272869368`*^9}, {3.683542769061509*^9, 
   3.6835428376312504`*^9}, {3.683542882745347*^9, 3.6835428870232*^9}, {
   3.6835432670537963`*^9, 3.6835432713906884`*^9}, {3.6835443717663035`*^9, 
   3.6835443858376884`*^9}, {3.683544436760659*^9, 3.6835444599851522`*^9}, {
   3.6835449419844527`*^9, 3.6835449764104195`*^9}, {3.683547403125822*^9, 
   3.683547405181193*^9}, {3.683547447009968*^9, 3.6835474772120934`*^9}, {
   3.683547554671893*^9, 3.6835475550151224`*^9}, {3.6835476722649136`*^9, 
   3.683547676145505*^9}, 3.683554020810647*^9, {3.6835569974081154`*^9, 
   3.6835570021610966`*^9}, {3.6835725278858185`*^9, 3.68357257121698*^9}, {
   3.68358414383438*^9, 3.683584144076541*^9}, {3.6835858200268536`*^9, 
   3.6835858416392717`*^9}, {3.6835858844017982`*^9, 
   3.6835859177690554`*^9}, {3.683585973043927*^9, 3.6835859735662756`*^9}, {
   3.6835860953875403`*^9, 3.6835861110930166`*^9}, {3.683586298403968*^9, 
   3.683586316865286*^9}, {3.683586869084463*^9, 3.683586869359646*^9}, {
   3.683587246294219*^9, 3.683587252347257*^9}, {3.683588468470273*^9, 
   3.6835884705416536`*^9}, {3.683588751475239*^9, 3.6835887635192733`*^9}, {
   3.6835891381948776`*^9, 3.6835891570914836`*^9}, {3.683589220350684*^9, 
   3.6835892499174056`*^9}, {3.683589354340063*^9, 3.68358935458823*^9}, 
   3.683589442486864*^9, 3.6835894790772724`*^9, {3.683589651931579*^9, 
   3.6835897216941185`*^9}, {3.683589767067384*^9, 3.683589767428624*^9}, {
   3.6835898111598*^9, 3.683589918190194*^9}, {3.6835901934674063`*^9, 
   3.683590420481843*^9}, {3.6835904693824644`*^9, 3.683590505985881*^9}, {
   3.68359054575541*^9, 3.683590546935198*^9}, {3.683590688175063*^9, 
   3.683590691882536*^9}, {3.68359072474746*^9, 3.683590798011331*^9}, {
   3.6835912252603397`*^9, 3.683591324401475*^9}, {3.6835915539676127`*^9, 
   3.683591573937935*^9}, {3.68359166900135*^9, 3.683591673479336*^9}, {
   3.683591735550743*^9, 3.6835917619033217`*^9}, {3.6835919303327627`*^9, 
   3.683592030225396*^9}, {3.6836280937299933`*^9, 3.6836280978757577`*^9}, {
   3.6839021856550207`*^9, 3.6839021999741535`*^9}, {3.683902280360517*^9, 
   3.683902285380355*^9}, {3.6839037120869265`*^9, 3.6839037140790567`*^9}, {
   3.6839037496357555`*^9, 3.6839037645547504`*^9}, {3.6839053344220777`*^9, 
   3.683905351426256*^9}, {3.683906180192263*^9, 3.6839061921634874`*^9}, {
   3.6839875956385236`*^9, 3.683987614590557*^9}, {3.6839876476417074`*^9, 
   3.6839877277978935`*^9}, {3.6839877924853163`*^9, 
   3.6839878155457582`*^9}, {3.683987902793461*^9, 3.6839879900650897`*^9}, {
   3.683988306034585*^9, 3.6839883083303003`*^9}, {3.6839887740033646`*^9, 
   3.6839888146587486`*^9}, {3.6839888523002205`*^9, 3.683989047907669*^9}, {
   3.6839891061597366`*^9, 3.6839891329450226`*^9}, {3.683989174707094*^9, 
   3.6839891819668493`*^9}, {3.6840784399294868`*^9, 3.684078448000061*^9}, {
   3.6841459377324543`*^9, 3.6841459744833455`*^9}, {3.6841460646489916`*^9, 
   3.684146138503964*^9}, {3.684146219100835*^9, 3.6841462835756083`*^9}, 
   3.6841463708542147`*^9, {3.6841543887613535`*^9, 3.6841544024827223`*^9}, {
   3.6841544396200686`*^9, 3.6841545377607594`*^9}, {3.68415502997676*^9, 
   3.6841550324372225`*^9}, {3.684155518246133*^9, 3.6841555775401096`*^9}, {
   3.6841556975375586`*^9, 3.6841557015539083`*^9}, {3.684155924241458*^9, 
   3.6841559307785826`*^9}, {3.6841614718921084`*^9, 
   3.6841614893475513`*^9}, {3.6841739490715075`*^9, 3.684173990912196*^9}, {
   3.684174083270712*^9, 3.684174155425061*^9}, {3.684174305072982*^9, 
   3.6841748979809484`*^9}, {3.684175095413746*^9, 3.6841751164480844`*^9}, {
   3.6841753726276054`*^9, 3.6841753746318245`*^9}, {3.6841871415307693`*^9, 
   3.6841871561224337`*^9}, {3.684187354369912*^9, 3.684187355551918*^9}, {
   3.6841875335875144`*^9, 3.684187543276973*^9}, {3.6841875822814283`*^9, 
   3.684187598592739*^9}, {3.684187665527084*^9, 3.684187672375554*^9}, {
   3.6841877062547417`*^9, 3.6841877486371155`*^9}, {3.6841880234932184`*^9, 
   3.6841880932996683`*^9}, {3.6841883472083387`*^9, 
   3.6841883734471984`*^9}, {3.6841884267994857`*^9, 
   3.6841884271657305`*^9}, {3.684188636343356*^9, 3.684188788341358*^9}, {
   3.6841888591049247`*^9, 3.6841888757730365`*^9}, {3.684189104991943*^9, 
   3.6841891653141613`*^9}, {3.6841892476734934`*^9, 3.684189377930333*^9}, {
   3.684189475552414*^9, 3.6841894795100527`*^9}, 3.6841895181818323`*^9, {
   3.684194722864832*^9, 3.684194740818803*^9}, {3.684194811597988*^9, 
   3.6841948870442853`*^9}, {3.684195218258096*^9, 3.6841952633831778`*^9}, {
   3.684195356266101*^9, 3.6841953729101963`*^9}, {3.684195481895853*^9, 
   3.6841955115906496`*^9}, {3.684195707187049*^9, 3.684195715542618*^9}, {
   3.6841962734832487`*^9, 3.684196278645156*^9}, {3.684196513347834*^9, 
   3.684196520411089*^9}, {3.6841966462015524`*^9, 3.68419664720222*^9}, {
   3.684196721739007*^9, 3.6841967268695498`*^9}, {3.6841969219830666`*^9, 
   3.6841969319477096`*^9}, {3.6841970224550476`*^9, 3.684197050594807*^9}, {
   3.684197267735571*^9, 3.6841972682238927`*^9}, {3.684197425142143*^9, 
   3.684197431848612*^9}, {3.6841974921207933`*^9, 3.6841975501825027`*^9}, {
   3.6841976293672924`*^9, 3.6841976319760323`*^9}, {3.68419766929781*^9, 
   3.6841976716403728`*^9}, {3.6842267272318125`*^9, 3.684226772753748*^9}, {
   3.684226908573147*^9, 3.684226910102749*^9}, {3.6842269882168655`*^9, 
   3.6842270151238174`*^9}, {3.684227102462908*^9, 3.6842271572933054`*^9}, {
   3.6842272240624332`*^9, 3.6842273620985947`*^9}, {3.6842273986560526`*^9, 
   3.684227500796958*^9}, {3.6842275827752075`*^9, 3.684227616457044*^9}, {
   3.6842285959693227`*^9, 3.6842286141571484`*^9}, {3.6842286634569902`*^9, 
   3.684228668257824*^9}, {3.6842287790714784`*^9, 3.6842288339799566`*^9}, {
   3.6842288774322343`*^9, 3.684228893791685*^9}, {3.6842291481554017`*^9, 
   3.684229164156329*^9}, {3.6842292037790956`*^9, 3.684229215472499*^9}, {
   3.684229576423067*^9, 3.6842295826156855`*^9}, {3.684229984668908*^9, 
   3.68422999230593*^9}, {3.684230521841675*^9, 3.6842305230123897`*^9}, {
   3.6842307617108493`*^9, 3.6842307744723735`*^9}, {3.6842308388204813`*^9, 
   3.6842308542947006`*^9}, {3.6842314849415503`*^9, 3.684231503578167*^9}, {
   3.6842317480769806`*^9, 3.6842317710677104`*^9}, {3.684232066791975*^9, 
   3.6842320769091682`*^9}, {3.684233094994293*^9, 3.684233101058877*^9}, {
   3.684233785171316*^9, 3.684233793821039*^9}, {3.684233825387073*^9, 
   3.6842338364252386`*^9}, {3.684233977235647*^9, 3.684233977853349*^9}, {
   3.6842340763146877`*^9, 3.6842341160582447`*^9}, {3.6842341921122646`*^9, 
   3.6842341936097093`*^9}, 3.6842342421033754`*^9, {3.684234304803111*^9, 
   3.684234308795781*^9}, {3.6842345591003733`*^9, 3.6842345705316515`*^9}, {
   3.684234762247581*^9, 3.6842347645891733`*^9}, {3.684237739582346*^9, 
   3.684237849396866*^9}, {3.6842378822671695`*^9, 3.684237883494049*^9}, {
   3.684237984576208*^9, 3.6842379897938147`*^9}, {3.6842421000089583`*^9, 
   3.684242259608226*^9}, {3.684242403944826*^9, 3.6842424080711327`*^9}, {
   3.6842425571168585`*^9, 3.684242559783247*^9}, {3.6842427128767242`*^9, 
   3.684242738838863*^9}, {3.6842430643294644`*^9, 3.684243097493476*^9}, {
   3.684243217930537*^9, 3.684243246577853*^9}, {3.6842433370180492`*^9, 
   3.684243411658571*^9}, {3.684243479287342*^9, 3.684243487411567*^9}, {
   3.6842435536817226`*^9, 3.6842435538067274`*^9}, {3.68424364199662*^9, 
   3.684243650405121*^9}, {3.6842443059916954`*^9, 3.684244321739257*^9}, {
   3.6842443550170994`*^9, 3.684244368193709*^9}, {3.6842444052064204`*^9, 
   3.684244421203187*^9}, {3.6842444762288103`*^9, 3.6842444895024233`*^9}, {
   3.684244662080798*^9, 3.6842446641181364`*^9}, {3.6842447134170885`*^9, 
   3.684244713557737*^9}, {3.6842449372676144`*^9, 3.684245076180641*^9}, {
   3.684245232390278*^9, 3.6842452325309067`*^9}, {3.6842454674112053`*^9, 
   3.6842456558709874`*^9}, {3.684246641548724*^9, 3.6842467188852043`*^9}, {
   3.684247317681772*^9, 3.684247322632949*^9}, {3.6842474062950907`*^9, 
   3.6842474234456463`*^9}, {3.6842474637449255`*^9, 3.684247486686648*^9}, {
   3.6842482735105453`*^9, 3.6842482877903357`*^9}, {3.684248540451442*^9, 
   3.684248689641552*^9}, {3.6842487456998425`*^9, 3.6842488870356183`*^9}, {
   3.684248920363385*^9, 3.684248927714178*^9}, 3.6842490538073425`*^9, {
   3.684249135352956*^9, 3.6842491830488987`*^9}, {3.684249504626378*^9, 
   3.684249527656725*^9}, {3.6842498713210135`*^9, 3.6842499718600454`*^9}, 
   3.684250004670815*^9, {3.684250041599801*^9, 3.684250047535657*^9}, {
   3.684250245298251*^9, 3.6842503077865686`*^9}, {3.6842503683003454`*^9, 
   3.6842503877452726`*^9}, {3.684250424217555*^9, 3.6842504599826064`*^9}, {
   3.684250490382244*^9, 3.684250524085553*^9}, {3.6842505661668124`*^9, 
   3.684250566385598*^9}, {3.6842508397568903`*^9, 3.6842508769563828`*^9}, {
   3.6842509502277923`*^9, 3.684250983658557*^9}, {3.684251880383444*^9, 
   3.6842518968719077`*^9}, {3.6842519703144655`*^9, 3.684251986321845*^9}, {
   3.6842520597231936`*^9, 3.6842520619962006`*^9}, {3.6842520922294135`*^9, 
   3.6842522231980505`*^9}, {3.6842527802907677`*^9, 3.684252807564906*^9}, {
   3.684257435878513*^9, 3.684257465395934*^9}, {3.684257902299054*^9, 
   3.684257910258952*^9}, {3.684258206542226*^9, 3.6842582340696297`*^9}, 
   3.684264209870655*^9, {3.6842647016558323`*^9, 3.684264718676012*^9}, {
   3.684265116062686*^9, 3.68426513632611*^9}, {3.6842655471285534`*^9, 
   3.684265601409111*^9}, {3.6842663250243*^9, 3.684266339947219*^9}, {
   3.684266425794923*^9, 3.6842664277002025`*^9}, {3.6842665707617807`*^9, 
   3.6842665719171925`*^9}, 3.684266671269824*^9, {3.6842678651167316`*^9, 
   3.684267984234191*^9}, {3.6843504602698765`*^9, 3.68435050618816*^9}, {
   3.6846770837146416`*^9, 3.6846770936109543`*^9}, {3.684677125719303*^9, 
   3.6846772207565746`*^9}, {3.684677263304473*^9, 3.68467732481923*^9}, {
   3.6846774250446606`*^9, 3.6846776085722136`*^9}, {3.6846776391615906`*^9, 
   3.684677697557472*^9}, {3.6846778010942335`*^9, 3.6846778897231307`*^9}, {
   3.6846784929689817`*^9, 3.6846787353668475`*^9}, {3.6846787729038143`*^9, 
   3.684678856922987*^9}, {3.6846789051299562`*^9, 3.684679044965766*^9}, {
   3.684679084769738*^9, 3.6846791277775946`*^9}, {3.684679348341905*^9, 
   3.6846794499773426`*^9}, {3.684679640950845*^9, 3.684679641196493*^9}, {
   3.6846798058757124`*^9, 3.6846798338122253`*^9}, {3.684679943262946*^9, 
   3.684679967445891*^9}, {3.6846804500989127`*^9, 3.684680450333284*^9}, 
   3.684681872693661*^9, {3.6846819242568665`*^9, 3.684681965935652*^9}, {
   3.6846820336369395`*^9, 3.684682037309689*^9}, {3.6846827724597797`*^9, 
   3.6846828838731227`*^9}, {3.6847518569183397`*^9, 
   3.6847519217363396`*^9}, {3.6847520117493887`*^9, 
   3.6847520276164255`*^9}, {3.6847521544313483`*^9, 3.6847521567677608`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RecordedComparisonData", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"SET", " ", "DATA"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varamt", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DataLength", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SamplingRate", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doNormalize", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fitfunction", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"#1", " ", "#2"}], "]"}], "+", "#3"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFunctionData", "[", 
     RowBox[{"5.", ",", "512.", ",", "5.", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", "0.", ",", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"1", ",", "0.2"}], "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "TrueParams"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6835419646529064`*^9, 3.6835419646549087`*^9}, {
   3.6835420064157667`*^9, 3.6835420109077635`*^9}, {3.6835420853294077`*^9, 
   3.6835420860769105`*^9}, {3.6835422873921986`*^9, 
   3.6835422981143527`*^9}, {3.683554709218642*^9, 3.6835547123777494`*^9}, {
   3.6835547637910476`*^9, 3.683554783649292*^9}, {3.683567656024397*^9, 
   3.6835677516671762`*^9}, 3.683567880753562*^9, {3.683568085215626*^9, 
   3.683568085381737*^9}, {3.6835713057158346`*^9, 3.683571305790885*^9}, 
   3.6835713383670073`*^9, {3.6835725418111076`*^9, 3.683572556553466*^9}, {
   3.683572666157154*^9, 3.6835726667105227`*^9}, {3.6835727527798867`*^9, 
   3.683572754232853*^9}, {3.6835815482277555`*^9, 3.683581549655707*^9}, {
   3.6835815863002195`*^9, 3.6835816111238165`*^9}, {3.683581655744582*^9, 
   3.68358165583164*^9}, {3.6835817014055953`*^9, 3.683581701737815*^9}, {
   3.683581750984215*^9, 3.683581832952446*^9}, {3.6835819181963577`*^9, 
   3.683581968554219*^9}, {3.6835820733522367`*^9, 3.6835821006258116`*^9}, {
   3.683582134875126*^9, 3.683582136270055*^9}, {3.683582178932672*^9, 
   3.683582196716383*^9}, {3.6835841616137304`*^9, 3.683584215254002*^9}, {
   3.683584458385864*^9, 3.6835844585019407`*^9}, 3.683584677073697*^9, {
   3.6835861283395233`*^9, 3.6835861516280565`*^9}, 3.6835864512269135`*^9, {
   3.683587364143836*^9, 3.6835873659730563`*^9}, {3.683587533046694*^9, 
   3.6835875337521667`*^9}, {3.6835877422231827`*^9, 3.683587743186824*^9}, {
   3.683588230761705*^9, 3.6835882464141455`*^9}, {3.6835887139530296`*^9, 
   3.6835887146294785`*^9}, {3.6835888438188405`*^9, 3.683588844555332*^9}, {
   3.6835891246648536`*^9, 3.683589125038102*^9}, {3.683589732597389*^9, 
   3.6835897575020027`*^9}, {3.683590816123415*^9, 3.6835908487431746`*^9}, {
   3.6835909403302712`*^9, 3.683590955217201*^9}, {3.683591071822985*^9, 
   3.6835910727696185`*^9}, {3.6835914565886545`*^9, 
   3.6835914568678417`*^9}, {3.683591860359085*^9, 3.6835918842380114`*^9}, {
   3.6836280124357667`*^9, 3.6836280180044785`*^9}, {3.6836282412604074`*^9, 
   3.683628243865145*^9}, {3.6836282757694263`*^9, 3.683628275897513*^9}, {
   3.6836283180166097`*^9, 3.6836283197657766`*^9}, {3.6836284182464705`*^9, 
   3.683628421246473*^9}, {3.6836286364541993`*^9, 3.683628642163007*^9}, {
   3.6839019098369675`*^9, 3.683901950280756*^9}, {3.68390198920362*^9, 
   3.6839020066668577`*^9}, {3.6839020623111153`*^9, 
   3.6839020690969563`*^9}, {3.683902274049365*^9, 3.6839022753034325`*^9}, {
   3.6839023596194916`*^9, 3.6839023623812637`*^9}, {3.6839035106316624`*^9, 
   3.6839035130233192`*^9}, 3.68390354806656*^9, {3.6839061043511*^9, 
   3.6839061270575476`*^9}, {3.68391267767822*^9, 3.683912686138401*^9}, {
   3.6839127280699935`*^9, 3.683912736413826*^9}, {3.6839127790010605`*^9, 
   3.6839127791573086`*^9}, {3.683987101745607*^9, 3.683987124658742*^9}, {
   3.683987184340996*^9, 3.6839871903530564`*^9}, {3.6839873505751324`*^9, 
   3.683987352938509*^9}, {3.683987840380268*^9, 3.6839878822009926`*^9}, {
   3.683988032643795*^9, 3.6839880331091447`*^9}, {3.6839880827664213`*^9, 
   3.68398808839312*^9}, {3.6839881781272993`*^9, 3.6839882160646515`*^9}, 
   3.683988335453696*^9, {3.6839884288227525`*^9, 3.6839884572513604`*^9}, {
   3.6839887400492992`*^9, 3.683988740143053*^9}, {3.6840743879043164`*^9, 
   3.684074391431772*^9}, {3.6840746223933983`*^9, 3.6840746225346775`*^9}, {
   3.684074665832465*^9, 3.6840746778052917`*^9}, {3.6840748430818048`*^9, 
   3.684074869552205*^9}, {3.6840759705413504`*^9, 3.6840759915836725`*^9}, {
   3.6840760810240507`*^9, 3.684076093560177*^9}, {3.6840772407828364`*^9, 
   3.6840772513710423`*^9}, {3.684077306285157*^9, 3.6840773254522867`*^9}, {
   3.6840784760243645`*^9, 3.6840784823613377`*^9}, {3.68407961976812*^9, 
   3.6840796233659725`*^9}, {3.684079663597642*^9, 3.684079665994955*^9}, {
   3.6840797297196608`*^9, 3.6840797411662073`*^9}, {3.684079785230708*^9, 
   3.6840797990058436`*^9}, {3.6840798331242924`*^9, 3.6840798561028366`*^9}, 
   3.6840801120285316`*^9, {3.6840801602198124`*^9, 3.684080164323293*^9}, 
   3.684108800745036*^9, {3.6841103389774776`*^9, 3.6841103602002373`*^9}, {
   3.684110456313184*^9, 3.6841104579512763`*^9}, 3.68414608880644*^9, 
   3.684146330818264*^9, {3.6841557460659065`*^9, 3.684155771918435*^9}, {
   3.6841558220921173`*^9, 3.6841558396787124`*^9}, {3.684197717876197*^9, 
   3.6841977230576534`*^9}, 3.6841979554892983`*^9, {3.6841983237580767`*^9, 
   3.684198339555962*^9}, {3.684198505393222*^9, 3.6841985357741117`*^9}, {
   3.6841987733950624`*^9, 3.6841987946849422`*^9}, {3.684198853855687*^9, 
   3.684198860455472*^9}, {3.6841989094781485`*^9, 3.684198912421386*^9}, {
   3.684198947344911*^9, 3.684199011754592*^9}, {3.684199042731906*^9, 
   3.684199088170946*^9}, {3.684199127133624*^9, 3.684199136888961*^9}, {
   3.6841992527794027`*^9, 3.6841992789403954`*^9}, {3.6841993327364545`*^9, 
   3.684199337681367*^9}, 3.6842268392812834`*^9, {3.68422696289544*^9, 
   3.684226963071652*^9}, {3.684229409093545*^9, 3.6842294098135853`*^9}, {
   3.6842346240653877`*^9, 3.684234624627936*^9}, {3.684234697904127*^9, 
   3.684234698504237*^9}, {3.6842458100192127`*^9, 3.684245810613161*^9}, {
   3.6842463924453545`*^9, 3.6842463925547466`*^9}, {3.68424650129397*^9, 
   3.684246501944578*^9}, {3.6842470973721495`*^9, 3.6842470975352345`*^9}, {
   3.684248696910921*^9, 3.684248697020294*^9}, {3.6842516916972165`*^9, 
   3.6842516961020713`*^9}, {3.6842517754903984`*^9, 3.684251781840536*^9}, {
   3.6842518221466684`*^9, 3.6842518266219964`*^9}, {3.6842528887921414`*^9, 
   3.684252895441727*^9}, {3.684253103023172*^9, 3.684253103195057*^9}, {
   3.6842531642207575`*^9, 3.684253164345752*^9}, {3.6842532175942907`*^9, 
   3.6842532259768395`*^9}, {3.684253257149149*^9, 3.6842532680093803`*^9}, {
   3.6842536032024612`*^9, 3.6842536039019203`*^9}, {3.6842551725263014`*^9, 
   3.6842551812636147`*^9}, {3.68425806745712*^9, 3.684258077170355*^9}, 
   3.684258353435296*^9, {3.684258495930876*^9, 3.684258497611491*^9}, {
   3.6842585420741053`*^9, 3.6842585437178507`*^9}, {3.6842585788368273`*^9, 
   3.6842585874847145`*^9}, {3.684264349207182*^9, 3.6842643664119344`*^9}, 
   3.684264402721389*^9, {3.6842644847874355`*^9, 3.6842645048856506`*^9}, {
   3.684264551067999*^9, 3.684264551546888*^9}, {3.6842645866229115`*^9, 
   3.6842645872965684`*^9}, {3.68426462704058*^9, 3.6842646702270217`*^9}, {
   3.684264733744396*^9, 3.6842647427202005`*^9}, {3.684264774225466*^9, 
   3.6842648116098194`*^9}, {3.684265248703191*^9, 3.6842652517791567`*^9}, {
   3.6842654840278025`*^9, 3.6842655307714033`*^9}, {3.684265587988038*^9, 
   3.6842656194672604`*^9}, {3.6842663497929096`*^9, 3.6842664007013025`*^9}, 
   3.684266431553746*^9, {3.684266590276435*^9, 3.684266590547018*^9}, {
   3.6842669974579344`*^9, 3.684266997873189*^9}, {3.6842671029471645`*^9, 
   3.684267103234813*^9}, {3.684267140794588*^9, 3.6842671410483336`*^9}, {
   3.6842676068402224`*^9, 3.684267608957345*^9}, {3.6843498895776834`*^9, 
   3.6843498905852823`*^9}, {3.6843501467191415`*^9, 3.684350149296046*^9}, {
   3.6843502568946753`*^9, 3.6843502777245474`*^9}, {3.684350309194461*^9, 
   3.684350309774332*^9}, {3.6843505457711425`*^9, 3.6843505596101885`*^9}, {
   3.684350760487171*^9, 3.684350777267625*^9}, {3.6843508094045343`*^9, 
   3.6843508285212407`*^9}, {3.6846773274549894`*^9, 3.684677331018545*^9}, {
   3.6846795742936754`*^9, 3.684679605876995*^9}, {3.684680722198372*^9, 
   3.684680722465*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6843502323007865`*^9, {3.684350270166112*^9, 3.6843502784547863`*^9}, 
   3.684350310249891*^9, {3.6843503481442566`*^9, 3.684350388352843*^9}, 
   3.6843505604458003`*^9, 3.6843506111205473`*^9, 3.6843507615441046`*^9, {
   3.684350810681213*^9, 3.684350829036888*^9}, 3.684434306886322*^9, 
   3.6846785660971622`*^9, {3.684679567370019*^9, 3.6846796061296487`*^9}, {
   3.6846806717284355`*^9, 3.6846806768889027`*^9}, 3.6846807228282843`*^9, 
   3.684681969029537*^9, 3.684682039295244*^9, 3.6846829000911975`*^9, {
   3.6846836181438494`*^9, 3.684683625858276*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"BEGIN", " ", "ITERATION"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Smoothness", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SmoothingFunction", "[", "l_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", "/", 
           SuperscriptBox["2.", 
            RowBox[{"First", "[", "#2", "]"}]]}], "&"}], ",", "l"}], "]"}], 
       "]"}], "/", "Smoothness"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RefreshInterval", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationSettings", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"showMistakes", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doSteepest", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"showAll", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"historyAmt", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LSTemp", "=", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LSTol", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitIterationData", "[", 
     RowBox[{"0.01", ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", " ", "2."}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RefreshSPlot", "[", "\"\<Speed\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"doPerturb", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Visualize", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ToSpacedString", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<Frequency indices: \>\"", ",", " ", 
         RowBox[{"RecoverIndices", "[", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ToSpacedString", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<Data frequencies: \>\"", ",", " ", 
         RowBox[{"RecoverFreqList", "[", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ToSpacedString", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "doNormalize"}], ",", "\"\<Not \>\"", ",", 
           "\"\<\>\""}], "]"}], ",", "\"\<Normalized\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"showAll", "||", 
         RowBox[{"varamt", "<", "5"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToSpacedString", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<TrueParams\>\"", ",", "TrueParams"}], "}"}]}], ",", 
           RowBox[{"ToSpacedString", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<InitialParams\>\"", ",", "iterParams"}], "}"}]}], 
           ",", 
           RowBox[{"ToSpacedString", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<FitFunction:\>\"", ",", 
              RowBox[{"InputForm", "@", "Fitfunction"}]}], "}"}]}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        "\"\<Displaying parameters would take too much space.\>\""}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ToSpacedString", "@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<LSTemp and LSTolerance:\>\"", ",", "LSTemp", ",", "LSTol"}], 
        "}"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681582981711115*^9, 3.681582986568472*^9}, {
   3.6815830288923187`*^9, 3.681583033177169*^9}, {3.681583138155509*^9, 
   3.6815831669343147`*^9}, {3.681583254303117*^9, 3.681583294651238*^9}, {
   3.681585139202839*^9, 3.681585158314912*^9}, {3.68158530678191*^9, 
   3.6815853073417172`*^9}, {3.6815888689488974`*^9, 
   3.6815889866626554`*^9}, {3.6815890228020644`*^9, 
   3.6815890583435373`*^9}, {3.6815891217298484`*^9, 3.681589163632318*^9}, {
   3.681589334500104*^9, 3.681589348961054*^9}, {3.6815906212941074`*^9, 
   3.681590665665968*^9}, {3.681603534980042*^9, 3.6816035363699694`*^9}, {
   3.681603864337474*^9, 3.6816038682690973`*^9}, {3.681604243555854*^9, 
   3.68160424704218*^9}, {3.681604329314691*^9, 3.681604341492816*^9}, {
   3.6816044092304306`*^9, 3.6816044107254276`*^9}, {3.6816530292944417`*^9, 
   3.6816530304204016`*^9}, {3.6816570986333294`*^9, 3.681657131603295*^9}, {
   3.68165718855943*^9, 3.6816572324965878`*^9}, {3.681657309278144*^9, 
   3.6816573131817484`*^9}, {3.681657666521865*^9, 3.6816577776820254`*^9}, {
   3.68165782483617*^9, 3.681657954385624*^9}, {3.6816580017865467`*^9, 
   3.6816580506108546`*^9}, {3.6816581666434946`*^9, 3.681658170822795*^9}, {
   3.6816583360697403`*^9, 3.681658337337532*^9}, {3.6816584414643555`*^9, 
   3.6816584541160107`*^9}, {3.6816589278869047`*^9, 
   3.6816589285913744`*^9}, {3.681658984624859*^9, 3.68165898677029*^9}, {
   3.681659038013056*^9, 3.6816590423468595`*^9}, {3.6816594819339275`*^9, 
   3.6816594843655505`*^9}, {3.681659775861001*^9, 3.6816597777292466`*^9}, {
   3.681660572644367*^9, 3.6816605736830606`*^9}, {3.681660606220765*^9, 
   3.6816606758342023`*^9}, 3.6816607353358936`*^9, 3.681677017236003*^9, {
   3.681677124887562*^9, 3.681677189483862*^9}, {3.6816772528319063`*^9, 
   3.681677267550214*^9}, {3.6816773596183596`*^9, 3.6816773728282022`*^9}, {
   3.6816774203410945`*^9, 3.6816774217293653`*^9}, {3.681677473480362*^9, 
   3.6816774771330295`*^9}, 3.6816775189761457`*^9, {3.6816776491617465`*^9, 
   3.681677682774685*^9}, {3.6817249874119425`*^9, 3.6817249882761993`*^9}, {
   3.6817250226257377`*^9, 3.6817250289826703`*^9}, {3.6817265600556955`*^9, 
   3.681726572075122*^9}, 3.681726796595335*^9, {3.6817379065662923`*^9, 
   3.681737907543937*^9}, {3.681739349567865*^9, 3.6817393578093576`*^9}, {
   3.6817394401773014`*^9, 3.6817394468687677`*^9}, {3.681739510376131*^9, 
   3.681739615667372*^9}, {3.681739999609486*^9, 3.6817400007982807`*^9}, {
   3.68174012905984*^9, 3.681740136059509*^9}, {3.6817419469943395`*^9, 
   3.681741952057715*^9}, {3.6828737640986223`*^9, 3.6828737647000227`*^9}, {
   3.682875461848855*^9, 3.6828756006176033`*^9}, {3.6828764354113855`*^9, 
   3.682876436543141*^9}, {3.6828766604259844`*^9, 3.6828766842954245`*^9}, {
   3.682876922117593*^9, 3.6828769346159225`*^9}, {3.682876994450532*^9, 
   3.6828770733282995`*^9}, {3.682877151602738*^9, 3.6828772330235786`*^9}, {
   3.6828775403583255`*^9, 3.682877624288368*^9}, {3.682877916713852*^9, 
   3.6828779544028687`*^9}, {3.682878065220443*^9, 3.682878072332185*^9}, {
   3.6828814401165433`*^9, 3.6828814554397593`*^9}, {3.6828815136255503`*^9, 
   3.682881677529819*^9}, {3.68288172255884*^9, 3.6828817726412277`*^9}, {
   3.6828818052829876`*^9, 3.6828818326892595`*^9}, {3.68288187893756*^9, 
   3.6828818980032716`*^9}, {3.6828819290849905`*^9, 3.6828819380419636`*^9}, 
   3.6828820133227377`*^9, {3.6828820484197435`*^9, 3.6828820737426243`*^9}, {
   3.6828821123523645`*^9, 3.6828821185725107`*^9}, {3.682882266229948*^9, 
   3.682882269393059*^9}, {3.6828823006288815`*^9, 3.6828824004974613`*^9}, {
   3.6828824684167385`*^9, 3.6828824766762457`*^9}, {3.682882938299493*^9, 
   3.6828829432121906`*^9}, {3.682884460763468*^9, 3.682884487530546*^9}, {
   3.6828845209094305`*^9, 3.682884563541955*^9}, {3.682884653926296*^9, 
   3.682884655603948*^9}, {3.682884704152156*^9, 3.6828847264733267`*^9}, {
   3.6828856457691994`*^9, 3.682885649599371*^9}, {3.683040573485735*^9, 
   3.683040584339557*^9}, {3.68304064193865*^9, 3.6830406431586776`*^9}, {
   3.6830407026469884`*^9, 3.683040709387744*^9}, {3.683040784112011*^9, 
   3.6830407868282356`*^9}, {3.683041425354068*^9, 3.683041553893486*^9}, {
   3.683049172974044*^9, 3.683049362232627*^9}, {3.68304940084937*^9, 
   3.6830494027616453`*^9}, {3.683049464699045*^9, 3.683049466438177*^9}, {
   3.6830495610864267`*^9, 3.6830495652051725`*^9}, {3.68304961800137*^9, 
   3.683049678092401*^9}, 3.683049711234733*^9, {3.68304980134577*^9, 
   3.6830498081863317`*^9}, {3.6830723669505258`*^9, 3.683072482054262*^9}, {
   3.683072637656907*^9, 3.6830726449707837`*^9}, {3.683076372548118*^9, 
   3.683076376220566*^9}, {3.683076599486354*^9, 3.683076600303899*^9}, {
   3.683113812300089*^9, 3.683113818312097*^9}, {3.6834738943165803`*^9, 
   3.683473922983458*^9}, {3.6834739738785095`*^9, 3.68347397407164*^9}, {
   3.6834751469622936`*^9, 3.6834751658909864`*^9}, {3.68347521491304*^9, 
   3.6834752862256107`*^9}, {3.6834758806565614`*^9, 3.683475890758298*^9}, 
   3.6834760778700066`*^9, {3.683476111184245*^9, 3.6834761186132*^9}, {
   3.6834765158272057`*^9, 3.683476531901271*^9}, {3.683476623835718*^9, 
   3.683476624398637*^9}, {3.683476868357871*^9, 3.6834768749890203`*^9}, {
   3.683476937855316*^9, 3.6834769388860035`*^9}, {3.6834772869824443`*^9, 
   3.683477290570836*^9}, {3.6834773560896063`*^9, 3.683477397585683*^9}, 
   3.683477446109888*^9, {3.683477637042604*^9, 3.683477648454566*^9}, {
   3.6834822237832956`*^9, 3.683482223927392*^9}, {3.6834882586372824`*^9, 
   3.6834882817872534`*^9}, {3.683493991160005*^9, 3.6834939912690783`*^9}, {
   3.6834940877280064`*^9, 3.683494135284731*^9}, {3.6834943253961697`*^9, 
   3.6834943257273903`*^9}, {3.6834946353849983`*^9, 3.683494639560784*^9}, {
   3.6835034954100933`*^9, 3.6835034979037547`*^9}, {3.683504136606228*^9, 
   3.683504150164277*^9}, {3.68350429772871*^9, 3.6835043028281107`*^9}, {
   3.68350482801584*^9, 3.6835048283790836`*^9}, {3.6835051006222696`*^9, 
   3.683505106859684*^9}, {3.683505703191486*^9, 3.683505724435655*^9}, {
   3.6835057573736277`*^9, 3.68350575937296*^9}, {3.683505799282584*^9, 
   3.683505872292286*^9}, {3.683505940406725*^9, 3.6835059810918646`*^9}, {
   3.683506029663267*^9, 3.683506077217988*^9}, {3.6835061267170086`*^9, 
   3.683506182208025*^9}, {3.6835062368584805`*^9, 3.6835062529201937`*^9}, {
   3.683506392477291*^9, 3.6835064012691545`*^9}, {3.683541045516137*^9, 
   3.683541056417409*^9}, {3.68354116520598*^9, 3.6835411813624287`*^9}, {
   3.6835413112196317`*^9, 3.6835413426615314`*^9}, {3.683541909913392*^9, 
   3.683541910463758*^9}, {3.683541999125903*^9, 3.68354203544413*^9}, 
   3.6835421016563*^9, {3.68354214517733*^9, 3.6835421543864737`*^9}, {
   3.6835422486553593`*^9, 3.6835422521697035`*^9}, {3.68354293171101*^9, 
   3.6835429320572405`*^9}, {3.683543007650754*^9, 3.683543027534017*^9}, {
   3.683543089591416*^9, 3.6835430947878814`*^9}, {3.6835433381962557`*^9, 
   3.6835433479447556`*^9}, {3.683543465132931*^9, 3.6835435069508276`*^9}, 
   3.683544000135397*^9, {3.6835451305795994`*^9, 3.683545130864789*^9}, {
   3.683546877145338*^9, 3.6835468970791984`*^9}, {3.683546945962344*^9, 
   3.6835469461744857`*^9}, {3.683547159392496*^9, 3.683547172371584*^9}, {
   3.683547216453932*^9, 3.6835472309961596`*^9}, {3.6835473228847127`*^9, 
   3.6835473301280003`*^9}, {3.683547769463896*^9, 3.6835477704195323`*^9}, {
   3.683547857704653*^9, 3.6835478581529536`*^9}, {3.6835479456953506`*^9, 
   3.683547948110963*^9}, {3.683550777678563*^9, 3.683550778168889*^9}, {
   3.6835508692942724`*^9, 3.683550901647855*^9}, {3.6835509428253236`*^9, 
   3.6835509462195883`*^9}, {3.683550985118536*^9, 3.68355098537871*^9}, {
   3.683551023248973*^9, 3.6835510539455433`*^9}, {3.6835511059132996`*^9, 
   3.6835511061474543`*^9}, {3.6835511441327953`*^9, 
   3.6835511443859615`*^9}, {3.6835511809093275`*^9, 3.683551181139481*^9}, {
   3.683551994573103*^9, 3.6835519946891837`*^9}, {3.6835520789263744`*^9, 
   3.68355207904345*^9}, {3.6835523801102853`*^9, 3.6835523802303696`*^9}, {
   3.683552494263435*^9, 3.683552494404529*^9}, {3.6835526100001445`*^9, 
   3.683552610316354*^9}, {3.683552964670737*^9, 3.683552976244457*^9}, {
   3.683553157334643*^9, 3.683553157458726*^9}, {3.683554077654566*^9, 
   3.683554080220276*^9}, {3.683554883071704*^9, 3.6835549479149604`*^9}, {
   3.6835550228248367`*^9, 3.683555124118407*^9}, {3.683555164250177*^9, 
   3.683555199409633*^9}, {3.6835552328149176`*^9, 3.6835552508389387`*^9}, {
   3.683555281561434*^9, 3.6835553140831285`*^9}, {3.6835553749052987`*^9, 
   3.6835554217035165`*^9}, {3.683556579973998*^9, 3.683556901670368*^9}, {
   3.6835569335751176`*^9, 3.683556958773926*^9}, {3.683567451357293*^9, 
   3.6835674553959866`*^9}, {3.683570183365841*^9, 3.683570184733753*^9}, 
   3.683584154968811*^9, {3.683584690365562*^9, 3.6835846906667633`*^9}, {
   3.6835860328868484`*^9, 3.683586037622006*^9}, {3.683586328674161*^9, 
   3.683586329570758*^9}, {3.6835875817747693`*^9, 3.6835875848358126`*^9}, {
   3.6835885266750994`*^9, 3.6835885268822365`*^9}, {3.683588963341572*^9, 
   3.6835889639950047`*^9}, {3.6835890426823835`*^9, 
   3.6835890433308167`*^9}, {3.683589117345971*^9, 3.6835891196975393`*^9}, {
   3.683589331630917*^9, 3.6835893399044333`*^9}, {3.683591068654873*^9, 
   3.6835910696215177`*^9}, {3.6839019623528395`*^9, 3.683902011249292*^9}, 
   3.6839023504353905`*^9, {3.683902481589925*^9, 3.6839024823741364`*^9}, {
   3.683903684875413*^9, 3.683903695760956*^9}, {3.6839037776657405`*^9, 
   3.683903813290784*^9}, {3.683903912282135*^9, 3.683903916808525*^9}, {
   3.6839041599942894`*^9, 3.683904222277813*^9}, {3.6839042576535454`*^9, 
   3.683904399352331*^9}, {3.6839047052147617`*^9, 3.6839047054881535`*^9}, {
   3.6839047997169724`*^9, 3.6839047999200897`*^9}, {3.683905142237029*^9, 
   3.6839051427960916`*^9}, {3.6839053542597027`*^9, 3.683905365322624*^9}, {
   3.6839054479906263`*^9, 3.683905460403864*^9}, {3.6839056414482403`*^9, 
   3.6839056415732284`*^9}, {3.6839057483767643`*^9, 3.68390576506771*^9}, {
   3.6839058091526413`*^9, 3.6839058253908615`*^9}, {3.6839058712959056`*^9, 
   3.683905873328046*^9}, {3.6839060569501033`*^9, 3.683906057090736*^9}, {
   3.683987178984254*^9, 3.6839871811042557`*^9}, 3.683987783819708*^9, 
   3.6839878232450886`*^9, {3.68398786747932*^9, 3.683987868253853*^9}, {
   3.683988009105027*^9, 3.683988019501381*^9}, {3.683988099546919*^9, 
   3.6839881469904346`*^9}, {3.6839883484254847`*^9, 3.6839883505158*^9}, {
   3.6839890724788113`*^9, 3.6839890725881577`*^9}, {3.6839891396680202`*^9, 
   3.68398915080175*^9}, {3.6839899366849813`*^9, 3.683989946767702*^9}, {
   3.6840743650618734`*^9, 3.684074365186865*^9}, {3.6840744049965453`*^9, 
   3.684074406880723*^9}, {3.6840746970822916`*^9, 3.684074708832863*^9}, {
   3.684074787476323*^9, 3.6840747906258287`*^9}, {3.684074875652027*^9, 
   3.684074887670712*^9}, {3.684076003746043*^9, 3.6840760335767913`*^9}, {
   3.684077293586682*^9, 3.6840772956032085`*^9}, {3.6840784704012976`*^9, 
   3.6840784710572553`*^9}, {3.684078671261433*^9, 3.6840787083132315`*^9}, {
   3.684078807066167*^9, 3.6840788080505977`*^9}, {3.6840788497563515`*^9, 
   3.684078850904544*^9}, {3.6840796548198366`*^9, 3.6840796550542126`*^9}, {
   3.684079685249394*^9, 3.684079686989688*^9}, {3.684079734244658*^9, 
   3.684079734463426*^9}, {3.684079839978655*^9, 3.684079925803609*^9}, {
   3.6840801872828455`*^9, 3.6840801876256924`*^9}, {3.684080531513298*^9, 
   3.684080533143388*^9}, {3.6841085947306623`*^9, 3.6841086831960683`*^9}, {
   3.684108821706732*^9, 3.6841088218618345`*^9}, {3.6841089048287024`*^9, 
   3.684108905047849*^9}, {3.684108963513757*^9, 3.684108963728902*^9}, {
   3.6841093112445345`*^9, 3.6841093125073767`*^9}, {3.6841093885884476`*^9, 
   3.6841093892238736`*^9}, {3.6841096998151746`*^9, 
   3.6841097000773478`*^9}, {3.684109745439698*^9, 3.684109747009746*^9}, {
   3.684110390672262*^9, 3.6841104004997854`*^9}, {3.6841104729426622`*^9, 
   3.6841104731067715`*^9}, {3.6841463491598396`*^9, 
   3.6841463493917727`*^9}, {3.684146396728014*^9, 3.6841464383482833`*^9}, {
   3.684155779835653*^9, 3.6841557803916664`*^9}, {3.6841558294048185`*^9, 
   3.6841558506203403`*^9}, {3.684161537056511*^9, 3.6841615433470497`*^9}, {
   3.684197725767458*^9, 3.6841977388221607`*^9}, {3.6841982434198947`*^9, 
   3.6841982450362844`*^9}, {3.684198412917842*^9, 3.684198437174786*^9}, 
   3.6841989883969803`*^9, {3.6841991916362686`*^9, 3.684199214972068*^9}, {
   3.684199285160968*^9, 3.6841992943184977`*^9}, {3.6842265173399725`*^9, 
   3.6842265200947742`*^9}, {3.6842269206282763`*^9, 
   3.6842269224850845`*^9}, {3.684227658672336*^9, 3.6842276625162935`*^9}, {
   3.6842277614112377`*^9, 3.684227783616331*^9}, {3.684229726347047*^9, 
   3.684229732908129*^9}, {3.6842299422612305`*^9, 3.68422994956569*^9}, {
   3.684230887876504*^9, 3.684230912913953*^9}, {3.6842310041677914`*^9, 
   3.684231022836816*^9}, {3.6842314106839294`*^9, 3.684231410959935*^9}, {
   3.6842316105149755`*^9, 3.684231637663156*^9}, {3.6842317118343697`*^9, 
   3.6842317123223953`*^9}, {3.6842334917041245`*^9, 
   3.6842334918341546`*^9}, {3.684233679013338*^9, 3.6842336900825214`*^9}, {
   3.684234686483801*^9, 3.6842346882035246`*^9}, 3.6842347962946343`*^9, {
   3.684236839069535*^9, 3.6842368392257795`*^9}, {3.6842370453733764`*^9, 
   3.684237065977688*^9}, {3.6842371213792057`*^9, 3.6842371226629744`*^9}, {
   3.68424381664384*^9, 3.684243835599289*^9}, {3.684244019907631*^9, 
   3.6842440209813023`*^9}, {3.6842442549895496`*^9, 3.684244255614581*^9}, 
   3.684244719096137*^9, {3.684245130146635*^9, 3.6842451356179233`*^9}, {
   3.6842453587790966`*^9, 3.684245384368703*^9}, {3.684245907118334*^9, 
   3.684245907304845*^9}, {3.6842459773095202`*^9, 3.684246008222966*^9}, 
   3.684246382253998*^9, {3.6842464149741144`*^9, 3.6842464228022127`*^9}, {
   3.6842464734427333`*^9, 3.684246566726844*^9}, {3.6842468781402345`*^9, 
   3.684246880365097*^9}, {3.6842469179106565`*^9, 3.684246936358963*^9}, {
   3.684246967996398*^9, 3.6842469766823273`*^9}, {3.6842470628675227`*^9, 
   3.6842470785741577`*^9}, {3.6842475364077773`*^9, 3.68424759691908*^9}, {
   3.684248699513999*^9, 3.6842487231386585`*^9}, {3.6842488909521885`*^9, 
   3.6842488957501645`*^9}, {3.6842489431926513`*^9, 
   3.6842489433645334`*^9}, {3.6842497654627447`*^9, 
   3.6842497741779704`*^9}, {3.684249805211872*^9, 3.6842498312099853`*^9}, {
   3.6842505915136523`*^9, 3.6842506041001716`*^9}, {3.6842514361577463`*^9, 
   3.6842514569440403`*^9}, {3.6842515241498303`*^9, 3.68425154972605*^9}, {
   3.68425162171078*^9, 3.6842516358219795`*^9}, {3.684251703481067*^9, 
   3.684251713561145*^9}, {3.6842518287214594`*^9, 3.6842518441043615`*^9}, 
   3.684252283945561*^9, {3.6842527402357635`*^9, 3.6842527405014105`*^9}, {
   3.68425281991477*^9, 3.684252832741762*^9}, {3.684252917734748*^9, 
   3.684252919673896*^9}, {3.684253046416703*^9, 3.6842530633746815`*^9}, {
   3.684253105307084*^9, 3.684253105464984*^9}, {3.6842531507494497`*^9, 
   3.6842531701066356`*^9}, {3.6842532358461742`*^9, 
   3.6842532359873962`*^9}, {3.684253488940997*^9, 3.684253492580055*^9}, {
   3.684253609143507*^9, 3.684253609314454*^9}, {3.684254029347491*^9, 
   3.684254030356526*^9}, 3.6842551896300597`*^9, {3.684255248683775*^9, 
   3.684255273901174*^9}, {3.6842553158555517`*^9, 3.6842553159763875`*^9}, {
   3.6842575150270095`*^9, 3.6842575306639028`*^9}, {3.6842580800556374`*^9, 
   3.6842580808181067`*^9}, {3.6842581458581266`*^9, 3.6842581647885504`*^9}, 
   3.6842584692574024`*^9, 3.6842585615478125`*^9, {3.6842585937615023`*^9, 
   3.6842586191389723`*^9}, {3.6842586935457754`*^9, 3.6842587097167597`*^9}, 
   3.68426074291675*^9, {3.684265063560858*^9, 3.6842651043368263`*^9}, {
   3.6842651615100327`*^9, 3.684265197673959*^9}, {3.684266508452694*^9, 
   3.6842665856296606`*^9}, {3.684350885374157*^9, 3.6843509158548203`*^9}, {
   3.68467959899265*^9, 3.6846796178991966`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     DynamicBox[ToBoxes[
       Grid[{{
         "Data vs Function", "Parameter Space", "Error over iterations"}, {
          ListPlot[{
            Map[Apply[$CellContext`Fitfunction, 
              
              Prepend[$CellContext`iterParams, #]]& , \
$CellContext`SamplingSet], $CellContext`DataN $CellContext`Data}, Joined -> 
           True, ImageSize -> Medium, PlotLegends -> None], 
          If[$CellContext`doPoint, 
           Which[$CellContext`varamt == 3, 
            $CellContext`LinePlot[$CellContext`debugParams, \
$CellContext`totalIter, $CellContext`historyAmt], $CellContext`varamt == 2, 
            $CellContext`SLinePlot[$CellContext`debugParams, \
$CellContext`totalIter, $CellContext`historyAmt], True, 
            "Incorrect dimensionality"], "Disabled"], 
          If[$CellContext`doEPlot, 
           
           ListLogLogPlot[$CellContext`debugErr, ImageSize -> Medium, 
            PlotRange -> All], "Disabled"]}, {
         "Parameters", 
          "Iterations, corrections, \[Alpha], \[Beta], LSTolerance, factor"}, {
          If[
           Or[$CellContext`showAll, $CellContext`varamt < 5], 
           Column[{$CellContext`iterParams}], 
           "Displaying parameters would take too much space."], 
          Column[{{$CellContext`totalIter, $CellContext`Corrections}, {
             
             ProgressIndicator[$CellContext`ConsecCorrections/$CellContext`\
MaxCorrections], $CellContext`\[Alpha], $CellContext`\[Beta]}, \
{$CellContext`LSTol, $CellContext`factor}}], {$CellContext`AError, \
$CellContext`prevErr}}}, Frame -> All, ItemSize -> 30], StandardForm],
      ImageSizeCache->{1167., {203., 210.}}]},
    {"\<\"Frequency indices:  {1}\"\>"},
    {"\<\"Data frequencies:  {0.}\"\>"},
    {"\<\"Not  Normalized\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"TrueParams {1., 1.}\"\>"},
        {"\<\"InitialParams {0.5, 2.}\"\>"},
        {"\<\"FitFunction: Exp[#1*#2] + #3 & \"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {"\<\"LSTemp and LSTolerance: 0.005 0.001\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.684679618426729*^9, 3.6846806721218433`*^9, 3.6846807277028418`*^9, 
   3.68468119488101*^9, 3.6846818353881226`*^9, 3.684681970153751*^9, 
   3.684682041527007*^9, 3.6846829021226926`*^9, {3.6846830740738072`*^9, 
   3.684683084643516*^9}, {3.684683618504576*^9, 3.6846836281510625`*^9}, 
   3.684686040572822*^9, 3.6847520321672993`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Iteration"}], " ", "loop"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Manual", ",", " ", 
    RowBox[{
     RowBox[{"Non", "-", 
      RowBox[{"optimal", " ", "Iteration"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NoErr", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ITol", "=", 
      RowBox[{"0.01", "/", "DataN"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"IMin", "=", 
      RowBox[{
       RowBox[{"10.", "^", 
        RowBox[{"-", "9"}]}], "/", "DataN"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MaxNorm", "=", "50"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Iterate", "[", 
       RowBox[{
       "1", ",", "ITol", ",", "IMin", ",", "LSTemp", ",", "0.1", ",", "2."}], 
       "]"}], "//", "AbsoluteTiming"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Automated", " ", "iteration"}], " ", "-", " ", 
    RowBox[{"most", " ", "optimized"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramhs", "=", 
     RowBox[{"ReleaseHold", "@", 
      RowBox[{"List", "@", "paramh"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"debugParams", "=", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eFunc", "@@", "paramhs"}], ",", "paramhs", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"StepMonitor", "\[RuleDelayed]", 
          RowBox[{"Sow", "@", "paramhs"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Method", "->", "\"\<NelderMead\>\""}]}], 
        "\[IndentingNewLine]", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"debugErr", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"eFunc", "@@", "#"}], ")"}], "&"}], "/@", "debugParams"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalIter", "=", 
     RowBox[{"Length", "@", "debugParams"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterParams", "=", 
     RowBox[{"Last", "@", "debugParams"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindError", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RefreshSPlot", "[", "\"\<Quality\>\"", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6815830549052362`*^9, 3.6815830569639435`*^9}, {
   3.6815833224915934`*^9, 3.6815833427873363`*^9}, {3.6815835152037477`*^9, 
   3.6815835867637324`*^9}, {3.6815836557592244`*^9, 3.6815836579033656`*^9}, 
   3.681583698624568*^9, {3.681583804126245*^9, 3.681583899175346*^9}, {
   3.681584120809069*^9, 3.6815841278946266`*^9}, {3.681584565742484*^9, 
   3.681584574478776*^9}, {3.681584717851612*^9, 3.6815848728995996`*^9}, {
   3.68158494548003*^9, 3.681584960968948*^9}, {3.6815849967248945`*^9, 
   3.681584998155593*^9}, {3.681585044037255*^9, 3.6815850807786193`*^9}, {
   3.6815851687605925`*^9, 3.6815851749758067`*^9}, 3.681585257436683*^9, {
   3.681588818643874*^9, 3.68158882224041*^9}, {3.6816039209133673`*^9, 
   3.681603978014973*^9}, 3.6816040159742737`*^9, {3.68160425701083*^9, 
   3.681604324912594*^9}, {3.6816043708838124`*^9, 3.681604395329851*^9}, {
   3.6816044410436525`*^9, 3.6816044809352636`*^9}, {3.681604581304495*^9, 
   3.681604581408561*^9}, {3.681657788978179*^9, 3.6816577997986774`*^9}, {
   3.681658388036417*^9, 3.681658388337614*^9}, {3.6816584666423044`*^9, 
   3.681658466801412*^9}, {3.681658543235112*^9, 3.6816585444509244`*^9}, {
   3.6816587162912865`*^9, 3.6816588213786974`*^9}, {3.681658853741133*^9, 
   3.6816588544954505`*^9}, {3.6816589093944664`*^9, 3.681658910498202*^9}, {
   3.6816589538124695`*^9, 3.681658961216242*^9}, {3.681659019321334*^9, 
   3.68165902741212*^9}, {3.6816590914616175`*^9, 3.6816591157677307`*^9}, {
   3.681659258204584*^9, 3.681659461082448*^9}, {3.681659669532071*^9, 
   3.681659671022064*^9}, {3.681659706162506*^9, 3.6816597313162856`*^9}, {
   3.681659808123521*^9, 3.6816598312099223`*^9}, {3.6816599096232305`*^9, 
   3.681659938730646*^9}, {3.6816600065518885`*^9, 3.681660025867775*^9}, {
   3.681660056864452*^9, 3.6816600601386366`*^9}, {3.681660324915262*^9, 
   3.6816603310743704`*^9}, 3.6816603734203887`*^9, {3.6816604871622624`*^9, 
   3.6816605001939564`*^9}, {3.681726019259656*^9, 3.681726117312996*^9}, 
   3.6817261890839434`*^9, {3.6817263633960915`*^9, 3.6817263752591195`*^9}, {
   3.6817265926157346`*^9, 3.681726606880471*^9}, {3.6817266668997264`*^9, 
   3.6817267125406976`*^9}, {3.681737754102071*^9, 3.6817377743956075`*^9}, {
   3.681737807716177*^9, 3.6817378088419275`*^9}, {3.6817384089755154`*^9, 
   3.6817384169598455`*^9}, {3.681738453769399*^9, 3.6817386697234554`*^9}, {
   3.6817387708958917`*^9, 3.681738855176112*^9}, {3.6817390914112206`*^9, 
   3.6817391362351217`*^9}, {3.681739252624189*^9, 3.6817392574333997`*^9}, {
   3.681739661725093*^9, 3.681739693822504*^9}, {3.681739852449319*^9, 
   3.681739852764531*^9}, {3.6817401973837595`*^9, 3.6817402118944373`*^9}, 
   3.6817414009559374`*^9, {3.681741459131745*^9, 3.681741580191125*^9}, {
   3.6817416744515905`*^9, 3.681741705967613*^9}, {3.6817418559296923`*^9, 
   3.6817418856745343`*^9}, {3.6817420325103846`*^9, 
   3.6817421352588587`*^9}, {3.6828756460984926`*^9, 3.682876143225466*^9}, 
   3.682876243323327*^9, {3.6828763113636885`*^9, 3.6828763434921064`*^9}, {
   3.6828764696682243`*^9, 3.682876541840211*^9}, {3.6828765823151927`*^9, 
   3.682876584366561*^9}, {3.682876634735857*^9, 3.682876651010708*^9}, {
   3.6828773139891996`*^9, 3.6828773364101458`*^9}, {3.6828773788808804`*^9, 
   3.682877400381214*^9}, {3.682877489771953*^9, 3.6828774903853636`*^9}, {
   3.6828776060872345`*^9, 3.682877608594906*^9}, {3.682881335946268*^9, 
   3.68288136995558*^9}, {3.682882576135539*^9, 3.6828825770011177`*^9}, {
   3.682882635548149*^9, 3.6828826427649612`*^9}, {3.682882688414392*^9, 
   3.682882696965092*^9}, {3.6828827453663607`*^9, 3.682882758678235*^9}, {
   3.68288280128664*^9, 3.682882801830003*^9}, {3.682882985371976*^9, 
   3.6828829854799776`*^9}, {3.6828830826284523`*^9, 
   3.6828830838046455`*^9}, {3.682883151550181*^9, 3.6828831523661866`*^9}, {
   3.682883219319111*^9, 3.682883240973945*^9}, {3.6828845914540353`*^9, 
   3.682884596048645*^9}, {3.682884740497396*^9, 3.6828847409814034`*^9}, {
   3.6830399252545934`*^9, 3.683040021903536*^9}, {3.683040074129644*^9, 
   3.683040109382766*^9}, {3.6830401521016164`*^9, 3.6830401528138976`*^9}, {
   3.6830403419625387`*^9, 3.683040384081685*^9}, {3.6830405507742767`*^9, 
   3.683040554542845*^9}, {3.6830407646220727`*^9, 3.6830407792434945`*^9}, {
   3.683041005852372*^9, 3.683041006316601*^9}, {3.6830410572708087`*^9, 
   3.683041063595398*^9}, {3.683041710352441*^9, 3.683041710548448*^9}, {
   3.6830417661374545`*^9, 3.6830417802909727`*^9}, {3.6830486378439603`*^9, 
   3.6830486617386465`*^9}, {3.6830494878933363`*^9, 3.683049494385665*^9}, {
   3.683049994565211*^9, 3.6830500492853537`*^9}, {3.683050088724822*^9, 
   3.683050102658111*^9}, {3.6830502789247494`*^9, 3.683050279417079*^9}, {
   3.683051358030029*^9, 3.6830513590497074`*^9}, {3.683071209115715*^9, 
   3.683071236472953*^9}, {3.6830714672728186`*^9, 3.6830714684896317`*^9}, {
   3.6830715354192495`*^9, 3.6830715898175154`*^9}, {3.683071625858543*^9, 
   3.6830716635406637`*^9}, {3.683071701500972*^9, 3.6830717333011713`*^9}, {
   3.6830722228226123`*^9, 3.6830722943002644`*^9}, {3.6830728559445696`*^9, 
   3.683072972508274*^9}, {3.6830731256430845`*^9, 3.6830731527751737`*^9}, {
   3.6830741829346232`*^9, 3.6830742453112097`*^9}, {3.6830743162555017`*^9, 
   3.6830743180837207`*^9}, {3.683075201200184*^9, 3.6830752609750347`*^9}, {
   3.68307547026332*^9, 3.683075482021157*^9}, 3.6830755175598507`*^9, {
   3.6830760734353714`*^9, 3.6830763233887806`*^9}, {3.6830763549573927`*^9, 
   3.68307635783331*^9}, {3.6830764258746705`*^9, 3.6830764272325764`*^9}, {
   3.683076460497753*^9, 3.683076499906025*^9}, {3.683076584187575*^9, 
   3.683076587354686*^9}, {3.683113789162665*^9, 3.683113799528575*^9}, {
   3.683473868679073*^9, 3.6834738695539455`*^9}, {3.683474127010831*^9, 
   3.6834741301785593`*^9}, {3.6834742561450167`*^9, 3.683474327471419*^9}, 
   3.683475086419007*^9, {3.683475422019196*^9, 3.683475446846759*^9}, {
   3.6834756211749306`*^9, 3.6834757009501467`*^9}, {3.6834757318607655`*^9, 
   3.6834757544768524`*^9}, {3.6834769318898134`*^9, 
   3.6834769348793306`*^9}, {3.6834769968695316`*^9, 
   3.6834769969916124`*^9}, {3.683481894355544*^9, 3.6834818948128486`*^9}, {
   3.6834819270643625`*^9, 3.6834819273225355`*^9}, {3.683482000056054*^9, 
   3.6834820309506626`*^9}, {3.6834824427203465`*^9, 3.683482445979519*^9}, {
   3.683482476911153*^9, 3.683482477036238*^9}, {3.6834825422897654`*^9, 
   3.683482542403841*^9}, {3.6834939977710204`*^9, 3.6834940006869664`*^9}, {
   3.683494176985549*^9, 3.6834941785385847`*^9}, {3.6835408777038684`*^9, 
   3.6835408802965975`*^9}, {3.6835409304023485`*^9, 
   3.6835409306685247`*^9}, {3.6835409642379184`*^9, 
   3.6835409644720783`*^9}, {3.6835410665411644`*^9, 3.683541068398403*^9}, {
   3.6835431122035*^9, 3.683543112450664*^9}, {3.6835440067658195`*^9, 
   3.6835440271264057`*^9}, {3.683544474519847*^9, 3.6835444860975714`*^9}, {
   3.683544617029913*^9, 3.6835446228367863`*^9}, {3.6835450588397436`*^9, 
   3.683545061975836*^9}, {3.6835472214513702`*^9, 3.683547229002435*^9}, {
   3.6835474251021185`*^9, 3.6835474434665327`*^9}, {3.68354748080097*^9, 
   3.6835475052560797`*^9}, {3.68355064698372*^9, 3.6835506821411705`*^9}, {
   3.683551242334303*^9, 3.6835512425704584`*^9}, {3.6835565254745216`*^9, 
   3.6835565260569096`*^9}, {3.683556674143777*^9, 3.683556674699147*^9}, {
   3.683556765853693*^9, 3.6835567663390145`*^9}, {3.6835842910102105`*^9, 
   3.683584332636979*^9}, {3.6835844874292374`*^9, 3.683584488194749*^9}, {
   3.6835868514937286`*^9, 3.6835868572555695`*^9}, {3.683587296438669*^9, 
   3.683587299464689*^9}, {3.6835875881830444`*^9, 3.68358768050893*^9}, {
   3.68358771727454*^9, 3.6835877186104293`*^9}, {3.683588284515562*^9, 
   3.683588285348117*^9}, {3.683589085386652*^9, 3.683589087530081*^9}, 
   3.683589343468811*^9, {3.6835910059090157`*^9, 3.6835910066284957`*^9}, {
   3.6835910790958376`*^9, 3.683591081716585*^9}, {3.683902131186953*^9, 
   3.683902174325325*^9}, {3.6839022068589096`*^9, 3.683902208843001*^9}, {
   3.683902246342045*^9, 3.683902265464234*^9}, {3.683902311469284*^9, 
   3.683902325076393*^9}, {3.683902430815051*^9, 3.683902430980897*^9}, {
   3.683903722367759*^9, 3.683903764570376*^9}, {3.6839058760563498`*^9, 
   3.6839058765901794`*^9}, {3.6839871503453617`*^9, 
   3.6839871553605814`*^9}, {3.6839884766368303`*^9, 3.683988579987853*^9}, {
   3.683988630770113*^9, 3.6839887179142284`*^9}, {3.6840785676335044`*^9, 
   3.6840786937128077`*^9}, {3.684078760803419*^9, 3.684078771426468*^9}, {
   3.6841089579710627`*^9, 3.6841089592569213`*^9}, {3.6841098140246572`*^9, 
   3.6841098156917677`*^9}, {3.6841099111752353`*^9, 
   3.6841099131595573`*^9}, {3.6841108265703*^9, 3.684110850405187*^9}, {
   3.6841464779417725`*^9, 3.68414650814764*^9}, {3.6841465954828386`*^9, 
   3.6841466092734227`*^9}, {3.684146641001025*^9, 3.6841466599929457`*^9}, {
   3.6841520153787413`*^9, 3.6841520299305058`*^9}, {3.6841520740062494`*^9, 
   3.684152100651599*^9}, {3.684152133997955*^9, 3.684152181522831*^9}, {
   3.6841523189837866`*^9, 3.684152332346635*^9}, {3.6841523632359347`*^9, 
   3.684152368479707*^9}, {3.6841527339024024`*^9, 3.6841527502551785`*^9}, {
   3.684152802372675*^9, 3.68415280780132*^9}, {3.6841528524856825`*^9, 
   3.684152906848385*^9}, {3.684153361979359*^9, 3.6841534730827303`*^9}, {
   3.6841535303323083`*^9, 3.68415358537591*^9}, {3.6841536208692665`*^9, 
   3.6841536891016965`*^9}, {3.6841537270674467`*^9, 
   3.6841539246033616`*^9}, {3.684153955096368*^9, 3.6841539774625034`*^9}, {
   3.684154015352046*^9, 3.684154182002526*^9}, {3.6841542136267643`*^9, 
   3.6841542287243495`*^9}, {3.684154261464362*^9, 3.684154307402931*^9}, {
   3.6841543524922543`*^9, 3.684154383636614*^9}, {3.6841545645694346`*^9, 
   3.6841546552707767`*^9}, {3.6841548882119646`*^9, 
   3.6841550084977236`*^9}, {3.6841550435030127`*^9, 3.684155209855788*^9}, {
   3.684155289304657*^9, 3.684155362086652*^9}, {3.684155403886657*^9, 
   3.684155511923913*^9}, {3.6841555859220924`*^9, 3.684155681098091*^9}, {
   3.684155788246045*^9, 3.6841557918225203`*^9}, {3.6841558661155148`*^9, 
   3.6841558680960116`*^9}, {3.6841750574486628`*^9, 
   3.6841750581126757`*^9}, {3.6841881279581957`*^9, 3.6841881287232313`*^9}, 
   3.6841954209602304`*^9, {3.6841955173534913`*^9, 3.684195518621337*^9}, {
   3.6841955583588285`*^9, 3.684195665721404*^9}, {3.6841957465612993`*^9, 
   3.684195758403194*^9}, {3.6841959870166006`*^9, 3.684195987194721*^9}, {
   3.6841961582629137`*^9, 3.684196158387911*^9}, {3.6841965276526623`*^9, 
   3.6841965365855727`*^9}, {3.684196713898782*^9, 3.684196714604252*^9}, {
   3.6841968099864035`*^9, 3.6841968194797316`*^9}, {3.684197365236204*^9, 
   3.684197395704516*^9}, {3.684197574965025*^9, 3.684197575772561*^9}, {
   3.6841977494392395`*^9, 3.6841977496884065`*^9}, {3.684197965582408*^9, 
   3.6841980040980835`*^9}, {3.68419820376467*^9, 3.684198212886013*^9}, {
   3.6841982532432394`*^9, 3.684198253352632*^9}, {3.6841985842614636`*^9, 
   3.6841985844333396`*^9}, {3.684198632941406*^9, 3.6841986957992735`*^9}, {
   3.6841987383570013`*^9, 3.6841987385601544`*^9}, 3.6841988192904177`*^9, 
   3.68419922578938*^9, {3.684226459430788*^9, 3.684226462024214*^9}, {
   3.6842270621119304`*^9, 3.684227075421318*^9}, {3.6842283708175216`*^9, 
   3.6842283713956947`*^9}, {3.6842313527055225`*^9, 3.684231362154487*^9}, {
   3.68423327952738*^9, 3.6842333364008484`*^9}, {3.684233484228822*^9, 
   3.6842335069088435`*^9}, {3.6842336814026585`*^9, 3.684233682052995*^9}, {
   3.684237575463231*^9, 3.6842376117502117`*^9}, {3.6842376570352297`*^9, 
   3.6842376572852535`*^9}, {3.684243148096386*^9, 3.6842431481744967`*^9}, {
   3.684243779228202*^9, 3.6842437797594833`*^9}, {3.6842438941190104`*^9, 
   3.6842438943065214`*^9}, {3.6842439319421062`*^9, 3.684243932114001*^9}, {
   3.6842440489891105`*^9, 3.6842440490828724`*^9}, {3.6842443835122595`*^9, 
   3.684244383883895*^9}, {3.684244426511278*^9, 3.684244430045871*^9}, {
   3.684244872971908*^9, 3.6842448732375293`*^9}, {3.684245196126915*^9, 
   3.684245196773776*^9}, {3.684245265379136*^9, 3.6842452664840107`*^9}, {
   3.6842456815760107`*^9, 3.6842456816834373`*^9}, {3.684245754292864*^9, 
   3.684245754553711*^9}, {3.6842458234553833`*^9, 3.684245843213485*^9}, {
   3.6842458752378893`*^9, 3.684245877400782*^9}, {3.6842459588890967`*^9, 
   3.68424595899848*^9}, {3.684246412945145*^9, 3.684246455215934*^9}, {
   3.6842468975758114`*^9, 3.684246897934352*^9}, {3.6842469491705513`*^9, 
   3.6842469532246227`*^9}, {3.6842471094965315`*^9, 
   3.6842471096059284`*^9}, {3.684247519512374*^9, 3.684247519762393*^9}, {
   3.6842489529592123`*^9, 3.6842489931905165`*^9}, {3.684249468573886*^9, 
   3.684249498982522*^9}, {3.6842497890120354`*^9, 3.6842498179727507`*^9}, {
   3.6842498557736835`*^9, 3.6842498898376026`*^9}, {3.684250099598761*^9, 
   3.6842500998175097`*^9}, {3.684250407232562*^9, 3.6842504077796144`*^9}, {
   3.684250543540988*^9, 3.6842505448971415`*^9}, {3.6842505774113817`*^9, 
   3.684250577598857*^9}, {3.684251446172105*^9, 3.6842514468212194`*^9}, {
   3.6842517933029213`*^9, 3.684251795996843*^9}, {3.684251929407668*^9, 
   3.6842519295951633`*^9}, {3.684252300530796*^9, 3.68425230418896*^9}, {
   3.684252350076132*^9, 3.6842523692664165`*^9}, {3.6842524127554893`*^9, 
   3.6842524347067776`*^9}, {3.6842524722430043`*^9, 3.684252473210489*^9}, {
   3.684252759189375*^9, 3.6842527613103733`*^9}, {3.6842528676042523`*^9, 
   3.6842528705773125`*^9}, {3.684252925749792*^9, 3.6842529259998026`*^9}, {
   3.684253068496871*^9, 3.68425306862369*^9}, {3.6842537948050966`*^9, 
   3.684253796318475*^9}, {3.684255220263667*^9, 3.684255221006966*^9}, {
   3.6842553317494535`*^9, 3.6842553318900948`*^9}, {3.684257332315131*^9, 
   3.6842573333313255`*^9}, {3.684257371320072*^9, 3.684257392862258*^9}, {
   3.6842580942279434`*^9, 3.6842580945253825`*^9}, {3.684265216519736*^9, 
   3.684265229146102*^9}, {3.6842667749750957`*^9, 3.684266775193321*^9}, {
   3.684266940592829*^9, 3.68426694140263*^9}, {3.6842676405062714`*^9, 
   3.6842676559872746`*^9}, {3.6842677335981164`*^9, 3.6842677351269703`*^9}, 
   3.6842677695498047`*^9, {3.6842681316388235`*^9, 3.6842681333485775`*^9}, {
   3.6842682825156765`*^9, 3.6842682829389753`*^9}, {3.6842683565559683`*^9, 
   3.6842683567747207`*^9}, {3.684350572330778*^9, 3.6843505741209617`*^9}, {
   3.684350655636747*^9, 3.6843506606473927`*^9}, {3.6843508618781633`*^9, 
   3.684350862518819*^9}, {3.6843509472937255`*^9, 3.6843509486219077`*^9}, {
   3.6846796231111364`*^9, 3.684679656842981*^9}, {3.684681204088567*^9, 
   3.684681215111535*^9}, {3.6846818388892612`*^9, 3.6846818555579605`*^9}, {
   3.6846830924280915`*^9, 3.684683121686598*^9}, {3.68468317902796*^9, 
   3.6846831961275015`*^9}, {3.6846836337354355`*^9, 3.684683754850209*^9}, {
   3.6846838051269164`*^9, 3.684683810818632*^9}, {3.6846860491121683`*^9, 
   3.6846860552993927`*^9}, {3.6847515915711517`*^9, 
   3.6847516402723856`*^9}, {3.684751670716711*^9, 3.68475173967253*^9}, {
   3.684751795086829*^9, 3.684751838363786*^9}, {3.6847519469183483`*^9, 
   3.684751970165993*^9}, {3.684752048936764*^9, 3.6847520856644106`*^9}, {
   3.684752127061158*^9, 3.6847521287878256`*^9}}],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.6847517043036504`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Data", " ", "Recording"}], " ", "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RecordedComparisonData", "=", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", 
      RowBox[{"RecordedComparisonData", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Smoothness\>\"", ",", "Smoothness"}], "}"}], ",", 
          "\[IndentingNewLine]", "debugErr", ",", "debugParams", ",", 
          "TotalRefines", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<Balance\>\"", ",", "Balance"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Impatience\>\"", ",", "Impatience"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Iterations\>\"", ",", "totalIter"}], "}"}]}], "}"}], 
        "}"}]}], "}"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6835512635774727`*^9, 3.6835512766051617`*^9}, {
   3.6835513068123145`*^9, 3.6835513199550796`*^9}, {3.6835513562472906`*^9, 
   3.683551464884759*^9}, {3.683551511272703*^9, 3.683551571884137*^9}, {
   3.683551613722046*^9, 3.683551762925576*^9}, {3.6835517985283265`*^9, 
   3.683551982519062*^9}, {3.683552039785263*^9, 3.6835520591141562`*^9}, {
   3.68355704362202*^9, 3.683557044894872*^9}, {3.6835864512419243`*^9, 
   3.6835864512429247`*^9}, {3.6835865192084756`*^9, 3.683586551951908*^9}, {
   3.6835878783786364`*^9, 3.6835878922098627`*^9}, {3.6835885545917225`*^9, 
   3.6835885647725143`*^9}, {3.683589159399025*^9, 3.683589159610163*^9}, 
   3.683591591339543*^9, {3.6839037265985627`*^9, 3.6839037569767404`*^9}, {
   3.683904432123294*^9, 3.6839044425433397`*^9}, {3.6839046603545265`*^9, 
   3.683904673666298*^9}, {3.6839058958945646`*^9, 3.683905910671089*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "Diagnostic"}], " ", "Tools"}], "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "History"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"debugParams", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eFunc", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"debugParams", ",", 
        RowBox[{"-", "10"}]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<Best Parameters\>\"", " ", "Generated", " ", "with", " ", 
     "NMinimize"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoParams", "=", 
     RowBox[{"params", "/.", 
      RowBox[{
       RowBox[{"NMinimize", "[", 
        RowBox[{
         RowBox[{"eFunc", " ", "@@", " ", "params"}], ",", "params"}], "]"}], 
       "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Compare", " ", "current", " ", "data"}], ",", " ", 
     RowBox[{"auto", "-", 
      RowBox[{"fitted", " ", "data"}]}], ",", " ", 
     RowBox[{"and", " ", "generated", " ", "data"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fitfunction", "@@", 
           RowBox[{"Prepend", "[", 
            RowBox[{"iterParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
        "SamplingSet"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fitfunction", "@@", 
           RowBox[{"Prepend", "[", 
            RowBox[{"AutoParams", ",", "#"}], "]"}]}], ")"}], "&"}], "/@", 
        "SamplingSet"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DataN", " ", "Data"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], ",", "Red"}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.681583907879587*^9, 3.681583908109586*^9}, {
   3.6815841498431664`*^9, 3.6815843369873466`*^9}, {3.6815843715436563`*^9, 
   3.6815844247768803`*^9}, {3.6815845055957317`*^9, 
   3.6815845398777423`*^9}, {3.681585388456995*^9, 3.681585416260584*^9}, {
   3.6815854638012447`*^9, 3.68158558561312*^9}, {3.6815856333774595`*^9, 
   3.6815856567101574`*^9}, {3.681585697816263*^9, 3.6815857095368476`*^9}, {
   3.6815908238964005`*^9, 3.6815908354548683`*^9}, {3.6828752895787106`*^9, 
   3.6828753192775946`*^9}, {3.6828767617321186`*^9, 
   3.6828767631860867`*^9}, {3.6828768492823505`*^9, 
   3.6828768503120255`*^9}, {3.6828850410059423`*^9, 3.682885107966795*^9}, {
   3.6828851904843426`*^9, 3.6828852104902706`*^9}, {3.683040664212844*^9, 
   3.6830406713056135`*^9}, 3.683053624434885*^9, {3.683074224863575*^9, 
   3.6830742270330205`*^9}, {3.683488171174701*^9, 3.6834881803566556`*^9}, {
   3.683541086143239*^9, 3.6835410865385046`*^9}, {3.68354173096402*^9, 
   3.68354175174288*^9}, {3.6835521884124084`*^9, 3.683552189038827*^9}, {
   3.6839048371546636`*^9, 3.6839048792354527`*^9}, {3.6839049634083557`*^9, 
   3.683905009748783*^9}, 3.683905077189437*^9, {3.6846807433349495`*^9, 
   3.6846808370199103`*^9}, {3.684680873978643*^9, 3.6846808910817037`*^9}, {
   3.684682993212882*^9, 3.6846829954365206`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJw1yWtI03EUxvH/FLQtyLANDC2n6Cqp1KUrb9ujm5vTNXJDyyAIM40iVkr1
xmrLIEIMRNIuMzDFa0ENeqHbWDYUswgpxDLrhbls85JbyViRXeh3DhwOn/NN
qDQZjodxHCf9u//u/1lRTL31K+2lcwr2wLt2waETd8nrENk71uT0kDei+ep0
lSPNwyxE0Hj4aHU9OQY7bk1GOMfIcagRls0Oiz4zi5HgqjKfP0ZOxK+R2NqZ
x+QkJHcl6Va5eWYJeCUj3c8OkLfj9pH5LeoOcgqGL4lLLQHyTqTahj6dU31h
3g3XhKM+uY2cBn/Ut9FmHzkdS9bgGYfcyyxFfEnOrp4W8h48LN9gM3rJGfiQ
3TfoVviYMzFozQwLtZJlCGmn9q8uk/fiou5J5ZBmgXkfLkeHry/uIGdhYIAv
6v5JzoYyNt04Ub7InIObLr513EbOxftXZeOtUUvMeXjujXbKTpPlCLobDj54
QVZAO5tlCaUsMwPtpniJuJHZDHi2WWSJi9Tz4amI6eHpv7KeD/dv4dmnj5i5
AhiCm7RpghXWCzB6Qx1Rm8vMKfGa11gnMVFXYmvknVb9feoq6NssFxYmqavw
Q9EvXuP7WS/Eyysz967Jmc2FmIaad72OuhonpeaK8D7qaiSdarEHP1LXYM63
llcjCrCuQUaOM2TQMXNF6N9cLHA0UC9CXGpvU6eduhYrb6q7BN8Dij8bL+6n

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     Thickness[0.02], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw1yWtI03EUxvG/y23eBpsZ3VbYGtOlrakzrTZ9tjnngi5UW8xiTNdeRNFg
NlKTXEOJ6M1IhSgoKcIIDRqhUSOtloTk0jdlkKklrqTR7EWRw274OwcOh8/5
bqr3HHDzOI4r/rf/7/IkKhc955MOJQf2QE7UZug8SE7DgmHD+K1zZDGUpnvi
y3fJOXi+7b7f9Za8BrIiyUMpP4VZirFrPvezEnIuArfD++wusgzz3Y22uQ6y
HLmDHu+pF2QFwu6N/T9+kvPxR6Hd21bAY96C7uPGgNRJLoQymnwQ6SKrIHAK
3YFXZDVednu3HkldwVwEe4t5+JCOXIx1pZv5vjPkEpw8/HryaYisgSwyWa//
Ri4F76N5+FdhKvN2eAWS2oUT5DLkKb4GVb3kctz8MPt7IE7egekvmbWdaj7z
TsyJ8s6OnCbvguLqMUfdI7IW0vZsuTNFwKzDd61dErWQK6CrWAyGOsiVqGvL
1qyaIgMtsenQUoFw2X5A0xKMNzQzc3qszRDGW0eo6/Gkb+CTUprGugHycJOq
2cPsN8C35LI2Ragb0WDtzVKvT2fdiOuJS6U9DcxcFWyi/KnYKPUqzDS2mpPK
DNZNuDJx9P38BWa/Casn9miHYtSr8dh6o6zdksl6Ncp7HOPGPmbOjH6xE4KV
Waybobu4O/GmmZmrQSx2JzA0S70G77q4sdH9ItYt8M3EP6cPivAX8Ry/Ng==

      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJw1yWtIk3EUx/FnujkzpcIJRSYVtdylMV2rVs395rbHLUdUUhF20cZMZzRI
yxSyEetiF3JOX0jQqyAYDtQgIoXV0sxV06BmkTTEYUlE9qIGjUaF/3PgcPic
77oT7v3ODI7jSv/t/7s4C4Ze7te+4zIO7IGu947e7ipyNiQzL4rvtZOX41Mo
Xd8VIEvg4oIfHFPklYhlhFasEQmYCxGyT4fCGvJa2K2zgcMO8noI2+sG5/zk
DeAPKidOj5KlaHQP5CeT5GL87An2eRUZzHK4Tt2ZKawhK/FwsrxgtIesQmUe
//zSK7IarsTA7WphJnMJjnk7ZQf05FL0N11sONtC1qDPazWFB8lbsBC/MG78
TtZiTrtK9VspZN6KW5uKnv1oJG+DKmlIqfrI2xH3XXc9+kbWYU/msrFutYh5
B+xO/3ykmbwT1qN8tPYxeReSunM9NYIsZj1yRyq9URu5DMm310QP/GQDHGO7
AwVxMrD53aQ8rRAv2gPoW/iTzW3MnBF/PvrqPRHqRlzpkNbKC7NZL4fEOB1s
czN7yjGhi8RaR6ibUD0u7VSvXsK6CQKfYuh+EzNnxjyfrvvymroZJZq7b1Ky
HNYt0LTG6r9eZfZYELZoXz75TJ3HUEo8ftm2lHUew+ePOM1BZq4Cppviqaz8
XNYrUDbc3zHVxsxZUXVmtuhpgroVieBGd3RvHus2NByS3MgJ5eEvwc/DdA==

      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.}, {0, 3.718281828459045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6830742275613737`*^9, {3.683488158540492*^9, 3.6834881930745173`*^9}, {
   3.6835051842423058`*^9, 3.6835051903854017`*^9}, {3.6835410921552496`*^9, 
   3.6835411059534535`*^9}, {3.6835417315384035`*^9, 3.6835417522141943`*^9}, 
   3.683584482512956*^9, 3.6835883607814355`*^9, {3.6839044546184044`*^9, 
   3.6839044563021197`*^9}, {3.6839048277367125`*^9, 3.683904840486747*^9}, {
   3.6839048747972674`*^9, 3.6839048798709984`*^9}, {3.6839049688463078`*^9, 
   3.6839049880143156`*^9}, {3.6839050661190567`*^9, 3.6839050791815863`*^9}, 
   3.6839051559519835`*^9, 3.6839058534359965`*^9, 3.6842337076685896`*^9, 
   3.6842345980902767`*^9, 3.6842348361520596`*^9, 3.6842447862969723`*^9, 
   3.6842681075707846`*^9, {3.684680740832875*^9, 3.684680745343281*^9}, {
   3.6846808034318557`*^9, 3.684680839081517*^9}, {3.684680879611746*^9, 
   3.68468089298402*^9}, {3.6846829913345118`*^9, 3.684682997495059*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RecordedComparisonData", "[", 
      RowBox[{"[", 
       RowBox[{"sm", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "@", "ToSpacedString"}], "/@", 
            RowBox[{"RecordedComparisonData", "[", 
             RowBox[{"[", 
              RowBox[{"sm", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "7", ",", "5", ",", "6"}], "}"}]}], "]"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ToSpacedString", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<Final error:\>\"", ",", 
                RowBox[{"Last", "@", 
                 RowBox[{"RecordedComparisonData", "[", 
                  RowBox[{"[", 
                   RowBox[{"sm", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ToSpacedString", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<Corrections:\>\"", ",", 
                RowBox[{"RecordedComparisonData", "[", 
                 RowBox[{"[", 
                  RowBox[{"sm", ",", "4"}], "]"}], "]"}]}], "}"}]}]}], 
            "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sm", ",", "1", ",", 
          RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"LegendFunction", "\[Rule]", "\"\<Panel\>\""}], ",", 
      RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Inverse power of two gradient smoothing function with various length \
amounts\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iterations\>\"", ",", "\"\<Error\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68354176658178*^9, 3.683541767117134*^9}, {
   3.6835430681030846`*^9, 3.6835430725340366`*^9}, {3.6835435344847717`*^9, 
   3.6835435812579727`*^9}, {3.6835436223694086`*^9, 
   3.6835437299741793`*^9}, {3.683543785355125*^9, 3.6835437916643305`*^9}, {
   3.683543882185715*^9, 3.683543921987266*^9}, {3.6835521130451317`*^9, 
   3.6835521800098057`*^9}, {3.6835522121252275`*^9, 3.683552364081595*^9}, {
   3.6835524035439186`*^9, 3.683552485126339*^9}, {3.683553052933615*^9, 
   3.6835530923639183`*^9}, {3.6835532902593145`*^9, 
   3.6835532915401692`*^9}, {3.6835533638423977`*^9, 
   3.6835533641846275`*^9}, {3.68355339530539*^9, 3.6835534359635096`*^9}, {
   3.6835534932297087`*^9, 3.6835534959275093`*^9}, {3.6835535285412655`*^9, 
   3.6835535650866437`*^9}, 3.6835536885690145`*^9, {3.6835540353483443`*^9, 
   3.6835540522846413`*^9}, {3.6835864511508617`*^9, 
   3.6835864511708755`*^9}, {3.683586589223773*^9, 3.6835866131007013`*^9}, {
   3.683588191891774*^9, 3.6835882035515537`*^9}, {3.683588700479041*^9, 
   3.6835887062478876`*^9}, {3.683903596935871*^9, 3.6839036128578234`*^9}, {
   3.6839036487984314`*^9, 3.683903676188736*^9}, {3.6839045444524784`*^9, 
   3.6839045653019943`*^9}, {3.68390463040339*^9, 3.6839046482113647`*^9}, {
   3.6839046897213993`*^9, 3.683904689877659*^9}, {3.6839047407866316`*^9, 
   3.6839047629131837`*^9}, {3.683905656147268*^9, 3.683905658651676*^9}, {
   3.6839057008399544`*^9, 3.683905734513321*^9}, {3.6839057892433033`*^9, 
   3.6839057901965075`*^9}, {3.6839059563237276`*^9, 
   3.6839060094354887`*^9}, {3.684681098531471*^9, 3.684681121099923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RecordedComparisonData", "[", 
        RowBox[{"[", 
         RowBox[{"sm", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"RecordedComparisonData", "[", 
         RowBox[{"[", 
          RowBox[{"sm", ",", "4"}], "]"}], "]"}], "/", "1000."}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"sm", ",", "1", ",", 
       RowBox[{"Length", "@", "RecordedComparisonData"}]}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Length of smoothing function\>\"", ",", 
      "\"\<Corrections / Iterations\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Correction Amounts of P2 Smoothing Function with various length \
amounts\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683552682523522*^9, 3.683552775077264*^9}, {
  3.6835528142403884`*^9, 3.6835528380512714`*^9}, {3.6835528788905144`*^9, 
  3.683552879876172*^9}, {3.68355293815705*^9, 3.683552947575333*^9}, {
  3.683554803332513*^9, 3.683554804964599*^9}, {3.683557032347498*^9, 
  3.683557032427553*^9}, {3.6835864511898894`*^9, 3.683586451194891*^9}, {
  3.6835889109836435`*^9, 3.683588911211796*^9}, {3.684681108349158*^9, 
  3.6846811128981447`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{6., 0.163}, {6., 0.152}, {6., 0.139}, {6., 0.146}, {6., 
      0.14300000000000002`}, {6., 0.13}, {6., 0.135}, {6., 0.365}, {6., 
      0.076}, {6., 0.082}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length of smoothing function\"", TraditionalForm], 
    FormBox["\"Corrections / Iterations\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
   "\"Correction Amounts of P2 Smoothing Function with various length amounts\
\"", TraditionalForm],
  PlotRange->{{0, 12.}, {0, 0.365}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683552697318392*^9, 3.6835527753544464`*^9}, 
   3.6835528434338627`*^9, {3.683552880078307*^9, 3.6835529050449634`*^9}, {
   3.683552939469926*^9, 3.683552947985607*^9}, 3.6835530342051215`*^9, 
   3.683553296462451*^9, 3.683554162734328*^9, 3.683554362881834*^9, {
   3.6835547942304416`*^9, 3.6835548062584624`*^9}, 3.683586570042976*^9, 
   3.6835882735222287`*^9, 3.6835886912268686`*^9, 3.6835888800239897`*^9, 
   3.683588911514*^9, 3.6839060290974216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GRSts", "=", "eFunc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSit", "=", "iterParams"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSa", "=", "adir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSb", "=", "bdir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LSTemp", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSi", "=", "0.0000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRStol", "=", "0.000000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSpos", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gscale", "=", "8"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EFCA", "=", 
   RowBox[{
    RowBox[{"eFunc", "@@", 
     RowBox[{"(", 
      RowBox[{"iterParams", "+", 
       RowBox[{"#", "*", "adir"}]}], ")"}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EFCB", "=", 
    RowBox[{
     RowBox[{"eFunc", "@@", 
      RowBox[{"(", 
       RowBox[{"iterParams", "+", 
        RowBox[{"#", "*", "bdir"}]}], ")"}]}], "&"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRSA", "=", 
   RowBox[{"GoldenRatioSearch", "[", 
    RowBox[{
    "GRSi", ",", "GRSit", ",", "GRSa", ",", "GRSts", ",", "GRStol", ",", 
     "err", ",", "LSTemp", ",", "True", ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GRSB", "=", 
    RowBox[{"GoldenRatioSearch", "[", 
     RowBox[{
     "GRSi", ",", "GRSit", ",", "GRSb", ",", "GRSts", ",", "GRStol", ",", 
      "err", ",", "LSTemp", ",", "True", ",", "100"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", 
  RowBox[{"{", 
   RowBox[{"err", ",", 
    RowBox[{"\[Gamma]", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Last", "@", "GRSA"}], ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{"\[Tau]", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Last", "@", "GRSB"}], ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\"\<@\>\"", ",", 
    RowBox[{"iterParams", "+", 
     RowBox[{"\[Tau]", " ", "bdir"}]}], ",", "\"\<@@\>\"", ",", 
    RowBox[{"iterParams", "+", 
     RowBox[{"\[Alpha]", " ", "adir"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", "GRSA"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{"l", ",", "f", ",", "g", ",", "h"}], "}"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", "GRSB"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{"l", ",", "f", ",", "g", ",", "h"}], "}"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", "IGRSA"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", "IGRSB"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Frame", "->", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"EFCA", "@", "#"}]}], "}"}], "&"}], ",", "GRSA", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Small"}], ",", 
               RowBox[{"PointSize", "@", "Large"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EFCA", "@", "x"}], ",", "err"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{
               RowBox[{"-", "gscale"}], " ", "\[Gamma]"}], ",", 
              RowBox[{"gscale", " ", "\[Gamma]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]", ",", 
              RowBox[{"EFCA", "@", "\[Gamma]"}]}], "}"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"EFCB", "@", "#"}]}], "}"}], "&"}], ",", "GRSA", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "@", "Small"}], ",", 
               RowBox[{"PointSize", "@", "Large"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EFCB", "@", "x"}], ",", "err"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{
               RowBox[{"-", "gscale"}], " ", "\[Tau]"}], ",", 
              RowBox[{"gscale", " ", "\[Tau]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Point", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"EFCB", "@", "\[Tau]"}]}], "}"}]}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6841890704168935`*^9, 3.6841890797491136`*^9}, {
   3.6841892246387067`*^9, 3.6841892319986134`*^9}, {3.6841893425187244`*^9, 
   3.6841893426338005`*^9}, {3.684189491316923*^9, 3.684189566919325*^9}, {
   3.684189611938337*^9, 3.684189765583769*^9}, {3.6841932850636244`*^9, 
   3.6841933384073367`*^9}, {3.6841935173408065`*^9, 
   3.6841935865672784`*^9}, {3.6841936722684135`*^9, 3.684193693152335*^9}, {
   3.6841938413531446`*^9, 3.684193851782089*^9}, {3.6841938935839577`*^9, 
   3.684194020712655*^9}, {3.684194176449744*^9, 3.684194438035948*^9}, {
   3.684194525665368*^9, 3.6841945431980553`*^9}, {3.684194583594987*^9, 
   3.684194620540617*^9}, {3.684194655592986*^9, 3.684194692518602*^9}, {
   3.684194932882846*^9, 3.6841949363851795`*^9}, {3.684194967055628*^9, 
   3.6841951579889154`*^9}, {3.684196310887096*^9, 3.684196402936408*^9}, 
   3.684196455011718*^9, {3.684197073407015*^9, 3.684197083948043*^9}, {
   3.6841971160984764`*^9, 3.6841971578172894`*^9}, {3.6841972540974765`*^9, 
   3.6841972542085495`*^9}, {3.6841980123055544`*^9, 3.684198022092079*^9}, {
   3.6841980967267065`*^9, 3.6841980982728558`*^9}, {3.684198153805868*^9, 
   3.684198168429407*^9}, {3.684230678024152*^9, 3.684230706385775*^9}, {
   3.684230739590266*^9, 3.6842307407226295`*^9}, {3.6842310962116523`*^9, 
   3.6842312038187056`*^9}, {3.6842312678322363`*^9, 
   3.6842312996348405`*^9}, {3.68423133149269*^9, 3.684231331816879*^9}, {
   3.684231844551059*^9, 3.684231855384286*^9}, {3.684231974105029*^9, 
   3.6842319934428797`*^9}, {3.68423374867943*^9, 3.6842337511762133`*^9}, {
   3.684233867129155*^9, 3.6842338699077687`*^9}, {3.6842339164504967`*^9, 
   3.68423395658735*^9}, {3.684234853773934*^9, 3.6842348581758957`*^9}, 
   3.68423510383743*^9, 3.684235301124566*^9, {3.6842379193755617`*^9, 
   3.684237924129322*^9}, {3.684242031574443*^9, 3.684242082491802*^9}, {
   3.6842429359626045`*^9, 3.6842430064020042`*^9}, {3.6842432778957767`*^9, 
   3.68424327815812*^9}, {3.684244805265129*^9, 3.6842448672392044`*^9}, {
   3.684247130121166*^9, 3.684247290239822*^9}, {3.6842474432875457`*^9, 
   3.6842474476690555`*^9}, {3.684247619199217*^9, 3.684247621411685*^9}, {
   3.6842492794999256`*^9, 3.6842493585376887`*^9}, {3.684249391605103*^9, 
   3.6842494415446825`*^9}, {3.684249606606332*^9, 3.6842496900930953`*^9}, {
   3.6842497445875854`*^9, 3.6842497490178523`*^9}, {3.6842501691282573`*^9, 
   3.684250188576257*^9}, {3.6842506335067024`*^9, 3.684250805018631*^9}, {
   3.684251010736224*^9, 3.6842512366018767`*^9}, {3.6842512785092297`*^9, 
   3.684251300065077*^9}, {3.6842513349859447`*^9, 3.6842513953955517`*^9}, {
   3.6842522442174172`*^9, 3.6842522509811897`*^9}, {3.6842525319532523`*^9, 
   3.684252574428317*^9}, {3.6842526432833433`*^9, 3.684252684230734*^9}, {
   3.6843507218522673`*^9, 3.6843507339355392`*^9}, {3.6846797239789743`*^9, 
   3.6846797618449917`*^9}, {3.684679856462694*^9, 3.6846798997257586`*^9}, {
   3.684680492066578*^9, 3.684680524080242*^9}, {3.684681131411666*^9, 
   3.6846811806166925`*^9}, {3.6846817329237204`*^9, 3.684681746708355*^9}, {
   3.6846817767962494`*^9, 3.6846818250905476`*^9}, {3.6846820571781197`*^9, 
   3.6846820826299505`*^9}, {3.6846821398704433`*^9, 3.684682159848874*^9}, {
   3.6846822807456603`*^9, 3.684682542989668*^9}, {3.6846825787732363`*^9, 
   3.6846826448023252`*^9}, {3.6846827338091903`*^9, 3.6846827362898345`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"3.2828007329177566`*^-6"},
    {"0.47782193152145047`"},
    {"0.0005883373436317042`"},
    {"\<\"@\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"0.4442547859038332`", ",", 
       RowBox[{"-", "0.37421312376712157`"}]}], "}"}]},
    {"\<\"@@\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"0.4437351588948202`", ",", 
       RowBox[{"-", "0.3739372096474833`"}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6846811269934654`*^9, 3.684681180851074*^9}, {
   3.684681782116932*^9, 3.6846818254176893`*^9}, 3.684682082817441*^9, 
   3.6846821602509127`*^9, {3.684682288785441*^9, 3.6846823814493103`*^9}, {
   3.684682416275463*^9, 3.684682419319171*^9}, 3.684682504028384*^9, 
   3.6846825444480515`*^9, 3.684682579320136*^9, {3.6846826239968643`*^9, 
   3.6846826646344776`*^9}, {3.6846827241385727`*^9, 3.684682736491973*^9}, 
   3.6846829301634083`*^9, 3.6846830029544115`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{TemplateBox[{
         GraphicsBox[{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7BmnlL7TMZDaDxVwQOVzoPEF0PgiaHwJNL4M
Gl8Bja+ExldB46uh8TUcFvjOERC/ec0ewtdC4+ug8fUctrczpDrZ3YHyDdD4
hmh8I4fAK7fU/FvuQvnGDmV1rusu+t6D8k3Q+KZofDMHa8lds5NrYXxzNL4F
Gt/SwSciKHdeB4xv5SDmvkKzvx/Gt0bj2zjMeLr7gukkGN/WIWb6K7ubk2F8
OzS+PRrfwUF0f6uTzRQov8HBISnGpKQSxmdwROU3ODo45X+7PAEu74TKb3By
mMHVd3AmXN4Zld/g7LD95CStuXB5F4ezzxTc5sPlXRyudUyfvAAu7+rwmHl9
4kK4vKvDfS2+h3A+g5vDh7pj+ovg8m4OtwNzE+B8BndUfoO7w6m/WwQR8h4O
Wy9EOyHk0fgMng5VSh9DEPKeDndQzPdysCtpS0fIeznYNr7MRsh7OyyYNj8P
xAcAi7D00g==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7D3W75n16XqVHVTAoSDXffZkC1V7CJfDYV3e
+klz9Z2hfAGHGRNbt8ccjobyRRzWiHJ0B10tgvIlHMoiKyZ/+N0B5cs46FVv
ME7KXwDlKzj88gp1U+zbCuUrOcQtMEyab3MGyldxmMbk9Kil5hGUr+awwHeO
gPjNa1C+hsMUFHktB4HT8gX3Jt+H8nUctrczpDrZ3YHy9dDkDRzK6lzXXfS9
B+UbOgReuaXm33IXyjdCkzd2eK2w9UX0KRjfxEGtzeH3yVkwvqmDteSu2cm1
ML6ZgyqKvLmDqPsKzf5+GN/CwSciKHdeB4xv6SCGIm/lEDv9ld3NyTC+tcOM
p7svmE6C8W0cYlDkbR2kW86X35kC49s5JMWYlFTC+fYOovtbnWzgfAdU+QYH
h3PPFNzmw+UdHZzyv12eAJd3dDiLIu/kMIOr7+BMuLwTmn5nh+0nJ2nNhcs7
o+l3cbjWMX3yAri8i8Nj5vWJC+Hyrg73tfgewvkNrg4f6o7pL4LLuzncDsxN
gPMb3ByYLtfVIeTdHRYsZipGyLs7bL0Q7YSQ90DT7+FQpfQxBCHv6XAHRd7T
wa6kLR0h7+Vg2/gyGyHv5bBg2vw8hLy3g02fTwGIDwCkyf5Z
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7NdOL/J2sRKwhwo4LDooK/PMzBTK53D43+Am
390RAOULOLzaejOo9HsalC/i8OGY3ouzO+ugfAkH7pBtH2a7TYHyZRz+3G9y
OjF/FZSv4KCnk7nTo+gglK/ksMB3joD4zWtQvooD/9zvrx++fAvlqzlMYnJ6
1FLzCMrXcPA+yDzpxc1nUL6Ww2QUeR0H/tPyBfcm34fy9RyeJ2y6s+3iAyjf
AE3e0KG0znXdRd97UL6RwyuFrS+iT8H4xg6zNDaYhojD1JugyZs6qLY5/D45
C8Y3c2DYotf5dQ2Mb+6ghiJv4SDqvkKzvx/Gt3SImf7K7uZkGN/K4b7pv6f1
02B8a4dYFHkbB+mW8+V3psD4tg4KnpJra6bC+HYOUijy9g6JMSYllXC+g8PZ
Zwpu82H8BgeHdT8fLd0Gl3d0OIci7+ig3LTDeAVc3glNv5PD26Wq6xfB5Z3R
9Ds7XO+YPnkBXN7F4Qnz+sSFcHkXhwdafA/hfAZXh491x/Th5jW4OtwJzE1A
mO/mwHS5rg4h7+ZwTEVkIkLe3YERRd7d4TaKfg+HBYuZihHyHmjyng52JW3p
CHkgv/FlNkLey2HhtPl5CHkvB9s+nwKEvLcDy5rQQhAfAN4lBqk=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxdzE0ow3EYwPFfc3HjQF5SNraRGDObYewxL7O5LQ6apJXjTBTKytLIUmov
HMaySBGzJcNVSnkpHBzU2lhhaOUiLyshv/9fe3719PR5vvXjGUy6Pg4hRPYz
v/vvvSiNRvWCUy5Q0gP4+v0OT3kTdSrM2yf3ug/11OmwkZk6o7sapM6A4a5R
50timjobysYCEoPJS50Hn9rOVt5skJoLPV6xYUlxRl0ALo4qajVHqfmwbrso
WpS8UwshzfP2fPsYpy5GLoH2gxRH7PqeuhScSf+JkCvgoXc7tHt5Qy2GtNP8
gbAzQl2JLEGuAndxQNqRxVgKT9xgTH8SppYhVwPZEdleNxnLQTgFiWM34xrk
WuQ6iEi/7sbnGSuQ65EbgKvJ8ZnnGCsh13o+EnIxhmRbkEkjbH1EV3fZjkxU
UDixL1ljOzJpgviqwL/MdmTSjDoyaUEdmbSijkzUcMTPsP93ZNKGeht4VzhD
/12TbAsy0aKOTNpZfwNwFwmu
               "]]}, {}}}, {}, {}, {{}, {}}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 54.}, {-0.0000999, 1.5126000933893045`}}, 
           PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
           Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                  2][#]& )[
                  Part[#, 1]], 
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                  2][#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                  2][#]& )[
                  Part[#, 1]], 
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                  2][#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{0, 54.}, {-0.0000999, 1.5126000933893045`}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{"l", "f", "g", "h"}, "SwatchLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],TemplateBox[{
         GraphicsBox[{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BmnlL7TMZDaDxVwQOVzoPEF0PgiDksOyso8
MzO1h/Al0PgyDv1npmc1XbSH8hXQ+EoO4cmq/43eO0L5Kmh8NQfBqyWmVlud
oHwNNL6Wg8HaTr57DM5Qvo7Dmrz1k+bqw/h6aHwDNL6hQ8mt9B3LrGB8I4c2
yWcHKxxhfGM0vonDI22t9cIuML6pg62bwr31rjC+mYOdXd6cdW4wvjka38Lh
qbDIK353GN8SjW/lcHPOdhFTON8ajW/jwJf0x80Zzrd1mJ4gxusD59s5OKs7
VgYC+QA/CG8D
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7D3W75n16XqVHVTAoSDXffZkC1V7CJfDYV3e
+klz9Z2hfAGHJQdlZZ6ZmUL5ImjyEg79Z6ZnNV20h/JlHNaiyCs4hCer/jd6
7wjlKzmsQZFXcRC8WmJqtdUJyldDk9dwMFjbyXePAcbXQpPXcfBrnfe80QfG
13Nok3x2sMIRxjdwKLmVvmOZFYxviCZv5GDrpnBvvSuMb+zwSFtrvbALjG+C
Jm/qYGeXN2edG4xv5jAjQYzXxx3GN3d4Kizyih/Ot0CTt3S4OWe7iCmcb+Uw
HUXe2oEv6Y+bM5xvgyZv6+Cs7lgZCOfbOSjEG1wOAfIBOmpt9g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7NdOL/J2sRKwhwo4LDooK/PMzBTK53D43+Am
390RAOULOKzJWz9prr4zlC/ioFTyZufrGg8oXwJNXsZhz+uOGH4zVyhfAU1e
ySHtwb8TS77C+Cpo8moOp92OZDtWw/gaaPJaDv6t8543+sD4Og6aBlfFYuNg
fD00eQOHdslnByscYXxDB1s3hXvrXWF8I4cZESmnvTxgfGMHGxR5Ewdbu7w5
69xgfFOH6QlivD7uML6Zg53Znqi1cL45mryFQ/fLneaFcL4lmryVw1nVaPso
ON/aYQaKvI2Di7pjZSCcb+ugGG9wOQTOt3P48Db7aRiQDwBzPW+e
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7HNz3WdPtlC1hwo4rM1bP2muvjOUz+EwbWLr
9pjD0VC+gMP/Bjf57o4AKF8EjS/hoFTyZufrGg8oXwaNr+Cw53VHDL+ZK5Sv
hMZXcUh78O/Ekq8w+9XQ+BoOp92OZDtWw/haaHwdNL6eg6bBVbHYOBjfwMG/
dd7zRh8Y3xCNb4TGN3aYEZFy2ssDxjdB45ui8c3Q+OYOdmZ7ota6w/gWaHxL
h+6XO80L4XwrNL61w1nVaPsoON8GjW+LxreD8wHiGXbI
               "]]}, {}}}, {}, {}, {{}, {}}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, AxesOrigin -> {0.546875, 0}, 
           PlotRange -> {{1., 30.}, {-0.0000999, 0.0016945271909999163`}}, 
           PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0.546875, 0}, 
           DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
           Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                  2][#]& )[
                  Part[#, 1]], 
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                  2][#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                  2][#]& )[
                  Part[#, 1]], 
                 (
                 Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                  2][#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{1., 30.}, {-0.0000999, 0.0016945271909999163`}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{"l", "f", "g", "h"}, "SwatchLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True],GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., -0.00009999994913390636}, {
             1., -0.00009999994913390636}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 5.086609364137863*^-11}, {1., 
             5.086609364137863*^-11}}]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 0.00006180344974108315}, {1., 
             0.00006180344974108315}}]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 0.00016180344974108316`}, {1., 
             0.00016180344974108316`}}]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 2.}, {-0.00009999994913390636, 
           0.00016180344974108316`}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 2.}, {-0.00009999994913390636, 
           0.00016180344974108316`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
       GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., -0.00009999994913390636}, {
             1., -0.00009999994913390636}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 5.086609364137863*^-11}, {1., 
             5.086609364137863*^-11}}]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 0.00006180344974108315}, {1., 
             0.00006180344974108315}}]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            
            PointBox[{{1., 0.00016180344974108316`}, {1., 
             0.00016180344974108316`}}]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 2.}, {-0.00009999994913390636, 
           0.00016180344974108316`}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 2.}, {-0.00009999994913390636, 
           0.00016180344974108316`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
      "Row",
      DisplayFunction->(FrameBox[
        RowBox[{
          TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
        Automatic]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", 
             TemplateSlotSequence[1, ","], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {1.*^-7, 
              3.2827995913864427`*^-6}, {0.00006190339887498951, 
              3.2820943989264606`*^-6}, {0.00016190339887498951`, 
              3.2809536913980253`*^-6}}]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.0001619033988749896, 3.2809536913980253`*^-6}, {
              0.000323706797749979, 3.2791088196981737`*^-6}, {
              0.0005855101966249686, 3.2761259283198285`*^-6}}]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.0005855101966249687, 3.2761259283198285`*^-6}, {
              0.0010091169943749476`, 3.271305184293638*^-6}, {
              0.0016945271909999163`, 3.2635198567998462`*^-6}}]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.0016945271909999168`, 3.2635198567998462`*^-6}, {
              0.0028035441853748637`, 3.250961425060872*^-6}, {
              0.0045979713763747805`, 3.230741174919949*^-6}}]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.004597971376374781, 3.230741174919949*^-6}, {
              0.007501415561749644, 3.1982808413877355`*^-6}, {
              0.012199286938124426`, 3.146413417587368*^-6}}]}, {
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.012199286938124426`, 3.146413417587368*^-6}, {
              0.01980060249987407, 3.0641344930248952`*^-6}, {
              0.032099789437998495`, 2.9350501912217553`*^-6}}]}, {
             Hue[0.08640786499873876, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.0320997894379985, 2.9350501912217553`*^-6}, {
              0.05200029193787256, 2.7358845643421503`*^-6}, {
              0.08419998137587106, 2.436337336875205*^-6}}]}, {
             Hue[0.3224758424985268, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.08419998137587106, 2.436337336875205*^-6}, {
              0.1363001733137436, 2.005030425689114*^-6}, {0.2206000546896147,
               1.4397035696944727`*^-6}}]}, {
             Hue[0.5585438199983166, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.2206000546896147, 1.4397035696944727`*^-6}, {
              0.35700012800335834`, 8.70304737388139*^-7}, {0.577700082692973,
               8.415888619328626*^-7}}]}, {
             Hue[0.7946117974981064, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.5777000826929732, 8.415888619328626*^-7}, {0.9348001106963312,
               8.135911267026508*^-6}, {1.5126000933893045`, 
              0.0002101446099036508}}]}, {
             Hue[0.030679774997896203`, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2839409347396042`*^-6}, {
              0.35700012800335834`, 8.70304737388139*^-7}, {
              0.5777000826929728, 8.415888619328626*^-7}, {0.9348001106963312,
               8.135911267026508*^-6}}]}, {
             Hue[0.266747752497686, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.35700012800335834`, 8.70304737388139*^-7}, {
              0.577700082692973, 8.415888619328626*^-7}, {0.7141001560067165, 
              1.714167252697685*^-6}, {0.9348001106963312, 
              8.135911267026508*^-6}}]}, {
             Hue[0.5028157299974758, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.35700012800335834`, 8.70304737388139*^-7}, {
              0.49340020131710194`, 7.116068472257098*^-7}, {
              0.5777000826929729, 8.415888619328626*^-7}, {0.7141001560067165,
               1.714167252697685*^-6}}]}, {
             Hue[0.7388837074972656, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.35700012800335834`, 8.70304737388139*^-7}, {
              0.44130000937922936`, 7.239566489625205*^-7}, {
              0.4934002013171019, 7.116068472257098*^-7}, {0.5777000826929729,
               8.415888619328626*^-7}}]}, {
             Hue[0.9749516849970554, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.44130000937922936`, 7.239566489625205*^-7}, {
              0.49340020131710194`, 7.116068472257098*^-7}, {
              0.5255998907551004, 7.36895220398992*^-7}, {0.5777000826929729, 
              8.415888619328626*^-7}}]}, {
             Hue[0.21101966249684523`, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.44130000937922936`, 7.239566489625205*^-7}, {
              0.47349969881722787`, 7.089344014055143*^-7}, {
              0.4934002013171019, 7.116068472257098*^-7}, {0.5255998907551004,
               7.36895220398992*^-7}}]}, {
             Hue[0.44708763999663503`, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.44130000937922936`, 7.239566489625205*^-7}, {
              0.46120051187910344`, 7.119153530021904*^-7}, {
              0.4734996988172278, 7.089344014055143*^-7}, {0.4934002013171019,
               7.116068472257098*^-7}}]}, {
             Hue[0.6831556174964248, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.46120051187910344`, 7.119153530021904*^-7}, {
              0.47349969881722787`, 7.089344014055143*^-7}, {
              0.48110101437897745`, 7.088427821377863*^-7}, {
              0.4934002013171019, 7.116068472257098*^-7}}]}, {
             Hue[0.9192235949962146, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47349969881722787`, 7.089344014055143*^-7}, {
              0.4811010143789775, 7.088427821377863*^-7}, {
              0.48579888575535224`, 7.094687018982527*^-7}, {
              0.4934002013171019, 7.116068472257098*^-7}}]}, {
             Hue[0.15529157249600445`, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47349969881722787`, 7.089344014055143*^-7}, {
              0.47819757019360265`, 7.08717742936571*^-7}, {
              0.48110101437897745`, 7.088427821377863*^-7}, {
              0.48579888575535224`, 7.094687018982527*^-7}}]}, {
             Hue[0.39135954999579425`, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47349969881722787`, 7.089344014055143*^-7}, {
              0.4764031430026027, 7.087396181049144*^-7}, {0.4781975701936026,
               7.08717742936571*^-7}, {0.48110101437897745`, 
              7.088427821377863*^-7}}]}, {
             Hue[0.6274275274955841, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4764031430026027, 7.087396181049144*^-7}, {
              0.4781975701936026, 7.08717742936571*^-7}, {0.4793065871879776, 
              7.087420369478181*^-7}, {0.48110101437897745`, 
              7.088427821377863*^-7}}]}, {
             Hue[0.8634955049953739, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4764031430026027, 7.087396181049144*^-7}, {
              0.47751215999697766`, 7.087171860487018*^-7}, {
              0.47819757019360265`, 7.08717742936571*^-7}, {
              0.4793065871879776, 7.087420369478181*^-7}}]}, {
             Hue[0.09956348249516367, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4764031430026027, 7.087396181049144*^-7}, {
              0.4770885531992277, 7.08722353248703*^-7}, {
              0.47751215999697766`, 7.087171860487018*^-7}, {
              0.47819757019360265`, 7.08717742936571*^-7}}]}, {
             Hue[0.3356314599949535, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4770885531992277, 7.08722353248703*^-7}, {
              0.4775121599969777, 7.087171860487018*^-7}, {
              0.47777396339585265`, 7.087160969199147*^-7}, {
              0.47819757019360265`, 7.08717742936571*^-7}}]}, {
             Hue[0.5716994374947433, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4775121599969777, 7.087171860487018*^-7}, {
              0.4777739633958527, 7.087160969199147*^-7}, {
              0.47793576679472766`, 7.087162281482762*^-7}, {
              0.47819757019360265`, 7.08717742936571*^-7}}]}, {
             Hue[0.8077674149945295, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4775121599969777, 7.087171860487018*^-7}, {
              0.47767396339585266`, 7.087163230723448*^-7}, {
              0.4777739633958527, 7.087160969199147*^-7}, {
              0.47793576679472766`, 7.087162281482762*^-7}}]}, {
             Hue[0.04383539249432289, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47767396339585266`, 7.087163230723448*^-7}, {
              0.47777396339585265`, 7.087160969199147*^-7}, {
              0.47783576679472767`, 7.087160744934097*^-7}, {
              0.47793576679472766`, 7.087162281482762*^-7}}]}, {
             Hue[0.27990336999410914`, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47777396339585265`, 7.087160969199147*^-7}, {
              0.47783576679472767`, 7.087160744934097*^-7}, {
              0.47787396339585264`, 7.08716105468632*^-7}, {
              0.47793576679472766`, 7.087162281482762*^-7}}]}, {
             Hue[0.5159713474939025, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47777396339585265`, 7.087160969199147*^-7}, {
              0.4778121599969777, 7.087160724950081*^-7}, {0.4778357667947276,
               7.087160744934097*^-7}, {0.47787396339585264`, 
              7.08716105468632*^-7}}]}, {
             Hue[0.7520393249936888, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47777396339585265`, 7.087160969199147*^-7}, {
              0.47779757019360264`, 7.087160778240787*^-7}, {
              0.4778121599969776, 7.087160724950081*^-7}, {0.4778357667947276,
               7.087160744934097*^-7}}]}, {
             Hue[0.9881073024934821, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47779757019360264`, 7.087160778240787*^-7}, {
              0.4778121599969777, 7.087160724950081*^-7}, {
              0.47782117699135257`, 7.087160717178521*^-7}, {
              0.4778357667947276, 7.087160744934097*^-7}}]}, {
             Hue[0.22417527999326836`, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778121599969777, 7.087160724950081*^-7}, {
              0.4778211769913526, 7.087160717178521*^-7}, {
              0.47782674980035267`, 7.087160722729636*^-7}, {
              0.4778357667947276, 7.087160744934097*^-7}}]}, {
             Hue[0.4602432574930617, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778121599969777, 7.087160724950081*^-7}, {
              0.4778177328059777, 7.087160718288743*^-7}, {0.4778211769913526,
               7.087160717178521*^-7}, {0.47782674980035267`, 
              7.087160722729636*^-7}}]}, {
             Hue[0.696311234992848, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778177328059777, 7.087160718288743*^-7}, {
              0.47782117699135257`, 7.087160717178521*^-7}, {
              0.4778233056149778, 7.087160718288743*^-7}, {
              0.47782674980035267`, 7.087160722729636*^-7}}]}, {
             Hue[0.9323792124926413, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778177328059777, 7.087160718288743*^-7}, {
              0.477819861429603, 7.087160717178521*^-7}, {
              0.47782117699135257`, 7.087160717178521*^-7}, {
              0.4778233056149778, 7.087160718288743*^-7}}]}, {
             Hue[0.16844718999242758`, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.477819861429603, 7.087160717178521*^-7}, {
              0.4778211769913526, 7.087160717178521*^-7}, {0.4778219900532282,
               7.087160718288743*^-7}, {0.4778233056149778, 
              7.087160718288743*^-7}}]}, {
             Hue[0.40451516749222094`, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.477819861429603, 7.087160717178521*^-7}, {
              0.4778206744914785, 7.087160717178521*^-7}, {0.4778211769913526,
               7.087160717178521*^-7}, {0.4778219900532282, 
              7.087160718288743*^-7}}]}, {
             Hue[0.6405831449920072, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778206744914785, 7.087160717178521*^-7}, {
              0.47782117699135257`, 7.087160717178521*^-7}, {
              0.47782148755335413`, 7.087160717178521*^-7}, {
              0.4778219900532282, 7.087160718288743*^-7}}]}, {
             Hue[0.8766511224918005, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782117699135257`, 7.087160717178521*^-7}, {
              0.4778214875533541, 7.087160717178521*^-7}, {
              0.47782167949122667`, 7.087160717178521*^-7}, {
              0.4778219900532282, 7.087160718288743*^-7}}]}, {
             Hue[0.1127190999915868, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778214875533541, 7.087160717178521*^-7}, {
              0.4778216794912266, 7.087160717178521*^-7}, {
              0.47782179811535563`, 7.087160717178521*^-7}, {
              0.4778219900532282, 7.087160718288743*^-7}}]}, {
             Hue[0.34878707749138016`, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778216794912266, 7.087160717178521*^-7}, {
              0.4778217981153556, 7.087160717178521*^-7}, {0.4778218714290992,
               7.087160717178521*^-7}, {0.4778219900532282, 
              7.087160718288743*^-7}}]}, {
             Hue[0.5848550549911664, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778217981153556, 7.087160717178521*^-7}, {
              0.47782187142909915`, 7.087160717178521*^-7}, {
              0.4778219167394846, 7.087160717178521*^-7}, {0.4778219900532282,
               7.087160718288743*^-7}}]}, {
             Hue[0.8209230324909598, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782187142909915`, 7.087160717178521*^-7}, {
              0.47782191673948454`, 7.087160717178521*^-7}, {
              0.4778219447428428, 7.087160717178521*^-7}, {0.4778219900532282,
               7.087160718288743*^-7}}]}, {
             Hue[0.05699100999074602, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782191673948454`, 7.087160717178521*^-7}, {
              0.4778219447428428, 7.087160717178521*^-7}, {
              0.47782196204986993`, 7.087160718288743*^-7}, {
              0.4778219900532282, 7.087160718288743*^-7}}]}, {
             Hue[0.2930589874905394, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782191673948454`, 7.087160717178521*^-7}, {
              0.47782193404651174`, 7.087160718288743*^-7}, {
              0.47782194474284273`, 7.087160718288743*^-7}, {
              0.47782196204986993`, 7.087160718288743*^-7}}]}, {
             Hue[0.5291269649903256, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782184342574097`, 7.087160717178521*^-7}, {
              0.47782188873612635`, 7.087160717178521*^-7}, {
              0.47782191673948454`, 7.087160717178521*^-7}, {
              0.47782196204986993`, 7.087160718288743*^-7}}]}, {
             Hue[0.765194942490119, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782188873612635`, 7.087160717178521*^-7}, {
              0.47782191673948454`, 7.087160717178521*^-7}, {
              0.47782193404651174`, 7.087160718288743*^-7}, {
              0.47782196204986993`, 7.087160718288743*^-7}}]}, {
             Hue[0.0012629199899052423`, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782188873612635`, 7.087160717178521*^-7}, {
              0.47782190604315355`, 7.087160717178521*^-7}, {
              0.47782191673948454`, 7.087160717178521*^-7}, {
              0.47782193404651174`, 7.087160718288743*^-7}}]}, {
             Hue[0.2373308974896915, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782190604315355`, 7.087160717178521*^-7}, {
              0.4778219167394846, 7.087160717178521*^-7}, {0.4778219233501807,
               7.087160717178521*^-7}, {0.47782193404651174`, 
              7.087160718288743*^-7}}]}, {
             Hue[0.47339887498948485`, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778219167394846, 7.087160717178521*^-7}, {
              0.4778219233501807, 7.087160717178521*^-7}, {
              0.47782192743581564`, 7.087160717178521*^-7}, {
              0.47782193404651174`, 7.087160718288743*^-7}}]}, {
             Hue[0.7094668524892711, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778219233501807, 7.087160717178521*^-7}, {
              0.4778219274358156, 7.087160717178521*^-7}, {
              0.47782192996087686`, 7.087160717178521*^-7}, {
              0.47782193404651174`, 7.087160718288743*^-7}}]}, {
             Hue[0.9455348299890574, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778219274358156, 7.087160717178521*^-7}, {
              0.4778219299608768, 7.087160717178521*^-7}, {0.4778219315214505,
               7.087160717178521*^-7}, {0.47782193404651174`, 
              7.087160718288743*^-7}}]}, {
             Hue[0.18160280748885782`, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778219299608768, 7.087160717178521*^-7}, {
              0.47782193152145047`, 7.087160717178521*^-7}, {
              0.4778219324859381, 7.087160717178521*^-7}, {
              0.47782193404651174`, 
              7.087160718288743*^-7}}]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
yAX///9aXDold1xQNhf8D1AdQfI=
               "]]}, Annotation[#, "Charting`Private`Tag$88708#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLb8wOnrRFL4DDAxvTh7qPG03TVaS4ccvXjifZ9a1
Jb6JCP7UDe5C8iI8cL6GYspllrtccP6C6y43WNZwwvlbVkszaidywPmXbs6t
TdVhh/N7VMXkjt1lhfO1twcxOU5lgfOvLLKyupDEDOdLrpGY1irGBOdn8C9y
9X/AAOdbFN4vTEv4vx/Gv/EvbUHVmT9wfo+Da9n2lF9wfsVe/ikOJ7/D+frH
kiz/WX6F83818bQ9ufYJzv9TtUhK3OEDnK/qJ7f2yarXcP4hmQtbjPOewflf
mCaffu35EM6fs4gt6dXvG3B+fITBzBits3C+j4RQUHDNZji/5vBm0VMzNtnD
+I+/RtVP/HIWzt9iMjlmz9wbcP4Zhic5/9sfwvkr/XPnbF/xDM6PNfOslSt8
DecHBqullwV8gPMTwgNfmOz5BOcvOf/54T7pr3D+Bp5Vk/+s+w7nr5jKOU9Q
7Becn/G4JuHWhj9wvkjtzOoq+f9wfvXRaeyfDzA4wPgX1mWtZeJhgvOl7Sb/
/+vADOefWn9U93I/C5w/5baxRN8NVjg/ZO23dSbc7HB+ReJhxa3hHHD+pN1P
HBT7OOH84+cdZYr3ccH5CcdWXJ7HwQPnv09KMd9mwwvnszMleK55geBD8wuc
DwAQepz5
               "]]}, 
             Annotation[#, "Charting`Private`Tag$88708#2"]& ]}}, {}, {}}, 
         PointBox[{0.47782193152145047`, 7.087160717178521*^-7}]}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{-0.0000999, 1.5126000933893045`}, {
           0, 0.0002101446099036508}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-0.0000999, 1.5126000933893045`}, {
           0, 0.0002101446099036508}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
       GraphicsBox[{{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {1.*^-7, 
              3.282799941439763*^-6}, {0.00006190339887498951, 
              3.2823367489553945`*^-6}, {0.00016190339887498951`, 
              3.2816961353931973`*^-6}}]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.0001619033988749896, 3.2816961353931973`*^-6}, {
              0.000323706797749979, 3.2809445092985*^-6}, {
              0.0005855101966249686, 3.2804741252334684`*^-6}}]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.0005855101966249687, 3.2804741252334684`*^-6}, {
              0.0010091169943749476`, 3.281665749144125*^-6}, {
              0.0016945271909999163`, 3.2887127424663376`*^-6}}]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.0016945271909999168`, 3.2887127424663376`*^-6}, {
              0.0028035441853748637`, 3.3135822813390448`*^-6}, {
              0.0045979713763747805`, 3.389618039251197*^-6}}]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.004597971376374781, 3.389618039251197*^-6}, {
              0.007501415561749644, 3.6104276951443026`*^-6}, {
              0.012199286938124426`, 4.253243925389505*^-6}}]}, {
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.012199286938124426`, 4.253243925389505*^-6}, {
              0.01980060249987407, 6.251331950202221*^-6}, {
              0.032099789437998495`, 0.000013477333059341847`}}]}, {
             Hue[0.08640786499873876, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.0320997894379985, 0.000013477333059341847`}, {
              0.05200029193787256, 0.00004607339503193142}, {
              0.08419998137587106, 0.00022718539097588142`}}]}, {
             Hue[0.3224758424985268, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.08419998137587106, 0.00022718539097588142`}, {
              0.1363001733137436, 0.0013759778859231409`}, {
              0.2206000546896147, 0.009096538751886096}}]}, {
             Hue[0.5585438199983166, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.2206000546896147, 0.009096538751886096}, {
              0.35700012800335834`, 0.060027481169027896`}, {
              0.577700082692973, 0.32859229217649577`}}]}, {
             Hue[0.7946117974981064, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.5777000826929732, 0.32859229217649577`}, {0.9348001106963312, 
              0.8859229545160268}, {1.5126000933893045`, 
              1.015146357911465}}]}, {
             Hue[0.030679774997896203`, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{-0.0000999, 3.2836582736228692`*^-6}, {
              0.35700012800335834`, 0.060027481169027896`}, {
              0.5777000826929728, 0.3285922921764979}, {0.9348001106963312, 
              0.8859229545160268}}]}, {
             Hue[0.266747752497686, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.35700012800335834`, 0.060027481169027896`}, {
              0.577700082692973, 0.32859229217649577`}, {0.7141001560067165, 
              0.5787977565305942}, {0.9348001106963312, 
              0.8859229545160268}}]}, {
             Hue[0.5028157299974758, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.35700012800335834`, 0.060027481169027896`}, {
              0.49340020131710194`, 0.19666065774661623`}, {
              0.5777000826929729, 0.32859229217649355`}, {0.7141001560067165, 
              0.5787977565305942}}]}, {
             Hue[0.7388837074972656, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.35700012800335834`, 0.060027481169027896`}, {
              0.44130000937922936`, 0.13258838677174822`}, {
              0.4934002013171019, 0.19666065774661248`}, {0.5777000826929729, 
              0.32859229217649355`}}]}, {
             Hue[0.9749516849970554, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.44130000937922936`, 0.13258838677174822`}, {
              0.49340020131710194`, 0.19666065774661623`}, {
              0.5255998907551004, 0.2433391428449443}, {0.5777000826929729, 
              0.32859229217649355`}}]}, {
             Hue[0.21101966249684523`, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.44130000937922936`, 0.13258838677174822`}, {
              0.47349969881722787`, 0.17045688201618214`}, {
              0.4934002013171019, 0.19666065774661248`}, {0.5255998907551004, 
              0.2433391428449443}}]}, {
             Hue[0.44708763999663503`, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.44130000937922936`, 0.13258838677174822`}, {
              0.46120051187910344`, 0.1553230024120541}, {0.4734996988172278, 
              0.17045688201618214`}, {0.4934002013171019, 
              0.19666065774661248`}}]}, {
             Hue[0.6831556174964248, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.46120051187910344`, 0.1553230024120541}, {
              0.47349969881722787`, 0.17045688201618214`}, {
              0.48110101437897745`, 0.180218169061388}, {0.4934002013171019, 
              0.19666065774661248`}}]}, {
             Hue[0.9192235949962146, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47349969881722787`, 0.17045688201618214`}, {
              0.4811010143789775, 0.180218169061388}, {0.48579888575535224`, 
              0.18640481722192948`}, {0.4934002013171019, 
              0.19666065774661248`}}]}, {
             Hue[0.15529157249600445`, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47349969881722787`, 0.17045688201618214`}, {
              0.47819757019360265`, 0.17645320625683647`}, {
              0.48110101437897745`, 0.180218169061388}, {0.48579888575535224`,
               0.18640481722192948`}}]}, {
             Hue[0.39135954999579425`, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47349969881722787`, 0.17045688201618214`}, {
              0.4764031430026027, 0.17414884227456562`}, {0.4781975701936026, 
              0.17645320625683106`}, {0.48110101437897745`, 
              0.180218169061388}}]}, {
             Hue[0.6274275274955841, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4764031430026027, 0.17414884227456562`}, {
              0.4781975701936026, 0.17645320625683106`}, {0.4793065871879776, 
              0.17788598898132602`}, {0.48110101437897745`, 
              0.180218169061388}}]}, {
             Hue[0.8634955049953739, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4764031430026027, 0.17414884227456562`}, {
              0.47751215999697766`, 0.17557098351466938`}, {
              0.47819757019360265`, 0.17645320625683647`}, {
              0.4793065871879776, 0.17788598898132602`}}]}, {
             Hue[0.09956348249516367, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4764031430026027, 0.17414884227456562`}, {
              0.4770885531992277, 0.1750269964872676}, {0.47751215999697766`, 
              0.17557098351466938`}, {0.47819757019360265`, 
              0.17645320625683647`}}]}, {
             Hue[0.3356314599949535, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4770885531992277, 0.1750269964872676}, {
              0.4775121599969777, 0.17557098351466938`}, {
              0.47777396339585265`, 0.17590766608554453`}, {
              0.47819757019360265`, 0.17645320625683647`}}]}, {
             Hue[0.5716994374947433, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4775121599969777, 0.17557098351466938`}, {
              0.4777739633958527, 0.17590766608554453`}, {
              0.47793576679472766`, 0.17611593065131426`}, {
              0.47819757019360265`, 0.17645320625683647`}}]}, {
             Hue[0.8077674149945295, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4775121599969777, 0.17557098351466938`}, {
              0.47767396339585266`, 0.17577902151071623`}, {
              0.4777739633958527, 0.17590766608554453`}, {
              0.47793576679472766`, 0.17611593065131426`}}]}, {
             Hue[0.04383539249432289, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47767396339585266`, 0.17577902151071623`}, {
              0.47777396339585265`, 0.17590766608554453`}, {
              0.47783576679472767`, 0.17598719954648234`}, {
              0.47793576679472766`, 0.17611593065131426`}}]}, {
             Hue[0.27990336999410914`, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47777396339585265`, 0.17590766608554453`}, {
              0.47783576679472767`, 0.17598719954648234`}, {
              0.47787396339585264`, 0.17603636414166957`}, {
              0.47793576679472766`, 0.17611593065131426`}}]}, {
             Hue[0.5159713474939025, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47777396339585265`, 0.17590766608554453`}, {
              0.4778121599969777, 0.17595681805657715`}, {0.4778357667947276, 
              0.17598719954648234`}, {0.47787396339585264`, 
              0.17603636414166957`}}]}, {
             Hue[0.7520393249936888, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47777396339585265`, 0.17590766608554453`}, {
              0.47779757019360264`, 0.17593804275329128`}, {
              0.4778121599969776, 0.17595681805657715`}, {0.4778357667947276, 
              0.17598719954648234`}}]}, {
             Hue[0.9881073024934821, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47779757019360264`, 0.17593804275329128`}, {
              0.4778121599969777, 0.17595681805657715`}, {
              0.47782117699135257`, 0.17596842240133162`}, {
              0.4778357667947276, 0.17598719954648234`}}]}, {
             Hue[0.22417527999326836`, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778121599969777, 0.17595681805657715`}, {
              0.4778211769913526, 0.17596842240133526`}, {
              0.47782674980035267`, 0.1759755944982062}, {0.4778357667947276, 
              0.17598719954648234`}}]}, {
             Hue[0.4602432574930617, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778121599969777, 0.17595681805657715`}, {
              0.4778177328059777, 0.17596398988472906`}, {0.4778211769913526, 
              0.17596842240133526`}, {0.47782674980035267`, 
              0.1759755944982062}}]}, {
             Hue[0.696311234992848, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778177328059777, 0.17596398988472906`}, {
              0.47782117699135257`, 0.17596842240133162`}, {
              0.4778233056149778, 0.17597116187896367`}, {
              0.47782674980035267`, 0.1759755944982062}}]}, {
             Hue[0.9323792124926413, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778177328059777, 0.17596398988472906`}, {
              0.477819861429603, 0.1759667293231577}, {0.47782117699135257`, 
              0.17596842240133162`}, {0.4778233056149778, 
              0.17597116187896367`}}]}, {
             Hue[0.16844718999242758`, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.477819861429603, 0.1759667293231577}, {
              0.4778211769913526, 0.17596842240133526`}, {0.4778219900532282, 
              0.17596946878581457`}, {0.4778233056149778, 
              0.17597116187896367`}}]}, {
             Hue[0.40451516749222094`, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.477819861429603, 0.1759667293231577}, {
              0.4778206744914785, 0.17596777570192024`}, {0.4778211769913526, 
              0.17596842240133526`}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.6405831449920072, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778206744914785, 0.17596777570192024`}, {
              0.47782117699135257`, 0.17596842240133162`}, {
              0.47782148755335413`, 0.1759688220842223}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.8766511224918005, 0.6, 0.6], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782117699135257`, 0.17596842240133162`}, {
              0.4778214875533541, 0.1759688220842205}, {0.47782167949122667`, 
              0.175969069102094}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.1127190999915868, 0.6, 0.6], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778214875533541, 0.1759688220842205}, {
              0.4778216794912266, 0.175969069102094}, {0.47782179811535563`, 
              0.17596922176762853`}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.34878707749138016`, 0.6, 0.6], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778216794912266, 0.175969069102094}, {
              0.4778217981153556, 0.1759692217676322}, {0.4778218714290992, 
              0.1759693161201601}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.5848550549911664, 0.6, 0.6], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778217981153556, 0.1759692217676322}, {
              0.47782187142909915`, 0.17596931612015654`}, {
              0.4778219167394846, 0.17596937443324234`}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.8209230324909598, 0.6, 0.6], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782187142909915`, 0.17596931612015654`}, {
              0.47782191673948454`, 0.17596937443324234`}, {
              0.4778219447428428, 0.17596941047271633`}, {0.4778219900532282, 
              0.17596946878581457`}}]}, {
             Hue[0.05699100999074602, 0.6, 0.6], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782191673948454`, 0.17596937443324234`}, {
              0.4778219447428428, 0.17596941047271633`}, {
              0.47782196204986993`, 0.17596943274633317`}, {
              0.4778219900532282, 0.17596946878581457`}}]}, {
             Hue[0.2930589874905394, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782191673948454`, 0.17596937443324234`}, {
              0.47782193404651174`, 0.1759693967068612}, {
              0.47782194474284273`, 0.17596941047271633`}, {
              0.47782196204986993`, 0.17596943274633317`}}]}, {
             Hue[0.5291269649903256, 0.6, 0.6], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782184342574097`, 0.1759692800806929}, {
              0.47782188873612635`, 0.1759693383937747}, {
              0.47782191673948454`, 0.17596937443324234`}, {
              0.47782196204986993`, 0.17596943274633317`}}]}, {
             Hue[0.765194942490119, 0.6, 0.6], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782188873612635`, 0.1759693383937747}, {
              0.47782191673948454`, 0.17596937443324234`}, {
              0.47782193404651174`, 0.1759693967068612}, {
              0.47782196204986993`, 0.17596943274633317`}}]}, {
             Hue[0.0012629199899052423`, 0.6, 0.6], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.47782188873612635`, 0.1759693383937747}, {
              0.47782190604315355`, 0.17596936066738822`}, {
              0.47782191673948454`, 0.17596937443324234`}, {
              0.47782193404651174`, 0.1759693967068612}}]}, {
             Hue[0.2373308974896915, 0.6, 0.6], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.47782190604315355`, 0.17596936066738822`}, {
              0.4778219167394846, 0.17596937443324234`}, {0.4778219233501807, 
              0.1759693829410065}, {0.47782193404651174`, 
              0.1759693967068612}}]}, {
             Hue[0.47339887498948485`, 0.6, 0.6], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778219167394846, 0.17596937443324234`}, {
              0.4778219233501807, 0.1759693829410065}, {0.47782192743581564`, 
              0.17596938819909325`}, {0.47782193404651174`, 
              0.1759693967068612}}]}, {
             Hue[0.7094668524892711, 0.6, 0.6], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778219233501807, 0.1759693829410065}, {
              0.4778219274358156, 0.17596938819909325`}, {
              0.47782192996087686`, 0.17596939144877066`}, {
              0.47782193404651174`, 0.1759693967068612}}]}, {
             Hue[0.9455348299890574, 0.6, 0.6], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6], 
              PointSize[Small]], 
             
             PointBox[{{0.4778219274358156, 0.17596938819909325`}, {
              0.4778219299608768, 0.17596939144877433`}, {0.4778219315214505, 
              0.17596939345718188`}, {0.47782193404651174`, 
              0.1759693967068612}}]}, {
             Hue[0.18160280748885782`, 0.6, 0.6], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6], 
              PointSize[Large]], 
             
             PointBox[{{0.4778219299608768, 0.17596939144877433`}, {
              0.47782193152145047`, 0.17596939345718188`}, {
              0.4778219324859381, 0.1759693946984482}, {0.47782193404651174`, 
              0.1759693967068612}}]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
XK06+MkGXVDSAP7/33/4vCLtJJr8D6ab8Vo=
               "]]}, Annotation[#, "Charting`Private`Tag$88795#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/XL3n6Mh7sX7GRjenDzUedpOlmWWYOmzIjg/0Mc8
dmorgj8tfM/rzs2FcP6uC28uZr4vgPPTBINnKekj+Pdnsm+R25sH5699s//R
OfNcON/clJfh+cRsOP8Sz7GHGz5nwvkaB64WBRZmwPlWmVWfIs+lwfns70oV
Ld1T4fwnjHdFTh1PhvNruW9+O6SeBOdf/KDdMWlxApx/aLq6wJS/sXA+c865
GWmHoxD++67U8OxAOJz/Im+hi1ltCJzfO/dsunFhIJwflO9+gcHDB84/c3/h
o8QzrnB+at36FOsGezhf4PWhik9JRnC+/zUTuZqJEnB+n6yB5MwicXsYv25a
rXzOIyM4f7/7j9oaTns4f9LSp5uXSbnB+YyvFcRPTPSB8w8mNMQd9wmE87sT
3K7cmhgC599fEffaYX44nC90eX6l89woOP+s4HatsjuxcH6Xz4R9fwsT4PxC
KYPKCLEkOH8uT2XLnXnJcP6O/LDT6+RT4Xzxu/OUJQ+mwfm78yacWeOWAecv
4XrbduNNJpxfI36vJqg7G86f6VFx+CtvLpz/q7lW2nBjHpx/8aPoIy+ZAjhf
Jso8ROUOgt/hznfec00hwj3HLT815xXB+Q2O0jFvbiH40PwC5wMATHegWw==

               "]]}, 
             Annotation[#, "Charting`Private`Tag$88795#2"]& ]}}, {}, {}}, 
         PointBox[{0.0005883373436317042, 3.2804740766056995`*^-6}]}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{-0.0000999, 1.5126000933893045`}, {
           0, 1.015146357911465}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-0.0000999, 1.5126000933893045`}, {
           0, 1.015146357911465}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
      "Row",
      DisplayFunction->(FrameBox[
        RowBox[{
          TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
        Automatic]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{
           RowBox[{"{", 
             TemplateSlotSequence[1, ","], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6846811269934654`*^9, 3.684681180851074*^9}, {
   3.684681782116932*^9, 3.6846818254176893`*^9}, 3.684682082817441*^9, 
   3.6846821602509127`*^9, {3.684682288785441*^9, 3.6846823814493103`*^9}, {
   3.684682416275463*^9, 3.684682419319171*^9}, 3.684682504028384*^9, 
   3.6846825444480515`*^9, 3.684682579320136*^9, {3.6846826239968643`*^9, 
   3.6846826646344776`*^9}, {3.6846827241385727`*^9, 3.684682736491973*^9}, 
   3.6846829301634083`*^9, 3.684683003638324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"step", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smin", "=", 
   RowBox[{"-", "2."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smax", "=", "2."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eSV", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", 
         RowBox[{"eFunc", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "smin", ",", "smax", ",", "step"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "smin", ",", "smax", ",", "step"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"eFunc", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "smin", ",", "smax", ",", "step"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "smin", ",", "smax", ",", "step"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{
    RowBox[{"#", "<", "0.9"}], "&"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"eSV", ",", "1"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "we", " ", "only", " ", "worry", " ", "about", " ", "the", " ", "value", 
     " ", "and", " ", "not", " ", "the", " ", 
     RowBox[{"slope", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"eFunc", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"Method", "->", "\"\<RandomSearch\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.9998573417368651`"}], ",", 
     RowBox[{"y", "\[Rule]", "1.1994846729847997`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DataN", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Fitfunction", "@@", "#"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.00018", ",", "1.20066"}], "}"}], ",", "#"}], "]"}], 
           "&"}], ")"}], "/@", "SamplingSet"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"Data", " ", "DataN"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6842530248793745`*^9, 3.6842530248793745`*^9}, {
   3.684264538112546*^9, 3.684264538632617*^9}, {3.684266468092701*^9, 
   3.6842664700516295`*^9}, 3.6842666623806567`*^9, 3.6846770186113124`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.684683063544985*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0nXlcTN//xyd7IZWQbFmzJDsJ3cla1mwh+y5LyZ41W0jIniWKkjVJKNsJ
oSGpKJWWKe3rTFPTtMhvPt+P9/vw/n2//TMPz8/9vO+dM/c5557XufdMxyWO
05bXEYlE3xqLRHVF+BcGrxk+246eVjYXr/jPXy0D3n1JD9NaNf8U+c9fDXKf
iZryRRXNxQP+81eNvG3bTVWhan7xwj9/lcifP+xa2EDVXPzvP1XIJ5/f93i0
CvarRD543NG5jmr+n91GliE3aqV5aa8K9qtAPvrHk92bVLBfOfJ955qEWuB+
Zciv3av35ksF1C9Evk2icbmTmnv+p04ecpuZI0T62D7ZyN84xX85VNZc3P8/
x/MDeeGD1HlTS2G/UuThZx/c61cC9ROR361uOPpzfnNx3//U+YJ84v2OVrcy
YXsJ8hkXCr7VTW4u9vgPD0Ue27Z3W8ln2C/+hSXcO6o7+2Vzsfe/2wvAz7l0
HzbID7gE+aXDQ6qPuDQXm/17PMhf+jdJnjEetk9Erv90StsulXrwfpHrSPoG
j9qtJx74b/sg31nYadDbN7riVf+2J/JNUx06nb6rI778b/vz+ssHdEkdqi2O
/vfzQh7ZThET3F0LPl9ex2f4vi9e9eF8QH5ge88vF500fh+PAvmA9GeTVx6p
EaL+Pd+Qf/HyMr46WSX8e5xK5AGtDMNv3i7//W8V8rxuo+eFaJYJv89/5LMd
ZSG/6iqEf/dbjdz7XtngYLvS3/utQb5UdOHg0Tz57/3WIn+X3bbS7RK+H/ic
wxx+FLybuoy/T/A46MbuZu0quNfwmh3f1uFMBfcaeJO9mmYNVNxr4KtdJuav
V3GvgW9ebuga+4fXwCcEt13avZJ7DTzVtL7MoZJ7DXzyltZ2PpXca+C7p+vp
hlZyr4HLG95tda+Sew1cNu+OplMl9xp4g+pFwQoV9xp4eB+7Ju1U3Gvg14rf
9f6o5F4DV11tnv2pjHuN20cbqNLk3Gvglx9/+Hi5iHsNXH9iyaL1OdxrbOea
VTm7UrnXwNt2sUvcEsO9Bk69Bu7m2v57lQ/3Go+nm3fS3K3ca+C37X51sx/M
vQYe16+OeYdY7jXwiOEDQksHca+BP30z/+DbUdxr4Mdbhi/fd78Zeg38QV2/
cQHPG6PXwKty7np9FDVEr/H8Kb/9IWxpHfQa6091sk09+lMAr4EHhoVL2HMV
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
wXZpLQsa3bMZyc0UTO/4+nmmPzRIbqZg01qfLfqI87lSvn3ouHPde5QKf+dm
6s/dZdey2s5y4e/cTMGGfUmTPnkpE/7OzRSs5bMmK08flwl/52YK9naCYeHO
Tdxr4H2OFrzotpx7DXzguJL+T+bKSG6m/rz2H5kbP1NGcjMF0zgbMsdqmozk
ZgrWf1Sek50N9xr4uqSkkd5TuNfAD9laRH6ZIiO5mYLZWfW+8NZGRnIzBVv9
qGr/jGk0N1Owc10zdexn0NxMweJG9j5UaktzMzn76mnll/Cc5mZy9uvEx/SL
z2huJmcmhw0Pz39KczM5W37/xYWuoTQ3k7Pndg0uVD6huZmcHa9Yrkp/THMz
OTMacft+3iOam8mZxaqnDTo8ormZnIV/rnPvTDDNzeRMP3ydeGkwzc3kzDcl
f9udYJqbyVnSETvrC49obiZnMySHHVc9obmZnEVPGWq05inNzeRs5JIx55oz
mpvJ2csrUW6idzQ3U7fn+6fTG0bT3EzdDoOLvrROpbmZnAUfz/YZLaO5mZwF
vHCfdL+W5mby/5GbyZlrVfidLjXNSG6m3u/pD1pztlcIf+dmcmbpddps8nK5
8HduJmcPe5nOnHtJhl4D/xnes/bHEpnwd24mZ275b8eenyAT/s7N5KxOdg/f
uQL3Gj9H/0OaZUNkJDeTM5ezY/ZsGcC9Bq7JvqZ368e9Bn5yu2zf0b4ykpup
9zt+zBXzfjKSm8nZ8B6XNif0l5HcTM50RpwqajOIew1cw2Jwu+gh3GvgS6t6
7o81p7mZ+nOvdFjazILmZnJ2o+5B/12WNDeTs2EaDVq3GUNzMzkb1bz+gjwr
mpvJGMt2KPl5iuZmMjZYq5vJsRM0N5Ox56LM4NyjNDdTe3NmYwPtwzQ3k7G4
on0nqvbT3EzGKqI2B93ZQ3MzGSvoued9+x00N5Ox2Nh6HaZuobmZjAVPmFJP
7ERzMxkbo3UoLHcNzc1kbPr8X15WK2huJmPZg6MK5i2iuZmM+UYEaHS2o7mZ
jI091mu053Sam8lY+wytHk8n0txMvf3bimGuY2huJmMv7y/oXDWC5mYyppO8
ya/5YJqbydhNvwX3onvT3EzGmrRYZdOnK83N8D47kpvJmGlev+H9/POFv3Mz
GfMPsLS+tK5A+Ds3k7FbFeJFWV0Lhb9zMxnLH1Iz+nFUIXoNfIVX4bK2K4uE
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
9nREr4FrPC8OKRs2A71GbpRWKDPqg14jF+WeuxWdi17/cX2tXzBuOnqNPOzH
1ba69fHfyAMXeE7TtUSvkS8x/T737jL0GrjYPnlhznAX9BrbYb2xpVfOafQa
+PqfCb8OPfJFr7F9VjZobt/+IXoNvFB8NahCNwy9Bu535Wjsnhq8zzAMjnd9
jHa8f+ssMs+lFH76HtoR/jKTzHMpBSNnv8PdZmeSeS6lUPj13OvPmfx3E4Hv
tpvy89lS/rtrwKddbtY190sGmedSCtvOm3SZNzCDzHOp9zu5fJjZgXQyz6UU
vOtXzHn3mq9HD/zBp6seHdLSyDyXUjh4+KNrsX4qmedSCi1Gfs65Z5xM5rmU
Qso+81rL1klknkspLOrteUVU9I3McymFKuWk9AL/ODLPpX6/6762Srb5Qua5
1O0jX5TkLosm81xKYfntnz1EnT+ReS71+x31aoPtnggyz6UUurzt1yGqGfca
+H+f51IKldv7zTq+PITMcymFRtmb+jzLeEDmuZTC3vlaO5+l3STzXEpB1vJU
47b9vdFrbJ+twzXeLzmNXgN36RLbPvDZATLPpebtCl2F3A1knkspaMy78yKi
yo7Mc6nHu7IhXVXVZug18rBUWeE4Dbx+xTrqS5ih6bPRaz5uDl6aEVxg8fc8
l5rnelnry/uTeS41H7h76M3dc8k8l/r4ey15vebxVjLPpRTEuf7zh8UeJ/Nc
6s+lVdTIfo+9yTyX+vOt18CjRfJ9Ms+lFPruX9hPc88zMs+lFHSurFk6KQ2v
z8PguPJLM3cZtMwkuZlKeN3DrrVl2A+Sm6mEk85Wt2cs/EFyM5VwY9WRUofS
DPQaeIfEcc/8t2Wg18CDc8L0W8vTSW6mEtaPLtfItUsnuZlKeLpjVlObR1KS
m6kE6+VvNiz7lUZyM5WwSXeHxZSNqeg18MDivp593iWT3EwlfL5XLvJTJZHc
TCWYu1zym9UkkeRmKuH6lXVP+tX7RnIzleCwcqLOmcyv6DVw2V6Fwe6HsSQ3
Uwn7OgdmXNkWTXIzlaD/tcDp8PZIkpuphBiXy+FDDSJIbqauf+LBBPf0NyQ3
U/2P3EwlOL8ZZiO6HUJyM5Ww7aZ4595pQSQ3UwnSS1q+WVm3SG6mEnTG/XCd
P8iH5GYqwcWn//CkLmdJbqYSxA4Xdw1Ye4jkZipBo0GzFlO3bKG/pymIxrT7
1XnOYvp7moIo4ta+SRdGkrxMzY0u5wbd0iP3m/0n37p0cqIfyc3U+xUNrJ48
5KPFH/36v9uLra+rYjuT3Oyf+ufOBGVPJbmZ+v12Mt00qZsTyc1UwquZh3el
vjxEcjOVsJdNfF2VeZH+nqZgtMhR8+eu2yQ3Uwmhi5PtJu54QnIzlTB8TbbD
1rb4ucPvXwt9B4WbOBv/ILlZpXB86sVl9+MzSG5WKWxOrhu3ekcGyc0qhfhb
E0Yn63OvgdtOcYjvdw3Gufj710LppzlXL3dKJ7lZpWB3f5bV7LNSkptVCrM/
LV22WpFGcjM1H2xfOP4KriuLPPD41XYXe8J9OPj714LFqdbbe3p+J7lZpVA2
9FDswZxEkptVCmdt7m1pb5hAcrNKoZNIlbe3fzzJzSoFq5qALYcHcq+Bf9X8
2mRH11iSm6n5mrX1jJtEk9ysUui+6Vjvu+kfSW5WKVheP+Vj+fQ9yc3U2zed
3s34Cfca2+G/5maVgmrPEP2XeSEkN6sUcl0tZM+eBZHcrFJYnyZaWVd6m+Rm
lYKRvN/9z32vkdysUnDRGDbiSMY5kpupj7+s//QP3d3Qa9z+7dqM7CHbSW6m
9qN+63Mmt5fT378WRPo1qWuMx5PcTM0XfTypb9oRveaeSWfHdo8mudk/fFHb
O6Xe6DVyo3levUY0J7mZmm+ynaD5fCzJzSoFjVkPvmcfWUVyM/X2R161a9Z/
H8nNKoXFzxV1h5w+S3//WljU2qpjgxo/kptVCjavHxwwrB9McrNK4e6dQod3
d/D6PAz286DZAK2zEzNIblYtfLXdevShKIPkZtXC7l1LXLNvp5PcrFqYVzKn
zHE8jHMrka8seq7nkcp/Fxn48/bCIrcVUpKbqb/P8g5Hzn6TRnKzauHzx+1T
76n9Ba+Bv9KZ1VlnQQrJzaqFPRorBiSIktFr4B5OM9y/uSaR3KxaaHH85ZV9
sgSSm1ULbcebBrYRvpHcrFp4/NPAULopjuRm1ULfG19PDzjL1/EE3n9MHcNw
3xiSm1ULMSMWvLCY/pnkZtVCeKmfZIntR5KbVQsh1ffqj1v2nuRm1UKydVOz
7h7ca+D/PTerFjxblny36BpKcrNqQRV1Z5JCPb77OzerFtJFl1c9i7pDcrNq
QVb+frhDl+skN6sWNK5Vfj5x0ZPkZurPq9PhPmeL3EluVi24FCTkBXbdTXIz
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
VtNwyYlnF3Vwv1C/auGNh4V5vP2h/jOP3ZXbrvP2hzr9QlqUFcTKsf2Bh3tn
tRu8n7c/1D+yz/bTsSre/lB/StbY5kc38vaHOvFb60QqVvD2h/HrJveOkS3i
aP9bys7ptKp69J6/39rf+025OcrtzSO4PizDOvmaUzNYPO1/FezFHpMMR36d
jPWH3Hh8vMc73v5Q3/q+h66jLvcd6tTbeejKyz/aH7jNxNWHQl0b4X6hfu5U
VYfFn3j7Q32fyuv9Dex5+0OdHuOU1/1uyLD9gddt4mPXbIaM+FjKrr7xGjqO
f29g/eyAfu4+c3n7Q52M2tPax6by9oecIKJNocerUNr/yphOgo3xoWvU91J2
8Vtcup33TzhOrKNxOTUxMZj2v3J2qkn6+7wQ2v/K2ISYutkbztL+t5S521w6
WLGCv1+oszojz7xPDj8enG80uO/zxRG+N3KxvnmTMp1xbrT/LWV7S2p3vLLk
7Q91jr5LiPcfxtsf+NWhsiOa/WXERxlb8uheZ5PTtP8tZRO+BSv6WdH+V87s
a50PvhNo/ytjdz7cmV99hJ7/xWxSB7ctIxZR32XMY9PAlDZtS7D9oc6oZrdP
Rmyk/a+MlfcsupZiy9t/+e/6Xud+bHYeRPtfGWt5f9+QQ6tL8P1CneQw+x6l
/Wj/K2Pdp7+aESYpwPaH+t+stQ27pWM/hfV7D14xykWbtz/Uufp+93kTz2Js
f+DStnf3r8jhxwP1X3yMt2z9Fr73arD+mcCDhySDaP8rY46zrKIce9Pv/0Jm
kGz8cMcA3v7/9iMFbNpGh/Gts+D4o4Vlv/fbR397gmFlMrY/1Jli+LThSRm9
DixkZ+aeMY2fxvvrfr/rR/QdpRm3DrfH+hZZPU6sr5NPzrdCZlZi7hPUviE5
HwpZ4JiX7mXnHmL7Q/3Thd/PBeljP4X1V8xt0HyYdgm2P9Sxe9zhhe21bGx/
4PEf9M+ddy7G44H6M16bPIm6WI3tDPUfd/wwZ1E7+v1fyPYNtDZK1+XtD/ni
1nazrt86Ae1Q87t/yWH5GftH2Cnh+OG+mwKWHBRr3H5yILY/1NmQ4HJhQAJs
n4v8oMHEhrZZvL+o/V3fWsoevGTYb2L9k2FX8lceSMf3C3WCzO/3V67Afhnz
0Tv3hoya3NkJ2x/qJ7TrvnGzC4zjyrD+8Vbsyd53hdj+UKdbk6uZ5bmJ2P7A
V3u1HXDpZAEeD9Rvt2tPufdp3s5QP7HZ+W9ns0uQQ50Bt062evcS+e/vmWxW
ujQj4s5EaDfwIpO9tj7R0bwztE+08PP3fu8cSn8628AJ2x/q7BFXDV7zf42d
d1QUTbf1UTArEswZMaCiYs4UIiIqJswJs4gJxYgJMEcwi6iIEVHBgJi1VAyA
iAMiiiA5NNEBW+Iod97XOaefPs+96/v4h7X26rWrek93/2aqq079gJwF1IPT
dtgW9YD9cEX+XuOf/6TX0geZ8HtfQP8OPR1NHSI+4fmCT3LTNdUa9cbnMI5D
/9rQK/y2aQfMH/yFny1zy4yRU+i/5JbnwwLzbMwffA6PizeeFxGGx4POBqyb
uXV1FvYH/M0Ku245USblDP7HGr87MNNO0sEnqm/Ruyd1pfxhvHyWWGPxwCAY
d4Lv/yl8ZGiealEujgOwcE27jTY1sx5xfCTmDz4VnbtdGeAIv98F1Me/nzc5
R7eY3C8p3H5X/wm7G1TF/MH/Q//k7ob1XuP5gs+xV1271PXNx/xBb16aWeIZ
OxzzB39FREjYK+ufmCf4f9ubcsqjIh3zB58OK+LT+lY+wONBH+qy9diA76nk
fkzh3ysCWk/cmoc5g//CJafnFCwsQB3731f/wOdf+Zj/3//J3MU+RXkpuxrm
//f6T+DPhptXVGsM+SjYKU27Jy8n6pzl8zBP8EmwfHOd1VBhDqAb20+Y8DkI
v1fzcI1/Z/sBbYdeKcEcwF8n4vX5QY2C8HzBpzg09tzmN9mYP+gn/N7xhCnz
sV3wP2fwpufGGtL3efCPsrAaNuhqMrYLPh8CPW63XHoFjwd9nntznwT979gf
8D8bdXbB9ogszBn8b4Z/s1qljzmjT8bbrooVzvh5cXj/k/rkh/3UVBXqfzkS
y8e/DY6MvVOK5xuqabdRQeGCXenS8wd8Zjc6VvCtj/Q9EHQeFDp1pR9+r+Pz
Nf6fB3Vp2++ZNA4D/jZ7D/Q3WX2BXG9xfOuLvDOzIjOwP6A3iLJ3zrVbg+2C
/0/7bTeGO0vfJ8E/zCtny1SXOGwXfNpPMOhUc9FR8vyP4yZaTVdb3vmM/QH/
hHrLOxzKSsOcwV/hM6Rdk5m5qINPt6uFCSkHczBn3Fd03dFBzRr/Ql313+fY
R14je7W56WYc92NzNe36xrWb5TRpK+aJ+z8OD39f2x/HVVBvNrlK3wV2Uv6l
Gv8pUc8T35pI4zDgv71HVETVBx54vjgvr83w04f24nMA3xMW5AcaVWvvhu2C
f/F5m4XP/vF9HvxHu4QGbv4Vje2CT/YWy5tDOmzD43F/z6LNQfziR+wP+I+o
8KpjppWCOYO/nWXTZiOxXpC0b+afZgnLOs4WyPUfxiddunRkbMci8rmEcO/j
MXtbHsLfoUzUtNvns9PIGVN3kes/jO9982hjRZiSXP9hPMxsxaCabaX8TTX+
t5r97l18UvoeDv7p+pfc2qa6kOs/jFsft1nevHYyuf7DuMGy5FBd9z3YLvjr
HWBJj6tJ+YP/wMqvmV5X35PrP4zn/goepW/qQK7/ML77kZn3tltvsT/gbznl
fvH6B98xZ/D3n7GuuFWDLHL9h/G7HxUn/apkYs7w3jhi9/uLJ+sVEt2fb74c
ojD4IH3fMNG062KcahJ04SDmiT4b1w8YsErKH/QvLy7dnHNU+r3mpvE/OLLz
/KXTpPzBX3igb/jw2EI8X/DpPunhjEN2Cdgf3KfP4Ogc2zGe2C74F5VY7S1v
gO2if9wLIa48PgTbBZ8f2/6c3WMzHo8HfeIDm1ceei+wP+Df1nx6LVP3b5gz
+HebdHXS2MfpqGMOF95tv+6FzysN17S0MrT7lHw+Kf0u+Pte3Z959NxwoeNG
Kf9Vmnb/+Nge6dUCn5PoE342a87Q4VL+oJ99pLB+ZIm/K/ltjT/nMwNe9JHy
B//4U8PNaxiPJfzV0to5sXrAiXVx2B/QVbsufvI6ewzbBf+RzzIMczfnY57g
n/F4fL1LPZ4S/mppZf/8GLi9XW/CXy2t8fW+Zt7efR/7A/73rmrPSKj9FXMG
/7n3lu0fNzcVdfD5tGZPetmgFJLzI9bu2/aFybOl/P/Odwhhz3t36tZ8jJT/
C/hcvB/FpxScwDzB53KbG+7120n5g+5ocvpU2ro8PH6wxl+34Y/BgXWl/MFf
SMpqfsqlF54v+IS4HObWg79gf0A/6Hul8OqeU9gu+FcbPbWozq5czBP8xfi8
fW7R+HsZfbKcig4c2NAAjwddJ9jb22P8LewP+B/1Nb4d3iIWcwZ/r+7VDPY3
T0YdfG56ZDpE/P5O8g9jfTqt4hlDpPx1NOf39s3uPYHdpfwtNO3OjbkSczTo
NMk/jPG+3Vsu//yD5B/Glof/fme6NgePr67x29Byh/boLdI4APhnVVpHz3Ro
QPIPY4kGF6paunwm+av1X0N8m049g+2C/3S76Rf7uWRjnuBfY75tuyWXbpD8
1T6ucxamWuSby/MPY0naRwyCTl7B/oC/3qE2VVyPxGDO4N+tZqdZV4rjSf5h
LMX5+LluCXHkOv/EjEOiw561lvJf/pfjTLeaURPTmlL+NTX/V03r+vvgrHOY
J/g8r9HlXb9qUv6gOwyuv37QegGPX6nxf2vUeNS5LQWYA/iLlS8dejsVmcP5
gs/OWcs+D60Xg/0BvVWGQ3CHKuexXfCPtQz0Gb8rC/MH/4hT67v+aHEJ2wWf
+lrHcxrHxGD+oEcbBBQG7TyH+YP/p50t7juO+4Q5g3/CEeXL6QbScwl8goWh
AyLbxJLrP46VNVix8Gqs9Lv47/ymBLYx6uVPlx047sdWadq1KL3t/WGVL7n+
41ivjCo7l3zNJ9d/HIsa4HPzlzeOa/Fojf/9vd+mzDbF49G/mdvMyGV1SzB/
8Dk/0K7n7tRocv3HsSwLxWw7iwvYLvh7Tbix+MWzDMwf/BMzNqqW9PMm138c
a24RUM+r5Be5/uNYbLrv0MmVxzB/8K9y1Lo5t4rGnME/ZN9ik7XHYsj1H8c2
rO5mNUGBx2u4lsz2XihvMbKtlP/f8eoU5tm3yP/iNRz3YzGadn2jT74xbX0R
8wSfmK8Tqt9fjuNaqH+1vf7nVkE6Hn9G45/utnSVViCOG6N/wxc1gy/56OH5
gs+i0jMOgdlRhL/JrH7XgiMPsi9iu+C/ZkdE5TQTbBf9rbLLNz6JOkL4m8wa
+jr3H/RID48HvYfifB/HqP3YH/CfnRNaFLswCnMG/5Nan5uHbZZ08KnUberz
Leoj5gzzARd2HqOfZYTjFZp1B+ns57KnA9fvl8Zbzmra7RFwYKPLw0uYJ/gs
/dDXjqXnYA6gV5okec5fk4bHf9T4p6YZeFUxwuPRv3HoFv/JHm3xfMGn4JaL
jl9jKX/QffNv9fHbchnbBf8ePzzr3QhJxTzBf6xQUTCoAn8voE+jjb/zljUx
xuNBP1H7huvaN+7YH/Bf6Gx01O2qAnMG/6tX42drHf6AOvi06PxHe3pYOOaM
daR/pe8eni2NS1TV9Cti9LZtoy3y8HwVmnaPHFgd5jMYx0nQJ6F0vN/p6Tiu
KOm6M4yad8AcuLbGP3nivM6zzgiYA/g3fBgdsWxBDzxf8Okw+rrnuIUK7A/o
L4I6b/Ipu4Ltgv/Hvh/7DjqQgnmC/9UZZvuMBFdsF3waiK08+0/qiceDfmfd
2T+9B23A/oB/fPG1YwVVpfzBP35y6J+S1FDUwafgQb/Zy9a/xZyxbnZb/+Ez
cXxbxfv+9/PKZc3yt4TGpuB7EKajaddmR+/q9W9exTzBJ2Td1cXPvmdhDqA7
rD03Wasq5sD7afxXvPE++bsTHo/+bW0KE4zaDsHzBZ+xtTrcMj2G4wBSPeTz
qR7r5vlhu+D/y//hnasuyZgn+K88dy9lY9Fact9lszbiW+s7vRi5X7LZUp2y
g4tSV2B/wN/sQ+cWVXMiMWfwz3nd2sEv6TXq4FPZrPUZs7evMGeYRzypwHXN
6e7SuNDfz6uAFbmv1fJ2l8Yb+2vanTbG8rBHjWuYJ9bXNZg5JdklE3PAusch
lvuiq2AO3FHjnz/IyMP8UwbmAP5NAq11E7db4/mCT7sBU57wXZHYH9D7VRr9
6ht8DdsF/+9PL9ayMkzCPMHfwXzHtMaNlpH7Lo81irCrN2yMDblf8lhRULLe
i4T52B/wN43/M+BUofScAf8hC2f0eLvmJergs3jZ8WmPR3HCXyXz3XO+wOaT
NC6kef/OJpi+8yvrIuD5LtW06/bosaXeeH/CXyWbvfpeq7IemCfqSw73ftFr
aCIeH6nxLxgeedP6tDQOD/568Rltrk0dj+cLPqX9O5uan/6A/QHd6eCZutWK
/bFd8Pdp0X37q+XfMU/wX/WqT82mvedhu+Cj+3q4p9etCXg86Hmm3UbUGTUV
+wP+hy/yzB2NpPzBv8GG+T1qNXuGOvjYnCz/FlT1MeYM8+L1V/qbluL3ZBV3
+K9PETM41dtwmJCJ5wvt6nnXSzq3+zrmCT5l38PbRFTHPFFPDT/QKzpIel+8
ROMfZVHs+2FzGuYA/g1Vwx5aHJuC5ws+iQYxw5qHRmB/QD/1bGyzWu3x9xT6
z9/R4c7KknjME/xz4qY6XXCYjO2Cj8HuYqs+jtPweNCz3hz9rKNjS3hUxKJb
BK2vmBiBOYN/8f0LXmm9HqIOPtfzHKbEHAnGnHG9oKW9SaKtNC5XRdP+4bdx
dVs+lsbbod3DWxpcs7l5A/MEn4NFXz0mlaRiDqD7XQn7FDcRc9DwXWS6l1fa
Wrjg8ejfbHDKcfOi2eT7z0/m3WLjpaJ6Uv6glxhGnl0y7Ca2C/5LYhc/Mbn5
DfME/4zKgtmH/4zEdrH/yUtqf2s/l3z/+cmUXZrXXDjVAvsD/tmC3+vOOI6q
Qv+Yl7oPVA3uoQ4+i18FTKn4egdzhnUeujb99w3pnIH63++3v1jDb5tHhF1M
x/OFdi3WjdvT+tVNzBN8ts3XGXitipQ/6De77ngf2gxz0PD0F9tW7enaNZ4p
mAP41/cOPu/WZwG530VmPmV6CwuH99gf0LMeJEaa2wUQ7v9iig8ht/N2Su/T
wf/7jjhHs0Bzct+J7JBO+dDFlxfi8VhXLXfW/IXze2J/wD/w+ZPPqlpS/uDf
Rtc7wdn3NurgsyKzyKCrSwDmDOtpqnf0ab+5FY6Xaq63Embu59TX4GIani+0
++L+vAKTsADME3ySOxWPcjXGPFFvPc1xrJE25oD+ARZ+veo8ld4Dgv/RiI7B
g0sc8HzBR2fDnLFdosKxP6B/bLAp38sukNx3JexDbNO2N7d8xTzBP9c136iD
Ww9sF3w8xSn3C686kvulmGXveTLrSaQx9gf84w9Mcf6xBb/Po//+NSvuubvc
QB18WukudTQeeQ1z/vu/lLUoXBKZYiKNS2vmnzOPi2/T8u5L75v6aNq1+DJ8
4JxXgZgn+HQ/NcvYHfeJw/nPzMlzZ6BVTcxBcz2XsvGnjy1zKEvCHMC/wXcX
K+0+0vc98Fnb2ar5vJFS/uhfPHzs2uG3sF3wP7uhXmMTzy+YJ/hnjzuetb2j
MbYLPkevnWuQ1taJ8LeUCfX7Jn1m0ngg+G8rb1BWpArDnMG/fc+TG0f6XUUd
fZJG9RlSeglzhvVhHUL8Dhrb4Hi1hr/l7Lrh1EUpSTgPh0G7STHDXgUG3sI8
weer++Jr32wwT9RnXbMzG98Bc9Bcz+WsQZWiVlt8EjEH8K9z7/eqwc6r8XzB
536dw1nFH8KwP6BP3JwUldjwNrYL/q3bG36IfBiLeYJ/1vlFY3PTDAl/y1jt
y09PbtvtTPhbps7t+E+9OdrkfixnOqPP9rHbK+UP/q3O3xseceki6uDzssI3
SjHfF3OGdXgr+toPubFJei9QBT63li+Pjm4u5Q/tzmp90m3TCGn+FfjYFCx5
bP/nO+YAes4l44zf0zEHDb9UbMrh2++mL8Dj0b/uA2fvBVvX4vmCDyvxz5o0
W8of67FkqdxMdkj5g79V+zwrn+LPmCf4C3NmD989VBvbBZ9R9T2q5N9cR/hb
wXKZwq5xkRLHA8G/g/kbHd+WUv7gfzu8d4OeZ31QBx+rqo/dfsd4Y86w3nHr
3UUtI5/j+wINf3+zNj1eubs7SO9boV2tk6qBWnel/MEnas/yQxFRCZgD6O3n
r2yy3xdz0PDrNwuO9BCdrPB49P+wXWvLjvvS733weZr0yqN9cSj2B/Q96Wu7
/s6R8gf/yOzeh+tYS/mDfy4f6FNWCnkK6FM3wrO6UeVGcr+oWEqldufpdt8w
f/B3PZI2wP+JNM4A/q+aTLzFGpwm94WKxY4Z294g9wTmDOtKYye0OCQYJJP7
opKZls53i96VhOcL7Z5fZb/FpvEdzBN8GuaONnzP4zEH0Fe8eNPkXEkMuV8q
2S6H2J8nzPF49Pdof//M8Cabyf3+hy3f7PjW5pSUP+gl92+3eTLmDrYL/hb8
ybyCy9gu+qdWHtO3fhaP+YNPRPOElKANW8j98of9qAzKGTfuNeYP/oEHht50
nCflD/73rsfv6+x2nNwXf9iImyOyHRKOYM5//2tZ3D68clV8TiKeVx+Nf2/P
QV1ubpByhuMLdLTKFr75hucL+psbkXH9Z8dgnuDz0XDLyP3ntmGecLx/9+2l
YUzKE/S1yl6Oj25gu+ijqtz1NbzZR8wNjvczdjwQUtMNjwe9rpbX9cDwV+aQ
A/hk1lYseP7gMOYDxxcF+Q1U1Dykma9fySGnfeXToweVGFos/psj6otDLAft
UOuwXhf0Jq0fhoWodXm9AhXfer7W7jqlhn9fk2G9AhU38GXVjpaCfznqwzzf
V48sBf8y1Men1TzTsAz8S1E/W+99/hhcZyrpYX29zx4vg3ZLUC/3Gxr2rgza
LUa9uNPEo3XLDS1O//0+h/qZFVa7+6v1iL/fp1Gf0fVsvEs5+P9Evarnok5f
ysG/CPXZzjcv5JTDeRWiHtFg5ZMWFXBeStRjBVtlc1xHJun1HhQMZRXgX4D6
uOWNg40qoJ95qN/Q29K7m1qH+eWg+81ICcxS90deb0HF/xy8PTEK+5+Julmd
wYk6mEM66ieen+jbvQz801BvuG/S/WOlkGcK6kt2V+wahuu5klEv6/miZ7di
8E9AvWik1qPOIvQzDvVd19eumVlkaAHz9kDfMCw4b+wPQwt5PQcVf9opYPO8
PPAJQ/2ae4hTyzQ4PgR164tWozsnGFrI6zyo+39t6B8eA7q/lGeVNjtMw+G8
4E/FvwQc0J/2HPUXeF4bx6aWqc8X5p2Azl4Ov2MYCPoj1N3XtfqsfcbQAuZJ
gL5TJ/mCnzscj98LuK1/0+vu8w0t4L0+6LCOWF5fQsW9Zsw9ea+6oQW8hwa9
/iJbleNbA9xvHvSBKQ1tXjkZWMB7U9CHnGg3Y3JNmFcv8U33cGJ4+QZ9C3jP
B/qbqud6X4jRw/1xQW86tbBt3aT6FvBeCnSrvS3061TUw303QW/Q0SsjcFMd
C3n9ChWPmeGwYLNldQsY3wf9wqWPs2MeaVvI61qo+MrX8zOnL61iAePRoKeM
78LmPJX2HwLdpVe/qTWfVDAYPwU90WXcljnVpf1RQK9+28txwLgSBuN9+Plu
XV5wO+gXqY+h4jWbtugYz/9TP/4/fyLqsJ5aXjdDxY9b69/Rt/7JYDwF9KWX
RNfwh0WkDq3aP/Os1ZpFRQx+34I+w/OgnrMu9K8U9SL/VVNrfStk8HsV9L22
Oop2F/9ZT/Ovnqo77XKwayGD31egn75UcX7+jH/W6furB1s2bZJvKdX5Av3k
7X6qx00KGXxPBX1oykWnLdX/WT9Ik/9RG6fH5VAfsBL1NhnfWh3K/0e9Eo3+
/sDNrbUylFhP4a8u8jbdh30pSaAcFPm3hX10ExPg+fYb9Z2+W03qfKccFLnx
HrOuZQmUgyI/0GGhb6fvlIMiT7FwfrHyO+WgyOuM2OO07js8J0tRv2KwLz38
O+Wguj8xVVPTvsPzuQT1ReVXeo9JpBwU+ajdtg+3JsJz8hfqW1cfKPuTSDmo
7qcwbOmYJEMLWJ8JOqwzlfNR5NnTei6ak0z5KPLXjwcFt0qhfBR57VGXB79K
gXaVqNstWWd1LZXyUeTdNkXc2a1+nsN6Lfy8JkX38EqnfBT5uM0TJvEMQwtY
XwT6E8te8yozKR9FfvDMsf6uAuWjyB89TrkQm2toAes0QLeu/dzQIZ/yUeT7
e1c1eP8D/FNQn7VPv+bcQspHkc9u5h9speYgzIPH3CId2p74Rfko8nemK1un
qvkL87ZBH6il6mFTRvko8s5j3v74z3p5mGcMOqy3lXNT5Bentowcpj4e5sWC
Ht7arN0GkXJT5J+33/CKVp8vzOMEfdd8IeJlHOWm+H9wU+R98vJsPqnvI5iP
CPoS657zEndQboo8/3DPefaGhhYwfw70s1PPVzZyMSDcFPn7/s7GKjWPYF4R
6Ama9b9ybor8es7IOf0NalrA/CTQN207Yb3OTJtwU+SeFTs7tp1YyWA+Deg6
jl4FviXw/JXeW6Y/LLT82LeYwfwP0B/OdBn3dthPJuemyPuz4317vCxiMF8B
9EN3e1X7evcf+3Br9LYJC0N6uxWSuk8i72fsFzOrTMngvS/oxc5OR+e+VpJ6
UCIfM6h40uQHSgbvKUFvtd1u3H1vuh+hyD8ZDepf55gS39+Abjx+X1iX7UrC
TZG371ZHZ+1WJb5vAJ3V3XY33VlJuCnyjp3fW4tOShwfBx3WQcu5KXLf7U96
THBQ4ngu6N+d3nYOm68k3BT5r7eJfaPnKQk3Ra53NXjUV/t/1JHX6AGru/Xa
bK/E8TLUSyz7np6lJNwU+eNgsfzuLCWO74A+12t3kc9MJeGm+rmt/+dr41lK
wk2Rr1zkVcVxlhJ/J4P+dX/NTKdZSsJNkRdYbjXdNJtyU+R+3zZfzppNuSny
EY6+c0znUG4KXLenh8WAgQaEmwI3Wtuid7f2BoSbAh94a6jt1WYGhJsCzz43
49a0qgaEmwJ3S0t8qorTJ9wU+PtXV+y7R+gTbgq8wPttSuB1fcJNgfcyulz3
jDesQ5T0ylBFF3dnfcJNgb+LqpjpPkefcFPgozdeehzaTZ9wU+BFSdO8Cxvr
E24K3K5RWNW38XqEmwIfpVkfKuemwOem9u5pvFaPcFPgJYvOHEwer0e4KfAu
hbfKtyXXJ9wU+LreO131dkFdL0n3n7G656P9uoSbAt9WK+v0y/q6hJsCnzL6
WtL68LqEmwKv9vX0/Yst6xJuCtxkSkJeqWttwk2BN776c/G4UzUINwV+f5Yi
6H7t6oSbAl+/T7FmWSsdwk2B78k9tHPl7Sqa80pG3feicnqLflqEm+rrJJyV
J34rI/UABZ7rN+2X+dBSJuemwKd+3b6nVXkRqRMo8MtRLtWqTS9icm4KuE5W
zk2B/9h+rWcNSyWTc1PgJ1spt1kX5ZO6ggJv1FD1pWhOFpNzU+D7RuWvSz0D
vIE/gUO9QY3wAvReNcdMPTTMgHBT4NuNji061fU2qU8o8GL3jJ35tV2YnJsC
v/dz79Hnk9eRuoX/Gf9ed2ereUsG86RBD9es25VzU+D714VEP5qzmsm5KXAf
18KLcfNOkTqHAs8vDVydbuFNuClw50TRz10XxoGl92CC+bej4cV3CTcF3qrV
p8vTjF4Qbgo8z3JllYcDQgg31feX/s+j2VnhhJsC7//+mUn75x8JNwW+ILJr
qqEylnBT4OXC4Cm/z38j3BT42Cct8pR9Egk3BR4/wbW+w2Np/2DQv7y46jn8
ZCrhpvpzX7v07cbCNMJNgS/U7tIo7FEG4abAza3LA3d/zCTcFPjLwMRaRo4C
4abAV2rWL8u5qf5cOgbtLDmdQ7ip/ty/Z+uU9s8l3BS4zRY2pv34PMJNgS+t
3tEk5NU/9mXR6H71lgT/8con3BR4a203I/vsfMJNgbf4Xd784+4Cwk2Bux5Z
Xpb5rIBwU+Cdfe3Od+r6g3BTnT/rYTHN5wfhpsBdTONWzH3wg3BT4E3epi3M
yv5BuKnm2pMfWlUrYJ4zcFOdp2fO3Xq6lJsK3mWU0n9+klQHEPRirwdGQ/1E
JuemgpdP6HPOtr1I6sQquMKsxC6p8CepE6vgowTzTftsf2LdLtCdP840UqYU
kfqxCj4v4kZ284dFWGcK9NhOAaMazcDxAdRtHtZKr9KniMm5qeD7p7vNv5xW
SOrNKvjS47qnuoUUMjk3FXyKxakWnbYVkjq0Cr73+2C71vMLmZybClzXKeem
gi/oOqIoU68Q66SAvmnobhvrVPyeifrHmXfrD41UYl0P0FcfadKimz9+j0Xd
rl0/F38vJZNzU8HTJvrtStisxDoUoN+rlTLUfqWSybmp4NqzK8t3TVMyOTcV
nLWsiJ1hqyT1bxX88pI13nomSibnpoKbLSlu36SBktTFVfDBl2ttKVJft3Ju
qj+v/cvTDvaC6zNZuh6u9Ftv1rCAybmp4Ftfd2syYmce4aaCp5o8+aHvlEO4
qeCBAQv2G7tmEW4qePDZqk5RvumEmwpupVnfKuemgu/q3qjrrbR4wk0F7+v1
JqTf8s+Em+rrdl9EvbQuCsJN9fFuzyr/rHhHuKn4P7ip4N+H33ZZtewXk3NT
wXO66Gy6W+U+4ab6+kkzGl+jxJ9wU8Gvu89NTbO8QLip4Ik7psXVXHiYcFPB
G2nW28q5qb5urVySam5cRrip4Ove7p2feGg+4aaClza3qlfk2ptwU/08eefe
sfk1qHuP73t5eaXNkWZdv5jLuangdU3uOBy/Yky4qeB1+gd0flSnPeGmgte3
+r60XupUwk318X/at7o0wJ5wU/25q2q9KWjkTripvj4nLyje/uMo4aaCXzlw
vE0d7kW4qeCrQq9dKrwF89Kl+kkZ2Xfftbx2g3BTwZPOKlc5ldwj3FRw0WJd
+8Bajwk3Fby7WZArS3lJuKngs+r0szK88oZwU8FtNeuO5dxUcFfF450npigI
NxX8oc5Qw/3PPxFuKnjTuPpzj0TGEm4qeLO2TQMq5sJ7yVLpervKlvSM+k64
qeB6nb4z5ZVkwk0F/xRz9cYap1TCTfX9axX+86J2OuGmgj94uXrB2mcZhJsK
Xmky6PyMCwLhpoLfN4/ztr+TTbip4N4HLLu7/skh3FTwoyerzR6A9Z2Am+r+
80ynsZF5lJtMmLJpkbW5knKTXT60ZX7lQHiuIjdZgW7VQ7v6KSk3mcFqvfGO
vZSUm2zE5p4DBnZWUm6ydmtq1c5vr6TcZGNPhsTYtVJSbrI9w6wORTfB8QHU
p0Y9GxlXT0m5ya42+HnmdzUl5SZr0vlV2we5Pyg32Uo+IXjMpx+Um+xD4BqH
Z5d+YL020GE9JuEmu+2ZuSWz7w/KTXbGYtjv7iUFlJssZnGbftWOF1BusslX
jp8p7Q73p6TrH3NaYnM1H+s3gZ7RzreyvV4+5SbbaeQe5TM1D+sNge7zblDY
ye25lJtMb4vB5k4ncig32ev95a/MJ0t1Z0AfNSy7BvuZSbnJUg+cj1x8LgPr
jIA+fv+rwGdV4HmH3GTOYwrrFe5KxboY+PkuSc0dHJpMucme+w45VLw6Ees4
gP5kkW/aUeU3yk3W4lDciQ1fv2DdAdDratalEm4yq9SelnUDo3CdPOhjHq2b
qQj4QLnJJrTYbxvgE4rrukFvPiFiZ6S+tN8r6Gvl3LQAXXVP6fbpHeSDPGVD
rJL3XBmqxHXLoCfkegXldXpEecpyQ6fe8U++i+ts8bzeVq098/1NylM2NetW
ikO1y0w+fqv+vDTrZwlPWbe61kdXjTmK6xhBjzSNPf/+1j7KUzbYr/OthJ+b
cN0d6KsOVh9v1gTm0Unzp0qVAWGFX2biOjHQ81Y6a1efbEd5ypQP2u2/5GWK
65pAz6xfds7peTvKU5Zf+fpgyt4oc8JT1lZrxLGtmQXmsD4E9Ca2o6/39OxF
ecr03I5YeKQOwPUMoBvZV7OYZwzz0qV1ybXfH6t+xnkh5Sn7Gu7qGNB2E+Up
qz45uOnBmtspT1lk+rpugtMRylO2O2vimlsjT1GesgzNOmLCU+Zz+tmEPveu
UZ6y8Kweg0u636U8ZcKVM7bvou7j/FHQYz91VBTowvUs1QEqa/4puVnpK8pT
Nnj7pWeJo0MpT1nC7yM96v+KoDxlvsz1tegXRXnKdObG3Gt3OIbylPlWVGn7
dXk85Sm7++V7ublOEuUpWzpt1aZc2xSc9wP6lUkP7tlUSaPjtGzr9IlDRhvk
E24KzL71/ITs1DzCTYGVXt3o/ulOHuGmwBqfP5V3ZlMe4abA0jcWJ+lo5RFu
Cuynabt1sY9zCTcFltXs6ZEOq3IJNwXWdo2P+4hWcB1LumGd1A0P3+UQbgqs
PCLLvadDDuGmwEznnkkeop1DuCkwzxrPCusczSbcFFiQMCrBtHU24aa0jlLO
TYHl77rZo3MTgXBTYM99PoXXcssi3BTYxfcHrs3OzSTcFNjoY2+0nw2B+1zS
9TYOnJR0MoNwU2BftJr6Tv+UTrgpsCp7B6cMaJZOuCmwx/tc7+4Zmka4KbCK
eSldS9anEm4KzMao0ch2d5IJNwU2bIBLFevlSYSbAkszXl174fnvhJsCy+jr
/OzVCZh/iOO0rMmV1u/bPYoj3BSYx73A6sn+X+g4LevWz3Ruduhnwk2BGRQF
6Ji9/kTHadmI5razm+ZFEW4K7KtmPSkZp2W1HFMNT++IINwUWMc9lanHa4bR
cVq24PXlNXs+viHcFJjyyeOZ+3D9I/wJ7Pb/yk3159vLzGJOIszbx/Fbludh
stFrUD7hpsCmnLZdcC76MR2/ZW53j+X+qHafcFNgCdGxJbsN7tLxW9bk0/q5
3dbfJNwUWH/Nulcyfsv6uZ28lpHuS7gpsHsTn0WHqU7T8Vv28VEdZqI8Qrgp
sLuLMqpqr4d17tK6EPOcTnOrj3Uj3BTYqls7Ho1PW0/Hb5lKPzF2xEoHwk31
82d63LKU7nPo+C0rfzmic+9t1nT8lhV7Tq9WvZsBk3NTYEmuwXU81tam47cs
q/Kjnpb+CXM5NwXWzk3oXsShrohUb6a+VrfVC6oWmpPxW9Yg5nprhzVmdPyW
1TXr7xzg2o+O37JmubenTTw2lY7fst1NFcaFvefR8Vt2VLP+l4zfMptcs14/
jmyl47fs3sOdBW9qHKTjt0zHIyBKqX2McFNgxlcuFryuC/VApH1OdG6Yanex
u0zHb1mpf/oEa+1AOn7LptZvNmhLrSA6fstMWeMZma0e0/Fb5mXnaZvQ8gUd
v2WL3N7d4K3C6Pgt06tI8DxV/SMdv2VHJtavc2BwNOGmOk/rXrm/Lnym84LY
8pcdPcy8Mgk3RebUNm3n9CWZhJsiS55Q+SKheybhpsjsoi52VJRlEG6K7OCj
n/tGb80g3BTZqcPPHj/ok0G4KbJl7PfeQ4XphJsii9B1Obb8AtwPkt7u4KtN
kyenE26K7LzzZsfKijTCTZGZ5QxeudwvjXBTZJGGRmnWVmmEmyI7N0VZ835m
KuGmtP5Rzk2RrfiTx60NUgk3RVbYZUStTt4phJsi88pamO3aKYVwU2QTJixO
OId1JiW9d2Cryz1Mkwk3RbZ1a1cD1yFJhJsiC9r+1G1Hn0TCTZH5L/h97n71
74SbIovWb2F7Iy+ecFNkbi/NJpa4xxFuimxu11lLDXt9JdwU2ecXLUvOVsQS
bopMmdJgTvpFWNeA84KYaufAMY3nxxBuiqzWTF3DsdU+EW6KLCTJMKjTiyjC
TZEpToU5dlqsINxU51av1smxwyOZUj4viKVr1oGSeUHMd1Fop/TuYYSbInMv
X+LkFUz3TRPZ/W5rVk+zf024KbKGM6pYzGlCuSmyNkX/GzdFdkC3Za2ZT2Gd
Gs4XYm1nqd41C88k3BTZmcGOMStjnhBuikznc//pTcUHhJsiOztJdWTLznuE
m+r7tO8d73Wmdwg3RdZDs16VzBdiD+xH9X062I9wU2SpqdZJ0cqLhJsi87x7
a7M46Bzhpsge6ipG2hhC/TGp3sMcrVFDDZ4cJtwU2fF24wd7LN5H5wsx1zem
Fq6xboSbIrurG6p33H4jnS/EthZ2P9ql+XI6X4j9zly0tpP9BMJNkeXU7//8
0jJrOl+IlSYdP9B7nAn5vSmy+PPPwm02tYb7V/Kp/Li24+JEwk31dVjZPWjD
wm/mZL4Qa6PVpqXRl9PmZL4QM3qxr4qbR206X4jVNluUnbffgM4XYsY7/67b
JfOFWE1Vi7P9+42g84XY4VHle04vnkfnC7HdV3a1PeftSLipvt/fGk7e1h/W
3eC8IPZ6tMGcju130PlC7GwzS59Z8YfpfCG282Hi4kJ+ks4XYktDZls9fXOB
zhdiFYu0RK8OfnS+EAus2nHx8KrBdL4Qmxt95UXM2Kd0vhC7+yNZfL/kJeGm
yO4ldShrNOIt4aaKbczQDZj8KoVwU8UqPm7o9cQnhXBTxcYvyL8dsyaFcFPF
9Be+id89OoVwU8Xidv7ZVpSfTLipYknaZh5VHyYTbqqY5Sr+dviuZMJNFcvb
65ZvOVLa5xr0U5+K/N/rJRNuqliRKmf6o7NJhJsq5ld6/O6d1kmEmyqmm1Pv
18xDiYSbKpa44pX9Ne1Ewk1p3aKcmyo2pKZh9nb1c0HOTRU749asMLNlAuGm
ig33ned4ziWecFPFbL9+bXjuqbS/NugGEc/cQ2t/I9xUsUnfimr7sDjCTRXz
r5i/YqXbV8JNFbsR16z4sd8Xwk0V2/C+uP7T+FjCTRU7OfBM/vtWnwk3VSxa
1+X6r24xhJsqtqnWeZ+Ptp8IN1Ws/GtwyqlJdD9QFUto/+VNz6VRhJsqdv9o
1yW+y+k+oSrWuvrO3/PKIgk31f1M9tMWyyMIN9XnO+BlZkCj94SbKtZWs36T
rENhY8/d8IwY/I5wU8XsreJNntm9IdxU97Pa16BO20IIN1Ws57k6DfsHQB0Y
+FP9H9xUMddi/fqzOzwh3FSxrJfLl1sLKYSbKnZYZ/mSdLenhJsqNrck9EOD
oY8IN1Xs4ES/6j+G3CfcVDGLrTdqvB8TRLipYmUn/q4zJetTmPLcwTHBFjcJ
N1XM2eviA49cP8JNFes/oezsTO9LhJsq9vT5MefQbrAeWaqXmbT3UmOLNacJ
N1Vs34u9m2fPO064qc7Nfk2PJXYehJsqVrynfUytRXsIN9XH32p/91JjN8JN
FdtaennEobLlhJvq8xqU7ZXReSHhpor9th6RH91rEuGmimXPfuRTMmsU4ab6
uTqOj7XP6EHGaVUss/ubL5OcO9D1KeyX662dzleKCTfVz0PXJQM2Vleak/Up
rLTS1SnXdqO5nJsq1vDF3/W2ZH0Kq/ci5c7clSXmcm6q74u5E1UzvpjS9Sms
xpbiUP3pfQk3VcxwUeOn25ZPJNxUseoXptoULZtNuKlikSMdNvVNWUXXp7DX
L+8O3jVtI+Gmit1q1GfGmW276foUtrMo3aR3pQddn8I25YaHDvT1JdxUsboH
nJxWH75G16ewmZNTL2/YfYtwU8WC3zTJaxsSzKAenEbn+Zr9GXGdvEaHfQ9h
f46/uoj7cOnIfEQ+SrPPVFWZj0j3b9L4CLgfitxf4ImafUa0Zf4CH6DZR0Pu
L/Dj8v0pND4KXlNT713ur8A66nJ/Bdc1+FsnXO6v4IGa+tt/5wVJ722hnu1v
uT/WiZXno2C6Wq/+WweV+LNsTX1Rub/APmjq9cn9BRapqYMn9xdY0oi/dd5I
PqxcUz9N7i/VI1LJP1+2WFPnh3y+rPD03zo25PNlZpr6MHJ/qd6C3F/Fhmnq
GMj9VeyuZp2+3F/9vUW2/v3f6w215D5cKdtvVFq/FiLbJ/Tf17nmeLzOyX52
/7r+Nf1BXb5/nLS+I022v5t0v4yW7cv273UE8n7+v+8jef+l+d7y/gs8SbaP
jwL11rL9d6R5tvL9caT7sadsXxtp3uZy2X40///3qbz/Cj5Vvp/Cv+5fef8V
fKRs/wJpvlMX2f4C0v2eJ9sXQJo/Yymr5y89B27I6/D/6zlA+s82yutRoz5T
Vkca+88MZPWfpffLy2T1maXnSY6srrL0vjJaVg9Zes4ky+sY/+s5I++/wFLk
9TxRV8jqcOL1wxJk9TOlcX5rWX1L6XlVQ1aXUho3XiurJyk9xwrkdSDxeXVE
VldNGiesL6+HhvpSWR0zvH9Zjqz+mDTewmT1waTnYQ1ZXS/p93uqrB6X9Jw0
ltfR+tdzUt5/FZsmryeD+nBZHRjcP5p1lNVvkb73yuurSM/bUFldFOl7lLye
ifQcfqt5Dv8PBP7SzQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
vEf+Plfy/OGXuDGu407/oWOg69CfjCnfJg5uyO2vVOcfSbNm/QJd4+e0bVva
99m44bfwNP2JnbjPBHfoKeQxKXmQF3IU80zhfcZJ6vFy6gL9LJB6vxS/30vW
a36P/euadacptf90GupMWf4peUxjDGpL+QjDPO+3xCUddLNXkx95fVdz3B+C
S6HXn2uWhyxEvcNcQvgW9VFVsrUieFt+70BH7XZjbWeU4JY2r93cHPtyhd0W
FT4xbh1+JyX8TXF7KRj7CYJ7BGMEZwkeETwq+By5Wdhv2cJu+F0a93uF1xL+
IuEfE6xaOMyGwksLbpB5QeHr4UPBSMEZgtGCu4PPTN6jg9+J31uCu+JGGd5t
c3qkcWzCv52wtwleE9yaMM8n3JD44X6j4Php6ox567jj9qLgYsF4wcOCy1In
6na54Io2r7F9LHhQME5wQfCDifOQ4CLBSoXd1sta07j4PSAY2+Y1FcJgXqHw
2tx1bW6nM9Im1O+5uI2M21lpD8JeKzgqbvjtJhiWPO4P3Cc4t819dU7sqym/
x4WXFB7e5vWyJ9q8XvZE7O8lDuFZS7qyzXGISxjW2SamPa5Im32aNiDf9xOX
snwQN8znpf60x4VpE+JMjZm+OkVwu2CXtMXpgl6FaaFPYb872rwOxbyN+Rpy
mrlV77hdzfqO8IiGx37kADrDysHIBnQB/FZIPOZcfagraw3US3j3huc2e7A2
KdhT5qvADc+r9mp4Dtgl5SB8X8qdcQD6gs4uarg+Fwo3CpeDseZk8flc8EnL
7chc7rA2y1L0QsbGUaynCd/c8Hxr7TbPFS+RfVfhixuev63X5vncbbIfKHyr
8ElKtwv817If8znkLuPGyW0eS5qF683c9lrFmV14pMLPJLyF3IvCYyhjGeMa
bvAy49+MhcffmQuP0cizQzMmbyY4ss3j2MA2j22bCAbFbb+Gxx3Gu+PSTvDi
Nm2WX/DoqYI709/Hx+2m2KGDoW3m/7tCJ2/EjzjTF54TM1c9XHhDwUaCI4Ip
z3EZp4+nrRoel09uOC7hZxAe1PCYPzh6BP1KeWeR37bCrchbyr1tyrh17Izp
jDWM44dFRzm8Yb6lfTYXHB1Mex4ZHeWohnmBOk5Of7NWwFgLT9Dv8PzChfm/
u3BNfXZ5XfMR4YsEF8v8lPDmbNKoDfoL/yS3hWX+Q/gy2f+oSpcT/ln2xeX+
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
zAPd0g+1uOHXnnpTf+Qksm2R5EmYnmnLbdOewDZxXyhxNg3GDq9sFvsiCU/Y
etIrYke+ML9hXnSHYKjg1Njpr+/iv2bcoKeVQ18rBu8yjR16WVr1X154QeFd
40ec3YJXqZhPCL+zYK3Q3f4V98sm6Zs540feq9Zdvw3rDruO4IDUsaPexBuU
uKTfOXkwLiCbW0lvv6QJ7CtYI+5zpRyUceaUs1fd/n1SJ+ihV+KukTZZJnls
LxgQM+PDcnWnsajwDnHrFTxdzMsHT59yD6yY/jZN3Y4UHBXz5rSl0tqgYnpe
KXS2Xt10Bt1jhwcOqVh2YIYmN4j94IplR7f44dYpZVo2bc44M1f8iXdo3OdK
Oy1Vd52XEV5NsGXF/LtO2g/ZsGLd8mIt4YMqNpMvY3r/ivkbM/xN/GGSub0V
dnzLcUkLGXKD8LGC4yrmjcUSn/ZYJG1CvXuk3fomn3mT5zyxH562IewRwf3S
5uAF0pf0KXR/u+CUivnhxqb79Sbh04TvrJhHBqW/SGOi/DZReSe03G6Hpg9e
l/vWcn+c8w+sC8nt1eZ/5Tg8uF/SgoYHJ+1XmIMLv8xaE2+VsrbSctr0y2GC
9xjrhaewz9m0Tv0Oe7ys6cj8ovD6dYeFTlj/2qfi9TBkCzIAObJtMHLiGsU5
Ufhq4ZGCNZknK9/rZD5J7tc2HZ9zN4wVyKXtkgaylLa5NW22feiKNhwifENk
LXy0fOgO3hgQ3Ct+B6XfoNf9Q1fw+5OsMwhPEv678JydedaGTc/9Noo78zjm
k+gYL0d/IAzzukOj+zB3ZJ7Tr+n54sZNz8eZ+6JzsN54VPSA85vWIc6LvvRs
9KjfCutFrE+OzLiADsS8+5ay9Rv0k05qw4db1rtei67yNHqY6vIU6bHmKPMz
TfMYdUZOPUHfCz/etB15tWZo6+DQ+/lKt7/Sn8g7qNytDt9RR/Qi5sCMLeic
6NzoKszRkI/z1S17Zks82hje+1D5XSv8gfAadffZ8sJj0ZNkfqDp81i9QwfQ
zLahjXuEzxKcLRjRNF1BSycL31IxDQGjKqYzaGz70MYWdcfboG7af6xiOqZ9
KN9zwveyBiHzfaStcJfKvFvdNH9I+OXRit2Je7PghOR1k+D42JGryI+jBWME
Z6bcdzc9bo0W3qxunl9X+M6mx7q7QsvIh9sEZyTuaMHpsd8t2LTucJtTRsU5
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
8dhTW11wWd34ksiiHcKPvJF+o9yea3mdgb2WNVIHyjhd6sEcHRn3VPRH9gtY
U2K++XXWRZljfpv5Onomb2kPTHuxZsoeGWs5P2bddFDcyZO5OftwvHuPbOX9
9kvrljnsAfEWPnMX4q2dsMzhZ41MRE4iM3eOnPw2+VMO+gD5Cd8iS3nr/ZmW
dWbCMJecGH5lvseeL3Z4kbHlpvDWKmkD9q/Q99H7f0odN0594LXXwm+U9+q4
Dw6m/Ogq6HfoKz0zN1iqZR1hYMIx57om8YaH1gaGBujH7i3rL+gxrP1hRs9H
Pzu4br7gr4SlW9bZO7WsE6HDob8dlDKgV95Wdzx0/tsyf2C+w7v9hONNfvr9
+/T9zXXrUdANe5esDbCHiBxlbGes3DR1oPyMd/AQcn7/utvu6Lp1MvQsdGX6
aUTS7x26Zi2At/2R088KL9xyvzOfYt+KNZqngn+ImbLtW/1PP6Sc6H3od7h3
6Kr7JV90bHREysI8iDlax9wNOmP+xTobZ7ZYg7o36+H85bpd1mCXrnmOz1wc
/YU74Nz75u0FdB7m8Pj/Eoyd+9fcjeYO5otVzyuZz/waf+zcc+TuN3dscbsh
7tzb5d4Xd+qZqzBH4Y+Nr3L/h/u8uDG3+bNqPe3V2F9JeHRb8v0tafL/BeXn
7fqO+Q/hNlfd+guOrvmfCubMzI+5f829U95AIG3W5P+q+p1A3gTkbbG/kj95
8sYgb5nxPvxWatNFsl60ETJI5g1bfjuU9zB5l287+oC16Jb/4KCs/BOxQcv/
evCfCG908x4fb3Ky9sDawviU5TVosuq1Kf4i4V8S5qWsU/FPCW8z8pYcb4x/
wLpQ1X98fFx3PP7+ICxrMO01tw1993PVd1e5k8ndc+7ScqeWu6LsJ7C2wvrL
08HwMO9FcNed91vwvzp+4/JWyINpq1fST/xD8mPSAH5IeP4VmZQ8eBODdyy4
v/934lHn96qeczCHeKPu+cNHdb8HwnsEvNXDPyS4s+YCvj9m3vnhjSL2uHkb
hHc0uGPLfyikzV8A/HvAel255nfAxmW9+rnMf56v+80H7pPzXgoyZ2LVcmdE
yk64N2nrqtdtrk2dqSvhkU/M3bjnzt2zl3PfnHvj3KslL/yZa8zT9NtUvIV1
RfIhv1sLr9nyNhfvFPFOCm+c8f4P7/7w5gnzbuaLEwSnt/yeGm9k8bYP7+jw
3ghv7/BWCG9a8WbUaznLwduqvKnKO/AjC+t4vPnGv+2N7MlyloyzUluFvn4L
z3FODB2Oc5bntXx2ivNUnJViz5VzpWswT1Abr97yeT/OR7J3v1Hd50U5F91o
eE1ypoZly8+hUdZNp4YfeOuPt/x4M4o3Bnnf7aTQ4fehqe8K75/ynsC7rKmm
H5+PPCJt1tt/jNzmzB7npNgjvr/pc2GcD+zT8t84LwqvU/e5U85Rn9jy/07X
tByes36PtVx3ztk9Kjyk4T+OrmV8q/t8KeeN2wqfueI/O87Wcn6W/Q72Bb8U
dMmeGDJqsWDsx9R8lpvzr9xB+DF89HTq/VTsqyi/udg/avnMOedxuS+wePbZ
SAva/Ck8yZ7p/+S2astrk/z98VnwTDWbgRlrbv/dW96HYz38j8hUZCLzbdbJ
azW/R8o7o7yXyPo5e4m7tPynBu+x8jYy4ao1z4d3bPkPpVdafoOO98J495I/
hn5k3avlfwp465f3Wnm7mPeM+fNvz5b3Ivdo+d1j3h7mreaXGn6f/2Xhz6Ct
muUGfzHwvi1vSeNWr1nGfNvwe/Gc70IWICNZl91Z6S7BGIleI5hP5nWFZ6m5
v76q+o+kKaxhtPxWJO/e8WYdb3j++7Zn4bAde7+8qchbdbwbCV0/HNrm75V/
6aDutkTuUT7Wf76OLPkmsuTb0PIL4cOrC59h4L1N3qXkDUf+elhd8WcXzJHy
TkiZkQ+8GXZXy/Ll8eSB/OENsLtblre0DeszUyKLKQ//JV2rYWcX9oRbLtOy
6J8157eGYLmG/wFetuG2Is9ZcW+57L3YH1G6Xalf3enMhv7RMt/B+6snDGWn
faHTtWum7yta/odqsvAx0DpjevqlS+q6Zs3pzylYK5i40C97wtDlSi3zDfwC
78AT8MJiDf+jvCjn/hr+/7hXw/RfD73xX9aBgnUY7wUbCOZnLK+ZTjaI+2Ex
byJYSLBp4hyQ+izS8L/NCwuv3vA/830afht/35yTXCtlJ/z+qQ/mbsmvr2C9
4IOnsc/L3ljCUIZD4rd+ykAatCv/gK0bN/4CI265YTnAfhOygHOb/AtwXcN0
2zk61PopB3VG/2Hs7ye8sewLCBZM3RdM/TlneFDe5++bMnaLbELmIavQl+BD
zgzwzxo8yH9kjCPI7zXDj4xDfVvWo5BD6F38lUY/8K9Vj5ShX816FvaN0k8b
pMzzpAzUeZ2W+Qke598x/pDlrzH0xqNq/ucMmVCLTOMPBf44uEx4UMvnEAa2
vE/HHv5g4c+Zo8r8ad37hOgJ2NnXwd4p7YuMRdbyh9qv6CiMky3v37O3iJys
RhbR9p9GLkPHnKmgjfjTjfrwj9uitf/GEP6wo+35/2nTlnXCzaK3UqeFQwPr
hB5wJz71Rr9FHqK7bh73/gmzeeLzBxx0zR95yHT2EViXxEyZsSNP0T879rre
msYNTB70+ZvxQ7+9I/6Y0XPZa7k9dsz8XUXa/H8HHw0Iz7JfPGP6gn7g3AR9
w3kPzljghgxBViA3+NsOGcL/bvRHq+b9PHRLdEns+7V81mXflvt6pvQvPMs5
kDUaLhflRddm7R0+YY5BX3dKmui27OGgg3ZVnP6KOyd7/ZyNkXnehvVJ4kEz
xKEM7NV8mLJgX6nhf6xXbjj9j0NP/IV3Zc5QMS5Dq+9kjGZtHFneo+HzUZyJ
GhO/jjBTMpaPTbnJc1vOJJX8vx5uDyY/1vpYUxuY9uM80h41y2RkMWeT/q57
TEDOd8hiZDPu4H+Q8Q2fE5u9YXrnrApnfgbVLEeQH7hz1oWzLPAFPHQwMqDu
MwCch+mQNcTpjJyJHNsveZL34ITZNOH6RUZsFPmAvYviHFfzOaV+CTcwYbAf
UfN/i8h3/mTkzA1lWDHlZl8dWuE8WCs0s2fap3fNZ7cYD7cR7qd0LskZNsZA
xus+NY+ljH203S5JGxpmbN0149HqCUucbrIfH/qhTWgr5Ah0C+3t37J+vUzK
xjiI7tRxnot5P/P/3+o2o3tBk8fl7BPnHJZLOoQhnUrDOhi61F4tr9W8ljVY
7sRxd5Tzw1sWPtPCPz78l8ffgvyPwxoIaxcLtXx2izMlnOlasOX1Df46RJfj
L4tRLe8F8P/DzS2vN7LGyDokZxc5W/59038C8g8hfzq3t7y3V0ZmtryeOWPL
f0vxdxT/zf3S9Bm+X5teX2IdifUr/l7hDxX+aeV8HboE/2Ciw9De6Dz83cz/
TPyjhy4BfXMGj3N9/447Lcvbf+my5fU91h9Zz+QsH+MOYxl/uPAXC/8+85/s
6hln+afv4vz5wtjEOMnZP/725f8t/hwc0vI/xJzx3rTwmX/+zOLv7L/zngP3
l7kPzXtB3CPmnipvI/wkv0ab/1XnTQzeyOAu1fc1v8HAP+9/FT7vyts7vIHD
WyG8acJ9f97P4d70xwr3nvL6QvgTwUcyv1fzuyin57z0gMLntfivij/N+Qf9
S+FXBffyJkTNbxpw75q3QfgDi7+g1i38ZxZ/bW1Q+M4Xd8C4n8v/UPw5xh/H
vPnwd+7O8zcWf8nwpzb3PbnjxzsJ3O3lbi13wbj3zX107rfynhL35Hn3iX92
+EuJP4Z/LnyWmHe9WJdmDZr1as4zcG5hiZbnVciKYyOvBkZesGe0bWiPc4ic
pUTv5KwssoBztNAn+zjs73B28pTIvhPDiycJZla/Hlnz/6rbxI/0To4/63az
Nmxn7rxJZBxl4Q4m9y25s8maF+P2MUl7u8TnDiZz8PebnoNvF77mz1Nk+ezB
lJkzvvALe4Wc02C/oH94B12API5K/sjXI9Mu5LlF0tgjchB+ZF+MPUT4fc3I
gRmV3+E1/2PLeXjuVY7KWWvm4BOa1lWR7ejf6J/ouOi2Lwnuylsi3Cng3hfn
/7/M3Iv5D3++81cp/6/x7+Q1+V+JPNHVkens5bGfyB+s3Bnkvhj3wvifnf+W
+ZeN+6TM669v+l4ndx65C4l+jl59QMq1QdLlPgV3Vrn7wPjRL7TCmEQcxijm
UHtH9u8T2b9vzfcgOI/DXYADk/Y6qXOHvj99w2EZTzvGj73T5r1Db2e3/D7W
Ay2vI6NTsA/E21m8pcV7OKxdLK06ntLwmxLXZu+Jf6v5p6pcOB3ej+O9ON6N
4Z2Xl2s+P889Afb+fpZ9OoX/tua75Lz/wN099tTYe+Q8PO+t8Q4a76+xls7a
N/cv+Ed7y/xpxXtBvGPCu1v8zb1K9G3ey7ox+2j8ucYfa50L7wOyb8G9xdeU
91jevaF9m34Hjrfv+N96/jb/Bcyf1PzpzR+yvL/B2xydss6zOH9nNfzWFu+E
8bbJdIXvT3Uq/HYNb9ZMTfq8xTW25T1B9mk590he/FnGv+fcMWGtn7vQtcL3
0UqF7ynclz3Ev2r+s/zPmu8OsMfMfcN3an63523h/wNCPIzM
          "]], Polygon3DBox[CompressedData["
1:eJwtnAnYVtPbxc8znolQhgyFqNBAKZKKMhQZMhQiJWWolClkplCRqVLSRFGh
EBINZCgUCpVZZvJHyJShb/2+ta/rXde7zrTPPvvsc+973/faz+69B504sBhF
0YJyFOkvOjCJol4iBwrNxd+rRtEr2j9ReF08z6JovS74TsjED9Y5fXVuG6Gl
+ELtu1P8DmGBeJxG0WBdd4xQFM+FK8VPECrix+iaE3TulcKx4ofGUfRBIYqe
EA4Qb60yiqUoKggHiU/RdU1Ul27CHPFndE5tHftJ9ZkrvkCoo+2N2n5afD+V
uaPK7iAcIP6Irumjaw8WHhS/T6gl3iZsPy6cL36o8JD4DKGn+AHCA+LvCi+I
jxNeE99XdfpH9/pbaCreS/cYo3stEs4RH69zatCu4fqy6nSwnq2m8FfVxyl7
S+Ee8V91za7630koqH1W6v8CHbtbWCreUNdfp2tnCs3FGwnDxGcLLcWnVl33
HYR7xQ/Lo+iPShT9KRwuXlEdv1FdvxbK4rfpfr+prnV1fJR4bd3zHF13h7Aj
707XHCTeSrhU/O6q+wnvYLJ4G12zV9nvsK34bapDX5V9uzBKfKHOuULnHi/M
Fh+kMg7Q/5bCQPGXVYfRuvZu4SXxmdpfT+d2Fh4WnyZ0F28m3C9+pM5J9H5j
4QjxR1XHI/TsW+peM1Tecp1zu859RlgtfkTuZ/9LOFJ8F13zq+r2i7Cz+Niq
y1bVozHiu6qcwSpvstBUfDpl6NguwgTxc3Xih6rrXKG3+FY651Kd21moIf5o
1c/aQJjEu0jc9/oLR4on9Fed217IxN/ROat17qPCKvH9tW+5jj0gNBPvrDrm
etZMOFq8lLpvXCRsnbp+dXTtkcIs8bN1jzm611rhIvHLhXLFdb5YvI/aYD/6
LeeKdxP2Ed9b6Cq+lco8Rfx6YVvxZapD+5K/sRfFSzqnmcprLpTFH1GdzlTZ
PYVH4drXRNc2FnqIb6Ey2lbdp7YUL3D/isso5v4eaulZ2wip+N+JbcNewm/i
g1XmRN17knCZ+CG6pi7PLLQTn6V9Pcquw8PiD+geh4a2fUjHH9X/Z/Su1wmz
xe9N/f1xrwd1fDT7dOxF4X7xp1TG2Sqrj/C0+LzMHBv3DLaN70/nzhTuEd9f
ddxfx84Q2ov/pHpt0rvYQ/f4j/ek+zUUL+jc+3W/cfq/VNdOEu4W/yOxbdxD
+EX8T/3/KXIf2SQe6Z4LdO5CoSD+pK75XnxbtccS8f66Zh11o47id+h+B+ja
Kn2Xb5/vVdtNhKL2zc/8LEfo3Jdyfx+765zdqrYPW8T+nnYR/tW+LtrXUP8b
0K/F/9b/FNsjVHRupPs1rbrPVMXrqfzfVb/fhN3FXxTO1/36he/7f7rv93r3
2+r8H8SvVZnbiW8vXCfeIbX9naftSdpup2s+VFkfCYeIH6R9O+vYTtik3PYZ
29pLmCv+VNXfwiDh2artPba9r/A045DKHxiOTdb1h2Yu+2Ohvfhueqbherae
wvbi72vfYNX9MuED8eepp66fKbwp/lLV3+5QYQnfkc75S2X9KexF2dr3OrZL
eEP8KO37TMc+L/p7fkv7VurYjFDexNi2kz47Sbyr6nuJjj2nY1NU33fUZm+o
/X4XPsMWZa7b5cJH4ttl7l8P6Nq5On+ZrhtB2whvi1/CN47tCPYc+w7fRriM
Y7r+JV3/srC1+AsqZ5P4HupvS2M/P3W9VlgsvkL7Uh1rLrwhPkXXnKq6nCZM
5X1r3+k6Nkz4Qbxn6vFgka6dqvttk/lerwg1xedXbfsvDc/MeLVYx54XquH9
/6Jn/1VoLV7SvkVFn8N4xvus6F7lkvtLLd1ziN5lF2Eb8TbCC+Lj+CbE16oN
N6msVcLbjGXad7eOnS/sJH6S9t1Utk09i29N+EjnVlS3r8UbC5tLHgObiP9P
96yv4w2EH+i7VY9F64SvxE9VmVuqrl+q/KPFz9Q5z+n6Z4Ueme1HPXwDnf9j
1fZgB23/qO314t8KSyPbCLb/h88QuY99zHeYeGwaIZwoPkllnlL2O5ksfgZt
hk0I9nm99u1ZcZ2/z+zvTYp8jw/ET1YdE9X3U9XhKPEzhJr4f9o+Vvx6oVvR
NvFm8Qkqo6vu1U24T/ww7dtY8JjWXvxE7XtKz/qkcAL+Y2zfZY1whPg32ldP
ddlD+Fb8wNi+ziqhg3gnfArxr0L7dWFMKtpnPFL8aj3zirJ9mmvEb9W+B3R8
iHCT+KdVty3f3Cfia6v+Nj4UPhe/j/G36GvGih/O+KGy14XnPyp3f/lcZb8t
vlb7+pU8Rr4t/rT690869zjqreMbq/b1vlP534l/KSzh3YXtX6seH/7T9s/i
ucpdj20XKonP51p8zve5Xm1ylZ7tauGrzOPvLeI3h/HvfN0zoxyhn/jl2AOV
9UoYPz9UvQaJHymsxtZo3yzxh4U7uJ5vXvx54TzxB4VhKnuoMD1z/6MvvhL6
x234bCWXMSrz93+Dzr0+9Ld/hCZqr7v1LK/ji2m7kbYb45PR91SHUXr+PsKO
4jdq3zSVNV0YmtnfHh+5zXj+QdgnfBFhoPgG/Apd+6WOfy0+FEdOZe8t3MX3
WvUxfOg14ldpX1rxmDlY/J+qxzq+oR/ET1QdN+v4Vzr2Tu7+sirymM73eDU2
pGgf95rY4+N/FV9zgvipqtMzqts84RTxCxPPBb5mDBH/puq+xpj8i/j3VdsG
xtTfGE9ij+1thVXisa75SnyhUBQ/Tvf4t+J7Mh7jn4xS2bcFf+VA7fu5YhvJ
+LiHrsnK9lGaiR+iMpfpXhtCH41i+wu04e+6/0exbTk2+2PxY1XmcPERwnHi
tyb2/WjDm8R3EzaUPMdqIH5L4veNz3mj+ErhyYpt5hrxz/DRdO79wjr6Y+K2
WyOsFm+hfWvUtmuFlpn962MK9snr0t7aN1L3uzXYj6mxfbFVwkOxx1PG5lXh
+94jti/NGLC7+A7Yq4LnUPVijz8/6Nr/hfEO/39SwT499/tCOIdvQ/hZ/JLE
vjV97Abxq9TGbXSfg4UrxX9XGftU3Mf/yGw/sJ3zhIPw92O/W8r8TLyVMLpg
m9ZavCE+geqyMvgP2DvGigXheN3M9ulB8Sd1v7foY/j6wkrx14V7xMcKr+F/
qI4vVuxzfSy+L/5nwc/I/KYFNqBgG0f9mB+9XvQ96mS2X9iqWmG++g31Ldnm
fS6+k855rehrmE+1UJ1+0r02CC3FG8ceawcKdXi+xLGFGkI9/OXU42F3HZuj
879OPd6cxrig7QE6Z1rZNv0C8XG6xxzd+zFhvPglOq+jzr9QuEH8sczxiw48
t67/J7bvMVv4V3xo7HPx+e8K4xF96TbhJPEvqrbFzMk+E1+cevw6QefOUnnf
6//4km3oV/g2iX3v24Wu+NTC9Ip9tFXif6UeL3tQN13fk/mUtmsLZ8b2BxjL
aoQ22JkyC57T1+fZYo99m4QTY/t7U7CtwR9dzfyIsVZ4N9jTvgW/073F1/H9
qK6Dha/D+6YvjgrHV8b27ThnTWz/p1/BfXKf0D/pe3eH7c6xx+rNQlfxRolj
P7WE+sxlYvsG+FhtxW+JPde5VLhR/KPU43U38UeZC8aO9eBzN4jtbzDWpqEP
0F+Zi2Oz2sW2X4yvS8P29Ylt61Zq75vD/Jr53w5h/jRY9zuR98c3Lb4hdltM
Fn6PPZ9/Et85zI8H4Q+KrxIGivcUZom/HbaJv8xQWdcG+4E92Kxja8J8m/rU
YPwI9n44MRVt/0SMS/xS+qX498KQxP4pdbsy2Kdh7NP568PxK4Rl4hvC9cz3
5ot/FsavJ/RMF+naC4XHxc/TvqU6Nknonng+VwffKMRIWmnfHjp2jNA6cfxt
iHiXEL/pRB3FO4fjh9MmxC6Eg8QnZvbt2om/kNs/OD3MfZdouw//tT2eOUBi
f2yj+PLw/RJfbIUvHb5R4j/9Qmzk5dzxxLbEzsIcleehr9MG/RLHe7AlFwiP
pG4f2nZpOL4t99O7XS6k4ltzvGQfqMq74JsUX0lMRfwhldG/4D7/oHgt/APG
Jh3fRnwqbapj5wpTxDfH9l0/Emro+Grt2xtbLbybevy/PYwVz+JrJy4Ln6Ag
vhXxGJX/Ybh+F+E/fDFhy1CfDrrXYcKM1PEj2qd92fHLFkJd8Y7hfRyf2Nei
j54pPlbX9Na1ZwljUseD6Juzw/yF/kzfnhnOx77ybhiTeySeP4ws+5sgvoV9
I5Y7P8QX8Gfo2wvLjm8O1z3OKNhm3ZI6/sDc+UxsUOr+cG/Zff780P/p20vC
9vTUsbAOof331b6mZc9Z2oX+x7Myxh2VOP4yQ219bZhvXMX3I35l8O/xz/qI
HyxcEDv+wtzveL4R6qd9Y4qeM06OHR/6VHxemG9frnNOKthmXEbfEI4t2Afp
Jz4I+1i0DR8oPl1YLf4oYwpjgzCCWLQwAd9E+ED8ibBdzBzL4d6Ph/FgR213
COVhD0foXnMLjn9fx3hb9D2vjT1fWq1jjxYc7+0fu+/RBoOpP/YeHuwt4914
8UFhfGQ+tbJgG0b8mOfh3v1D+ZcK3cWbCefHHl+59kjhIsZOoat4Y+Ec7Cfj
R9H3vFj8CqGn+AHUWXyjcGXJPv1fsfMHS0Ks7Ync861p2l4RfBrm2/RV5hwn
0L8z+54/6tj8EK/j+vFh/J6QOnbYVrgv9fdA375OOC74m9g3cgvLcts3bB8x
naPx5TLbO/jS3PNF+tK0MP97TGV2VNmdgn19M7M9pC++kjvez7dADLtb4vjP
yuCLPpV7/ONdTA7xPvof7593ents/5XzZ4R44hjGAGKVoT8RL+TaZSGmg38w
VHXpLmwnfqPqdJr4qcIN4sO1r1fRfXBk6I/0veFhm/gSfX1U0fF5+hfvfkyo
zzD8j6LrMCLUh749NGzjPzP2dRVqxo73U1afMB9ifKdvNBI+TN0/u4g3ZM4U
e87M3PlvjXETxH/VOa107EDhF2KzuWM7G4U24kfnPvcfoTNzLZ3TTue2Ff4V
P1n7Io3zhRC/Pib3ucyRjhXfU+gnfj4xBfGVzOl0/x11/gHiZ6tOdYv2Ienf
zPmY+1HmSeJtc9flt4rjzauELxLHoIlFt88diyPH0iF3/KKz+NHC1/jyxKAZ
Q7XdFH+YmCu5CKGJ+Hc655iKryHesSXx2IpjIFy/r7Y7incS9iM+h80QP1Oo
wbHcuQ1iEp2IjQvnip8j1Mntf2ILWwt/im+nfb117CxisOI7MmaLny3UFt9N
OK/iMnYl1ir0rficnYj9CxeJXxjqg7+3RH1hfYgH4R/w7V0b4j876JzWOvfg
UP7nmXN9xDC+yPxNnpF4/OFb/VS4ouxvlvnhx5ljm+z7JHN+ENv4YYj34O8T
6xouzMmcDyAWQsxuJvEu4U7Zj7tCfI34FHW7Rrg3sz1rUnQM6zLKZj5Q9hj4
hPgKYVzZc6rlzO1U3wv0LAOIMYT3ObDifY2InwsXV9xGzUP78uxtQvudKhSr
jsGdnjsez9yBOTz5BfIPzOWpw5OZ7Q2+FHV4Q/zVzHM7cozLMsfXyZ3dxZhK
rDQzJwe7SHx25rYhRkR+hv7RTnU5JLxf3jf8UGF38Xq5efvwveyqd1Mpe0xu
mnh8xv9rErY/Z8xW2zUVPks9H9i2bB+OfDDzva3K9vnIJ8/XOTsVPeY9kzp/
gv/YvOz4xF5CvbJ9tJ3E9xR+K9nn2Vt8B/z9kstk/kh+F9+odtnxh52F70uu
Q/1wfZ2yfcIdg/+EL1snlMf9NpXsE+8jfgPxiTBWLco93+2v7THCL7HnfxeK
3yv8Jj5S588Q3yS+OLd/iG83V/gP+6njj4a55/PEv7C5JcfMuIb8Kb53w7Lj
x/jn+N71Qn3eUhs1UFvVF95MHQ9aVHIb1EwcLyQWxjNvlzjeNynMbRbm9odX
lNyGPD/xGtoKn3j7xPm40/SuTxUi8Q26vguxJeYs4pszHzuFmJN4ntv29BAy
8Ypwunj3kA/E/2Cu1zn4Az9mLuu4EA9/U+fMTGyT9wzxkpPET8TGhu/r8Ipt
JN8T/h2x2y7Bv3lD+6YntknYpn/UJtvq2HZhPPhBaCnegphO6vhjN53bVfg7
czyMvoaPv3vi+D1tjw9eJ8wPVpXcJ+h/+Dc8Sz2hd+zvgb6PD183+PPMBSph
+2Xdczedu6vwkvimzPc+OcQ7iZ9jK2uFmADxhTriu+CTig9LPbYzpg8VHyn0
KNjHHpHav2KsZIy/Mnb8HV+4a7Bf+G/Nix7Dh4g31DWn69WeIeyVerwhtn67
6vpq7vkmc9FttW8Ecy+dc67OPU84RHxi4rGqTsX6gE7aN0DHLhCOEj+SMT7y
vo7idzLHq3gOzHyceCtz1SzEC8lHM9euhPgg8dq9Kp5DE087GP1B5Dq0ST1/
Zu67o84ZKT4+sW2qHbZfxf8SHy08x7vVNWfp2t7C/uIrtG+Jjo0XFmEvUucK
OaeZ+AvaN5dnF+bxbrXvzMiaj6biTyUeS+8QnhUfk9iW1wrt9QzzL/FZwovi
04QriQUL99MfOIf2DtfPF/qLjwn1vQ5fqOwcDO/kl8ztQez6tdzPy7N3wF9K
rKc5llwdObugpzmRuLZQi/Gd5xcfSd4odX62W9U5+d8T60s6Vu2//Cy+WThM
fIBQQ+d+i32tOEe4HvuJfxlZg1E/dTz3w4rbbKn4T0KHqv2pH8VrMh8Uv4mc
bur4aK2Q610rflDqXCzvuLX4Au2/SWXNEV4J7UtfbCvcKz5FGFyxjzQ5sQ9F
f5yU2Lc6XGX0i9wHj0idM36har0MuWRsTPvQdm8Gf6ZNKBtb0iD1sz2ha56k
TXP333uwm+JJau0LbZqF/j5G548O9yPeTV9uWnGOg/g4fX1/YWzieOAK8WnC
ksT6mttVVt+q9RCPad9lOjZFWCx+gvZNQLsjdEmdr0ZrdA+aGGyBMFV8Ct80
853U55IjOS51vhit1n3CyeKzU8d+mMPM4VjquVI7YsDiN6fO5e8f5u+3Yr+I
RQl9xaflzvNzzk3MfxmPCs5ZMZ9GQ7Ft7PwN2griAZTVItir01PXdTJ9iFhK
aq3M0cRUxK9PPXc5hZg8337qY0eF+1+Veq5xMjEy8fNTz8XR2myuuj7M7Y8j
xix+QWrOnH2A+F3CgeKtiGGKD0ldFnP8K0J9yLei1aC83jyz6voANiK1hmLr
2DENYhvXpq4rOYRrxMs8o65rTl4xsb3m2VsKt4X61C+4zagf3z+2ivHv4cSa
pV1ix7SIbdHfj624T8xJbH+wHYx3s8Rnpo4NHS7MEn88se3qJTwk/mTivoYN
ekL8eWEZ307oXw+nvvaIED97RPvOqPgbfFr86NR9bWyw7zMSj/3YuLni47Sv
dcEamvGh/1L24FDfhYltLfOd2Yk1L6XYMRhiMQ/k1qGgR7kxd3s2Fd83vP9L
hL2ITYd4LfGsgwq+5z3ik1P33UNCPI732Ui8cegf2L8Rehe9wveKBqh27Hw+
2iDieVxLjPh+8atT16VpeJ/YY8ZHYsDXJv7+KetAYRO+ZGrtwzXCLvQd+m9k
G7lHan1OrZI1kk+I7585PjRL/GnV5VX9b6zjJeG52Po9YjnM6Yn3PybUILeg
a+bE1rsRn0K79ExufUqvgmNExMspD61DE+H12PH8zuL1gl4D/QYcTcq82PEo
YlNoah4WfxkfAV9V28/Gzv9113azoOfg+Gbim9p+Tfw94j8lPwP368U70LNf
Gb6XdsJJ2B5hp9T5N2Lb0wrWsxFfJ5b+d2hf9If4FsSIydej59zA/KBkvRn5
0DYltyl6J/SdaIvqktMWf5e+VfIzUD/0KNQdjeCi0J5oHbfS9mJ8cPynktuY
bTQoK6rW56BNIT+A/3xpyJeQ3+9Q8hzg8/D8tHU34QPxb/G/Sm4Ttsm3cG3n
kE/5Ev+15Dq+H+pLW54Qtttkjg/yLubljicS+1kT+gzxGGIv3YM/tzz2s3cs
OX9PvIfYTs/gD34qnFVyjpSY2ZN6ph8Lzpk8lTr/z7UXhvwV7UHbtBLejK2P
GV/wnL5tqD91JYb3nfhbvPOS25DzyY8S7+4b8pnk25jvDC1Z70P70FbMedbH
nv8wX7o2bBMfZL41JJSP3pB3T5ujpyBfStn0AfLh6Ikomz76cagPdeeZPwnP
T7ywV9i+X+17Y9maBPRIjJ+XR9YgnZl6vL1I/GLhRPFliX25tyvWA6G3IvbD
GE4+D83Yy1WPyYzNyxP7Lmsrzl9jbxnLXxXexEdJnAtdFrbxT0dG1mThf76n
fV9V7MO+HuwvvvXAMN6/q33rKvYhXwv+6S06drPQOLV/iW86PxzHH8a3XBTK
+xL/u2JNyHfiO6f+NrsG+4W/NqzqMSwN49n+VftwbKMHva5qHxJ9H/pMtKL4
nOi3L1J71Ai+4prcesY9q/ZR0XujV72wap8TPTP2k3uj3X5MOE/XpKFuq3P7
k2j78En/S6wfxVcix/5v8Ff7V+1zchz/4rLI7xR/iHz3+op9/jcS67XQOuGz
oj84FJ9A594Z5jf4o+iFX9E5C6r+vtDG1An2hfkQ594R5iOthFHitwkHps5v
Dyr4m0FPxnhwg45dL+yOLUzdty4J/hj9gb6BRuOTxJq+V6v22fDd8LdvjFwG
40nd1HrDxaG99sXHitwHmJ+gp8S/5pnJ79OfePf48B8k1rfRl4mhEnfdW9fc
pGuHhfkg/Yu+Qx95P7Eeg75M/JM4KHpe2g+t27u5Y558D2gPiYUyn6Ivv6hz
nql6/kB/+CrcH//0wsjfGP4s/ZH3vS7cr4X23Rr5m2C+Rkx2Q2gbYrXTMmuP
+IYfEH9BOLlsjRnxO/SmbxAbEfbI3F6sDThF2DW1Hotc+w5F278/hG2KzskT
D90t9bmnhvf1TurcdlR0Po/5Br4MMT7itc9p385Fx7CeTa1X5N0eHVmv/mLq
uT8x5SWpc/4DYsdgicVuSj33J2bxd2p9e/PIc3TmIO9p3w8F2+y5wd8h93hO
8Nd3yT03IoZHfHdU6lxbj+Bv4h8OKDinSf6Q9QC1VXb7yOsZ8P8pq2/Il6A/
SsQ/jaxPZLygrbYv+v6P5M7z0yZvp/ah8KXOC/4T/iS52AHBHx2dOvfYK/jb
C1PHNmizBak1HufFzg+h/biKmKa+tWWMMcSO0Z8wljNGZI5HErsnJk18Ej04
WraXGaMz632xlUdE1r8TvyP3SxnXEwsm5oQvI9zE3Dp37JY5eEPx/pm1dmje
+onHwrdFr5FAb5pmXuvCviSznpe5wfLIeks0Kn1i58vQrqwVCuJF4f3UGode
sXMi5EY+wcaKV4RPU+eP6Wtcs0b8N2Hrovvo7+LrUp9bDfHVL4W4aI3MV+Lf
CZl4LqxPHf/aomhNzY+839THtgjxMOK1lEUZX6TWP35A34usD8a/P7vgHDL+
NnM65nZnB3+f/CW+6ZdF69HRp8O/EDbreMfMWns0zp3E6wvPFa1h5zjrLXhk
+jzrOQ7IrPV6jxxQZk0TeUDygbtqu5nwbtE+dPPMPvRTsf1VfGs0zuTFyI+N
zO0jL4zt/+E7d8is7f5EOEy8VeZ7vV/0eiLah1jh/qH9aG9i2U3C+6F9OUZM
7dvU75h3vV9o/9r036I1UDtmjoc2D3P/5cQ+Mmub0WRvm3k9E/fG5zs4s883
P/Z8AF/w8Mx1xednfQvvm3vtG94X60saYksjr6fZPvOzU4cdMuuF/io4x4te
lvwl2pBBYf7/An1M/PeC7RPf568Fa5yIPy5njBf/R1gh/lpq7RH7Xud7z61D
Yt/NjF2pY6O7C8vEGwk9IsfQ8E+WCn8WXCeOs74HW7m7MLFqjezxsW00thr7
+kvBdcJesD6LtVo1hXFVr7d6p+g+sZ94E+Htovex/mrPzGMBGroG4o0yawM5
p7H4bpn7FmMG6xNYz9RYZZeI6VStF12ILYysJ0XzdVLsGC2xWvRWl5SdM16T
+fl4dmK+r6TO+T4ee75FLpj8AFqTt4QRmddPNCvY5qL3HJbZNhGjHxrq/0fR
aygYz4gHcz4xGGIx6O1Yu/Rz6G/oAVnrxpom9HrkyH+KnX8gd07OYYvE+pIx
wb7eX7LPjX0kx1FObDOxndQH7e2DwV6SX96v4DoQjyZew1ydfeSbWQ9E7J8c
Aut50DNvjjyHZ80L3++/Ra+R2y98j9WSNfqst2A9BGubWEPQKbxP1tJtCu/r
GmFqyXVmPEAfydqKP8L75fv6sWgNJ+sHWL+AlpM1MjUyj4/EYtC4okdhfQRr
BX8M3yPfL225IXw/6MWIPexTsP6D8WlKyXW4OowntM1Dwi3iZ2fODY0V+mDr
cueJ2Hc7tp8+VrJm8izxBbnzRuSPBmj7gsx8Qsl65r6Zy7pHOCfz+j9ijfRJ
9MvkU8nVksPdPnf+Gm0G/fMs5lo8c8lzMvTHaJB+ja0/QpvUPbOWlZzo6Zn1
1Nz7PuaE1FV4pOQ53Gjx4ZmfdUbovydn1kpyj67id2bWjnPNXeJDMmvrpoTx
HH31xsgaNNYTkZNisR16LHJVF2W+98QwnqO32bPgmBnxO+J9rKViH/obcmxJ
4m+Kbwu9Du+qUYjnYT9ZG0gfw96nuXNVxLgS8aWZ1+INCPlT6v8Oc82S9e88
/7sl7+N5yKeeV/YaJvKrrG89t+x95FfRn2MrahSsn0bD1iWxHgRt2/+vsUqs
Z3uW/pGZUwbrY3tn1nYvCP2D/gJnTUjP0B8Wl5zzo3+x3gjffXbk9YKs7yL2
VSpYT856E3y5eZHXP9K++EovhfdL/0Cb/nR4f+STaYsLytYL478RKyXmhn4M
G4IteaJk/Tf5dNaqzA/959zMawUWh/5K/6Bs1nigp0U/zrWPC8dk1u+uFV9D
H8+sV+beA0N+/R3h4rJtLHrWS4RbStagc/2MzGvteoT8PhpfdIToCe8WH5tZ
6zsnlI+ed01km8T6CsZYxlrWFDP+4g+wtpgBAP+DeDPtSYySWCXx0WEV5zgf
TOxz4Hv8G/wR/BeuJUaGXv2D1NqXfYL/R/6dtZG9gj6B+Uz3snPerKdAQ3Ry
4hw/uf5VmbXctMHbmePhxOKJURMvR49AWw0KegA0l4cl1kuhxUS/0LvsNYzo
B1gfhK/KN8j6BuIhrM3qHuZTFwvvlfxO0FOj6TwksYYDLcfjmdu2d9BDkB8h
1owGZevc67GZzzOGsh74jdS56j2L9h/Iv91bsQad+Tj5ebTCrHEhX03+bWTF
awTIJzFfIi/KHGl47vUpfJvkZFlfMi/12oWfC9YPMKYxtr0b7BXjHbl2+sCd
uecb6KrRV29Irbek77Fmi3wvegTKwudgPoc/j+4Y/fEtuTV6aPXQC47I7a+w
boI63JTbP0Abjk/1fJgvnR5b77QqNf4reA7FMfLDfxTsE+EvoE9l7sMaCvLx
6E8/K3nNBvlp5g9opZkzfBz8r1Ni+1z4XuTPZlfcR4nfs95qRcH1oV7Ev1kL
i8ZyWmp7ji/yZhi/0Bf8W3AdV4qfJgyOHFMhX0POjtwd6zUnYrtj2zpyKqwx
PSX1Wj2uOTV1DIhYEPnDi3PHdIjtEH+6L3dOjdxaK9W3Zu4cHLk45rTjcscY
iDWwvq5n7nwq2oCrQj4Dfdb3idcHs1aHeB1r92aG/Cttgq+Jj0pbkQ/h2ukh
/4Y/wdzy1TCeE8MgloGG69Dc+hLWJrDmBn0F/RlfmDZCf8H8Ht+Zd0h+n/gf
a1dmh/wl+rZvEq/nZa0YMQxiGcR77s2dgyQXST63fu4cJrlMNF7jc8dnyNXj
Q++TWiOJVpL1yVsE/+KP2GMGYwd6fN4dmlDWz23MvPaJNSjoKdBrtBQ/oGK9
GPNd1i/gg+CLkGMenThfTe4ZvdXUstcYsJ6U9Ylop+4O4xH3xJfBx6Eu6LVY
yzM16LN4v1MT2whsRa3c7/qgivVm6M/grYP/wvjcouI6oidBj4l2fWLwr7GH
E8rWEK8M4wNrHSYE+8gci7kW+dZq7vVx08teM4K+DP3KvhWvOUff8m/mXC37
0LPEua9tEfwD9BqsTWMNE3oR1qyR1+Wae3KvzyeXwTfGekbmq4/E9sHrhvEQ
321cyevn0L+wFrRhxXoa9I5bFT3H34jtSW2b2If+kfnsjNg+Kr4q/htacny2
0zL7P+iG0A/dmtl/R6uEvvYO+l5q25WF+Srv+O/YMQ7ePf4X2iB8tCsyzxfI
E5AvGJV7/oJ2lTnTPpnn2+QhyEfcmnu+Sq6C/FHbzOsv0eJhn7BTaEruSJyv
R2uCnohnR9Pwc+bfG0CriQbuFPHnte/Bst8Z6xlZf0jbjQ/xGPQVfNvXhfwj
4yuxFdaQoC9lvk9ujJjDbbnzoWgbGVPmhXwkWkXGIPQfvM9xiTVB/4T+c1/i
8Z25O/5a58SaPLR5Q3Kv7WotXCF+eW7Ob2KwXppvhm+nS3i+PqrT9Mg55LNT
x5sOq1jThF7wHKFZ1b/B0Df3elx+K6FR1XpAclDkoqaG/ETv3L/VwBr7s3Lb
Z3Lpk4K95fcj8AXxcVivRL6VeRfzr4tT+zBx7Bw6vs1pjO86r13V6+2JT6MV
mBDyH8SX0b7MDfFc1udzLr/hcI14g9y267AQPyMfwlp61ttfn1sfRO4YjQR6
IOaseWxNE3NZ9Ej4r0uC3gI9JM++T+gP5ONYG05O8Ybc8fY+kdfuLwj5AnLt
tOG54hfk/i2RFsKA3DFFYostQ/yLeB5rx18oOn5HPA+OhpzfryHega+Chp34
BvE7fDfWdKwJ4zdjORo8xkf0SeQCyBmgX0GPi209MPhD/P4IvveokFPAfk+L
nQ9G+75lZlv+UpifolFBq0JOoj11T51buFVomVqTfmpim4htZD0/sbrhIebe
P/ezk7NhvS96OLTRrFElvkx+htw1v7lyYe744kFFa66xP8TD0Qazj3gj/s6U
2DE+Yn3Ec26OnDNgPELfxVorbDrjOPqZoZFzFuiDmP+wloc51iuZ9Tj8lkM/
HT8s9ZjN2M1vSrBeFr0FueOrwvfC+L8hsV6J3AP6En6rA43/0Nx6bH77Y5eq
9eHoJ1jXhMZlWO7192gN0VCwnv3Y1H2THAT6GPILaJVqV70+kfY+O3IfI5/D
+kWO7UCb5s6Xkeu/OnI+G3069+Y3KPj9AfRx/HYO4zfjOPpotNpHVaz/xZ9m
HQvrWe7K7a+zVoo5zENh/tIxsYYZLTO/l0Nsj/7Pd8D6IeZa+ISsR2K+wNoD
1sOMzp2/INd0Xch3MJ6jHcMH+DWzPUZXhr5sbG69NWsh0GCPyd2/WPvAeoj3
Muej+N0FfLpuqfMzvSO3Ef2R9dtoGdFssr6V3/PZsuqcD/0Lf/GfxPm6q8L3
uUXV5/B7P9jTmlXnrFgv2yu3r1cN9o3fXyJXQX+h35CvOy/yb4LwfbB+mrku
MWvW67Memt8mqV+13h//88/Eff6iYK/5bYuawX7ze0j81gm/sYReH/vKveOq
fw/n6ty+7nbB3uHD4cvVq1pfj94ezm+m8HtCrDfg3uQ8WZ/QnfG04jWw9B9+
b4eyk2Dv0dMwljH+PBBynhsT2zRsG3oj/Gr86ztTf9+s5d8i2DfGD8pKg/37
P78X0ro=
          "]], Polygon3DBox[CompressedData["
1:eJwV1Hloz3Ecx/EPm82wcofmypEjFGrK3ZSiOYbNbY7JNbT9Q/nDObcZc2zu
+5Y7RCR3k1DiDxRFUcwxxxge3z+e7fd89Xp/3p/vb7/fr/mkOWmzK4cQuqMK
UhNC2OrvvbgQbmJh9RAyZDtk9/ldpPMFSK8UQu34EOKxWG9HNf3YEAZVDaE3
CmT1ZaUWnNE5hFWyeIy17IDONsTx685rojdRZxiu8fdmU/V26uRjk95o2cWY
ECrxr3qj+EvdDman8ky84PPld/Ti9ALm8QpkOG8v34LNzsvTHeM56pmrjmX8
m16a3h6djdEeXkd3ouwg343avBPmyk7w49jKN+k+tTeR18B6Wbkze7hftvNn
YYWsQJZpb31eE+v5KbOrvH9p5vpjg95z2U7ZaD4Sz/hDFMlG8eHRHfUuy/Jl
I/hAXOK5zhxqRy3nxyCH95cnuN9VfgVrzCZhquc4Ym5/9N7wE7pzzDbWScJS
WXuz5Z7jAj+FdjwRH2Sn+T7U4K11ZzrvqLMOoxVvJi/TO69zDE15X3lTn6fP
Om/Qhx+SL/McQ3kKDvLFKHHnBB4bfRb0YmRvnXfSWbuwUnbBnRvKxvPB0f9S
lomOdnw3V4oJfL/eDM/WSKdBdG++xnmP7KimUxWr+RCclf3V+YS1ZnvJYmWX
+UX05F3xz95L/BxW602WXdWr7KwfsnWybNkNWRXZ7+izwF9jn+cdJxuLQr1i
98lyv4Y6dbFE9k7W2Y7pfAqWywagpWf7Yu4dinkyGsk+8lco4rftKLQjnQ/B
LT5c3lavjH/AMH7PjhZ2THJ+BvKi90+211fogW4JFsly0c3rcnM/kcOf6LUx
m2VuDB7zz0iWzeDTUMqn63Yx+8vct+j7z/vJN9pxW34dKdHvi7yn1xU6f7Cd
/wck25zM
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jtMU2Ech+E/4AWlINci3qAoKrjqCo6gG7hoooMxEW8grXcL3kFAFIKB
CLiJqzLiokYYgRVXXcVRnAxPE4cnb/tL05zznZM6393elRcRX8kn97mJDpq3
RWR1lmXWqfODYXubpplmgTVW7Ul/0kInY3yiYXvET00URBzjHANk7B/1O/mb
Io5wii/2Xn3PCn9JbY4oLoo4oRlmWOQ3Z+zVWyKOc4nLXKHE9VzVa3TRzXVK
7T2aJsMNblJmv6W3ucNd7lFhv69ZeunjAZX2h/qIxzzhKUn7M+1ngOcMUm0f
0mFeMMJLauyvdJQxOmnhtPtK6pp7XGCaNAl7m9ax7myWmeWzc8tqB03kseps
0/YP2s9ZjlLESfsPz2WeUS7SzD/XU6W/PNNvTNHDnL1Va/njXVjiHRdy56Pt
NHKYQ7x17Qe1gQPsp54Zeyr3LlHLPvYyZd+ju9lFDTt5kzs7TVJFJRVM2su1
jFJ2UMKEvVgTOKpwm+ES47W9ULfiYzi+cEQx7kvB//d/AxdET60=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNykc2AwAYhdHfxDlOdkCE6CHRS7QURK8hISFKGLMFFqLswMDAwObcwT3f
G7x0+6X63BERNQpdEd30kKSX786IlPbRT5oBBhlimBF+/EZ1jAzjTJAlxyRT
/PpN6wyzzDHPAosskefPb1lXWGWNdYqUKLPBeyJiU7eosM0Ou+yxzwGHfPi+
cmQfc8IpZ1Q554Ian351veSKBk2uuaHFLXd8+b5xbz/Q5pEn/gH11h3K
       "]], 
      Line3DBox[{206, 207, 208, 1758, 209, 210, 211, 212, 213, 1761, 214, 215,
        216, 217, 218, 1762, 219, 220, 221, 222, 223, 1765, 224, 225, 226, 
       227, 228, 1766, 229, 230, 231, 232, 233, 1769, 234, 235, 236, 237, 238,
        1770, 239, 240, 241, 242, 243, 1773, 244, 245, 246}], 
      Line3DBox[CompressedData["
1:eJwVz8kyg0EUBtBro0p5Cq9kZa3KTEIQQ4xJjDFEzILgJ+bpCTm9OPXd7vq6
q7unP9+b64iIPmpdEQMMMsQwf50RI3KUMcaZIEeeSaa4744oyGlmmKXIHPMs
sEiJB90yS+ZlVlhljXXKVKiS6W3ITbbYZodd9tjngEMedevyiAbHnHDKGedc
cMmTboUrc5NrbrilxV36U3orbb0s3Z/OpTXPvPDKG+98pH3dKp/mL7754Zd/
ong2CA==
       "]], 
      Line3DBox[{411, 412, 413, 1838, 414, 415, 416, 417, 418, 1841, 419, 420,
        421, 422, 423, 1842, 424, 425, 426, 427, 428, 1845, 429, 430, 431, 
       432, 433, 1846, 434, 435, 436, 437, 438, 1849, 439, 440, 441, 442, 443,
        1850, 444, 445, 446, 447, 448, 1853, 449, 450, 451}], 
      Line3DBox[CompressedData["
1:eJwNysk2AmAAhuHfsuMquiW7ti6Aq0CXgsI5ZEiKMmaeZQgZM8+kcDyL53zf
4o22tre0NYUQYpQiIQwyRIphuptD6GDEH2WMNONkmCBLjh7dpJ0iT4FpZphl
jnkW6NV2UvQXWWKZFVZZY50NErpNu8U2O+yyxz4HHHJEUlu2x5xwSoUzzrng
kiv6tF1c+1VuuOWOex545Il+3bN94ZU33vngky9qfDOgjVP3G/zwyx//eNdN
tA==
       "]], 
      Line3DBox[{616, 617, 618, 1918, 619, 620, 621, 622, 623, 1921, 624, 625,
        626, 627, 628, 1922, 629, 630, 631, 632, 633, 1925, 634, 635, 636, 
       637, 638, 1926, 639, 640, 641, 642, 643, 1929, 644, 645, 646, 647, 648,
        1930, 649, 650, 651, 652, 653, 1933, 654, 655, 656}], 
      Line3DBox[CompressedData["
1:eJwNysk6AmAAheG/EJVQGTIkRREyzzJExnZ2ti6A6zBcjCF1ebyL9zln8RWf
Xh6eIyGER8qJEP7ijo0Q5TMZwis9fi99xOhngDgJknzpBm2KIYYZIU2GLKOM
8a19Y9yfIMckU0wzQ55ZfnQFO0eREvMsUGGRJaq0tct2hVVqrLHOBptssc2v
9p0df5c99jngkCOOqdPRndhTzjinwQWXNLnimq72gxv/ljvuafEPbjcZeQ==

       "]], 
      Line3DBox[{821, 822, 823, 1998, 824, 825, 826, 827, 828, 2001, 829, 830,
        831, 832, 833, 2002, 834, 835, 836, 837, 838, 2005, 839, 840, 841, 
       842, 843, 2006, 844, 845, 846, 847, 848, 2009, 849, 850, 851, 852, 853,
        2010, 854, 855, 856, 857, 858, 2013, 859, 860, 861}], 
      Line3DBox[CompressedData["
1:eJwV0FdOQkEABdDhF1fBfkQFUcGGomJDsBfsggWwgXUpKiJb87yPk3szuZNM
JlGopMuxEEKO7XgIn3zwzhvPAyH0edVf6NCOznnikQfuafFn25QN7rjlhmvq
1LiK7tr1uNQvOOeMU044psoRh/zaHsh99thli00qlNmgRNd2Xa6xygrLFFli
kYXo7XY/FPR55sgzywzTTDFJjm/brJxgnDEyjJImxUj0H3ZfDOtDJBlkh3/F
/i/z
       "]], 
      Line3DBox[{1066, 1065, 1064, 2093, 1063, 1062, 1061, 1060, 1059, 2090, 
       1058, 1057, 1056, 1055, 1054, 2089, 1053, 1052, 1051, 1050, 1049, 2086,
        1048, 1047, 1046, 1045, 1044, 2085, 1043, 1042, 1041, 1040, 1039, 
       2082, 1038, 1037, 1036, 1035, 1034, 2081, 1033, 1032, 1031, 1030, 1029,
        2078, 1028, 1027, 1026}], Line3DBox[CompressedData["
1:eJwVzTdWgkEYhtGxlVWwJTpbFoBrMTQGzAETAoIBEyLBjJgjBnAf3r+45/2K
58zEk4OJVF8IYYDj/hD+6NHll9FYCE1+3N980eGTD95545UXGtpn+8QjD9xz
R5tbWozo6ty4r7nikgvOOaMZvUedmrZmT6lywhGHHLBPmb2o0e7aHbYpUWSL
AnlyDOuqbLqzbLDOGquskGGZpehP7aJdYJ45ZplhminSDOkqTLonGGeMCv9K
GUds
       "]], 
      Line3DBox[{1271, 1270, 1269, 2173, 1268, 1267, 1266, 1265, 1264, 2170, 
       1263, 1262, 1261, 1260, 1259, 2169, 1258, 1257, 1256, 1255, 1254, 2166,
        1253, 1252, 1251, 1250, 1249, 2165, 1248, 1247, 1246, 1245, 1244, 
       2162, 1243, 1242, 1241, 1240, 1239, 2161, 1238, 1237, 1236, 1235, 1234,
        2158, 1233, 1232, 1231}], Line3DBox[CompressedData["
1:eJwNylk6AmAYBeC/ECopY0iUzFIsxZ1bC2A1YUmGsAuFjBEyvhfv853zPaew
d7CzHwkh7JJMhLDNFlUqHHPFJmU2WGeNVVZYZolFLimxQJEC88yRZ5YcR1ww
wzRTZJlkgnHGGGWEOhnSDJMiQZxBBugnxjl99NJDlAiBv3gIv/xwqJ/xLX/R
5ZMP3unwxittTm1f3GeeeOSBe1rccUvN7oQbuUmDa4b8/gGufSwY
       "]], 
      Line3DBox[{1476, 1475, 1474, 2253, 1473, 1472, 1471, 1470, 1469, 2250, 
       1468, 1467, 1466, 1465, 1464, 2249, 1463, 1462, 1461, 1460, 1459, 2246,
        1458, 1457, 1456, 1455, 1454, 2245, 1453, 1452, 1451, 1450, 1449, 
       2242, 1448, 1447, 1446, 1445, 1444, 2241, 1443, 1442, 1441, 1440, 1439,
        2238, 1438, 1437, 1436}], Line3DBox[CompressedData["
1:eJwVw+VVAmAAAMCP30zhDNioYAcWYAcqBgYhYAfOITqUGLCOx713PflKphwJ
IWx3R0N4s+GrL37a8dknH33w3jtvvbFuzbZVr61YtmTRKy+98MM/zy145qkn
Hpv3yEMP/DXnvnvuuuWmG667ZtYfM6ZddcVll1w05YJNv513zllnnHbKSScc
N2nLhGOOOmLcYYccdMB3v+y3z15j7vgPWPUpqw==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzrtNwwAYhdGfhoeQzAaJWCDZINkgkWjoEokBkg2SDRIJerulsimpbEoq
mwnsDewNbE5x9DW3uM9vx5fDTUS88nEb8U5KRk5BSUVNQ0tHz8DIRHIX8cSM
OQuWrFiz4fMxYqs79hw4cuLMhSspX7aZ5hSUVNQ0tHT0fNsOOjKR3PvCjDkL
lqz4sV3rhi079hw4cuLMhV/bq6Zk5BSUVNQ0tPzZdtozMDKRPET8A2scNxw=

       "]], 
      Line3DBox[{6, 47, 88, 2338, 129, 170, 211, 252, 293, 2413, 334, 375, 
       416, 457, 498, 2490, 539, 580, 621, 662, 703, 2567, 744, 785, 826, 867,
        908, 2644, 949, 990, 1031, 1072, 1113, 2721, 1154, 1195, 1236, 1277, 
       1318, 2798, 1359, 1400, 1441, 1482, 1523, 2875, 1564, 1605, 1646}], 
      Line3DBox[CompressedData["
1:eJwVzrGJwlAAx+EXhFOxUZwgOIE4gTiB2lyr9ifiBOIE4t0AksoypLoypLoy
ZIKQCUIWuC/Fx+8V//d48fG8+4pCCJ98f4Tww4uElIycgpKKmoaWjmjoziSE
gc6YE7NgyYo1G7a8bfd64MSFKzfuPHj2b5LaJn3JyCkoqahpaPm17TQa+Qsz
5sQsWLJiTW670S17Dpy4cOXGnQd/tk99kZCS9W9QUFJR92fbRls6orG/MOUf
qPUy7A==
       "]], 
      Line3DBox[{11, 52, 93, 2347, 134, 175, 216, 257, 298, 2423, 339, 380, 
       421, 462, 503, 2500, 544, 585, 626, 667, 708, 2577, 749, 790, 831, 872,
        913, 2654, 954, 995, 1036, 1077, 1118, 2731, 1159, 1200, 1241, 1282, 
       1323, 2808, 1364, 1405, 1446, 1487, 1528, 2885, 1569, 1610, 1651}], 
      Line3DBox[CompressedData["
1:eJwVzi1swkAAhuFbBT+ZAoMGg8fgMfga0DW4LcHgMXgETGOaTNY0maxpgqyp
r6mvqd1T8eQ98d3llsl3/PURQjjyGIXww4uUjJyCkoqahpaOnmjszmcIY52z
YMWaDVt27In5tT1owokzF67cuPMc3iSzTYeSU1BSUdPQ0vFn22s08RfmLFix
ZsOWHYXtXmMOJJw4c+HKjTtv26e+SMnIhzcoqahphrNtqx090dRfmPEPOlAz
vA==
       "]], 
      Line3DBox[{16, 57, 98, 2356, 139, 180, 221, 262, 303, 2432, 344, 385, 
       426, 467, 508, 2509, 549, 590, 631, 672, 713, 2586, 754, 795, 836, 877,
        918, 2663, 959, 1000, 1041, 1082, 1123, 2740, 1164, 1205, 1246, 1287, 
       1328, 2817, 1369, 1410, 1451, 1492, 1533, 2894, 1574, 1615, 1656}], 
      Line3DBox[CompressedData["
1:eJwVzitswgAUhtE70T2CXFCoCRQahUbhlpAswS1BkWwKhUahyUTlUlW5VFUu
VZVLVXVVdVXNDuLkE/cX9+X98/XjLiLe+LqPSMnIKSipqGlo6egZGEkeIr4n
EROdMmPOgiUr1mzYktvudM+BIyfOXLiSkvFjm2tBSUVNQ0tHz3C7246aPPqF
KTPmLFiyYs2v7Ua37Nhz4MiJMxeu1LapZuQUlFS3Gw0tHX+2vQ6MJE9+4Zl/
ARc02g==
       "]], 
      Line3DBox[{21, 62, 103, 2365, 144, 185, 226, 267, 308, 2442, 349, 390, 
       431, 472, 513, 2519, 554, 595, 636, 677, 718, 2596, 759, 800, 841, 882,
        923, 2673, 964, 1005, 1046, 1087, 1128, 2750, 1169, 1210, 1251, 1292, 
       1333, 2827, 1374, 1415, 1456, 1497, 1538, 2904, 1579, 1620, 1661}], 
      Line3DBox[CompressedData["
1:eJwNziFMAgEYhuGfgjiDBEfGQiaRSWRmYLMxA1FJZBKZxEZwu+AuGS64S4YL
7pLhgrt86fKlyz7h2Vu+8D2+vD29DiLimeswIiElI+f9LqLQkoqahpaOnriJ
GPJhO9YJU2bMWbBkxZoNn7Zb3bHnwJETZy4kpHzZZppTUFJR09DS0fNtGyN/
GDNhyow5C5as+LFd64YtO/YcOHLizIVf20RTMnIKSipqGlr+bDvtiVtfuOeB
f80eM34=
       "]], 
      Line3DBox[{26, 67, 108, 2376, 149, 190, 231, 272, 313, 2453, 354, 395, 
       436, 477, 518, 2530, 559, 600, 641, 682, 723, 2607, 764, 805, 846, 887,
        928, 2685, 969, 1010, 1051, 1092, 1133, 2762, 1174, 1215, 1256, 1297, 
       1338, 2839, 1379, 1420, 1461, 1502, 1543, 2916, 1584, 1625, 1666}], 
      Line3DBox[CompressedData["
1:eJwNziFswlAARdG/pGEjc4SQIJdg8Bg8BrtgagkGsxkMHoPHMDHViQpcERVz
naiY60R9TX1N3Y44ueaJ97J9f317CCHEfAxCSEjJyPl8DqHQkoqahpaOnugx
hCFftmOdMmPOgiUr1myIudnudM+BIyfOXLiSkHK3zTSnoKSipqGlo+fbNnry
hzFTZsxZsGTFmh/bjcbs2HPgyIkzF6782iaakpFTUFJR09DyZ9tpTzT0hRET
/gGWxTSd
       "]], 
      Line3DBox[{31, 72, 113, 2385, 154, 195, 236, 277, 318, 2462, 359, 400, 
       441, 482, 523, 2539, 564, 605, 646, 687, 728, 2616, 769, 810, 851, 892,
        933, 2694, 974, 1015, 1056, 1097, 1138, 2771, 1179, 1220, 1261, 1302, 
       1343, 2848, 1384, 1425, 1466, 1507, 1548, 2925, 1589, 1630, 1671}], 
      Line3DBox[CompressedData["
1:eJwNzjFKwwAYhuHfRaPOYunmVnqC0hOUjk61o1PpoGvpCUpPUIrgJiGDo4QM
jhIyOErICUJOEDL5DA/v8g3fw/Pr48tFRDzxdhmRkpFT8H4bUWpFTUNLR89A
chVxw4ftSMdMmDJjzoIlK9Z82m50y449B46cOJOS8WWba0FJRU1DS0fPwLdt
kvjDiDETpsyYs2DJj+1K12zYsmPPgSMnzvzappqRU1BSUdPQ0vFn2+tAcu0L
d9zzDyr0NW4=
       "]], 
      Line3DBox[{36, 77, 118, 2395, 159, 200, 241, 282, 323, 2472, 364, 405, 
       446, 487, 528, 2549, 569, 610, 651, 692, 733, 2626, 774, 815, 856, 897,
        938, 2704, 979, 1020, 1061, 1102, 1143, 2781, 1184, 1225, 1266, 1307, 
       1348, 2858, 1389, 1430, 1471, 1512, 1553, 2935, 1594, 1635, 1676}], 
      Line3DBox[CompressedData["
1:eJwNzi1uwnAAxuH/zD6yzm8JCDzcAG4AZm4JmGkYF4AbwA1ogsO0QWLaTM60
mZxpb9DeoE32iCc/84p39Ll9/7oLIXwQ34eQkJKRc34OodCSipqGlo6e6CGE
Fy62Ax0yZsKUGXMWLFlxtV3rhh17Dhw5EZOQcrPNNKegpKKmoaWj59s2evSH
AUPGTJgyY86CH9ulrlizYceeA0dOxPzaJpqSkVNQUlHT0PJn22lP9OQLr7zx
D/SMNo0=
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
OE06jC/ScdhIWeWr7Re8FQk7caSxDqlrO5dw6DOgydFkHrErE+e8GnbTd1Xg
g2puww8uJgbejZt/WJaGyIdlV8oNipBRY3ZgqT2lZ7dmDmslYydLVHL/qVwk
y/PyOaQy4fyp07z0dxo0XxvVfJXMxf0TG6+yxTEhJ0E27d9Ugum4L7YxKyl+
Hde0kCYGztQ774m/1gJ+MkU/Et2MpW+03ghuGYeZddsbP9t+8DqxJNaadeGi
K+dUiuoAWDQVeIR/DSOeJjtIJjswInrlTCBrN94/Xa2cc3EMe8N+K7QMNyFJ
8euj9EMdmO1OEu7YMA5zvlORLwWr4FVbdI7xogurhHivXiWjmD7bcDrz5hcs
NATSs2P7YPeLz9/3ziD8fnIudc99ishlpcP5hcPo1lo7qt7fAb3Fi5bffhRJ
2q0u2+96QYPx3E98/F6J6FUPv69eFEXWyCayy6xjIkbw6p9M0QwITFgcjtjt
Tz44pUw0tjOx+8jfpH3s/rjJyKocSn5CpF7I/FWkOG2T2ctlo3mLyk1+OvKc
50mP6ETDT4prL48qA56NtuTioyWypMgMCz8PDn6mdMXDYn7+v4KJCfeiRaUH
vCFvUNAjO0Pl/B0hRsNIJwEKK7hVhj6i+lYnN0sdE6Z7s1XtJkqIQaegy7Rb
Hhbt5pa+JM7EMyfnJ/vY6snKvoOPRlQqcKeu2Wp3Fh2X9g2L7gtrIyeyfz75
72QDntTtFjl3kpqDvYf30W71kBDbTZ/Cr7WiJjroppIuxfvk1qLq55SPe0Vy
naCuC1dq1auTGYPw3HNRWTe3n7hdu6ouz9GN8NRPOzgb+8G6/T7XprMDpHu5
rbPsVDfsv/xe/LunDwribtL8GgPEcUCvT4bRDXWdoW/SnX3wD14acL+ln7B9
D4g+P9OFV52da8Xy++H+8mm7UnEfuZjifvHqkk70TrosFXs0CJEck0nW2R6i
4+Jx0aCvFTsNdmetahqGybv/VCJre4i0rUyP3+Jm5Fq+IM/jR8BmY2x1fV8e
Pj87tnn+SD/iYne5B8mOojK0sE53z2es+7ru9ZYzPWj7YS+uROUclrmwmUOy
WZgtHDwgmteBB0tKbPmNaWitiLQam8kAvxCXrWh7C7pcgkTrL9AxWvTyt/21
dLyPX1n5i70RYg/+aC/wMvBL45zjrldpODPVNF1zvRYhUwLzB5IYGDy9Cyuc
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
Ja2Zl86ElrtM+dXnH7Bw/8AD1YNPiEGZwo7yf+8pS9ilZvPiLW7wHDi2EH6P
xH57/M6X4qvoxxp7viOPwBa/9LwS+yWidTftdR3F48NHeddWOWti1/XQ36wy
EsT93e3Bf75sVTY/LyAoTHj2LnQ+5uPGU0GxH/+4vlxjrrJW7hYJYx3z/rFJ
BftrD+z697w97ntoyzvXV8TDLFx+Q9I95L+WLxeldHeayJUD1R+ILfPXXhcz
ZyxY3jh1ijrOaBmf065b04mcaHdOVkkg1i/VO6hC9Y6Qk0uOb/1WRF7ZOex/
9ygWKxT+7FzrTPWCapGiOI5aYneOOb391yd4i3f+GctkwMnx4MX50hbC/Z/4
DVO+PCQrvkpTO0zxeHlN6xXRHpK2++qOtp3FWJ65e8UT3nFMaTOa+H17iaO4
kESQVBly4k+dNF4+BkvXrxtCFbLx4aSq0YW1DQjrt1QxO8CAwYrCwWf+XzDE
uvkcO+Vv5axHy31kGfDiFqIJbc5D8Q+9IhnRevR+SH9RfpyBayMz22+tLYBg
DZdrbUYdLiYlLh+TZ8B4rNP1/v4iSJfZXFbeV4eVQfK1iZTefHTYe8i0BLcb
YvO2utWiZmJLVpUcA3c/uP01qS2DB+OyQXVzDVh+q+ZMyTDwKeqkh5rKN6w3
ib61clkNQv7yqQ5IMnDxULXh785KqI9OVnMersI+XHYwpO5nY4nWlzsO12Dl
bHb2LeEKDD8+WfJ4BwNZzMi5L09qwRR6aXVs4Cu+PLe3tONl4PnvgSRaZh1o
nJdoT2+WQm9ZrueG5Qy0Lt07zNZcD22JGB/v7CJszWrm8JyhY4eAGrOisgH5
GUnB4WP5mFpg+/yVTkeeK1sEw60Rl/+2lV9ly0XdSfVI0UFqjtl0moSsaMLm
D0lsr4QycS5y+f6P1PyJPF+afV28CbY9D5a73EmB9P7xEWVqXv0qNGucWmiE
5+6tA59+/Y+j647H8nvDFaEQJRRts2SElHknSbKiCJU9MyIkoazslBnZeyt7
O/bee+893sdXSJJ+j99f7+dzf87njPs513Vf1/Oe876poKDn11V1GM+/J8Oe
7Qu8f1WPCN1DMZDhcT6gnYUANLuclsvSvRB845bffZlPEP5eTSJElQAKtauD
t2q6oWjlQ+xunwgk/CEqPhFKgKSZcBnPTpwHLwZN+kvjhivjom7rBAH6Otuy
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
yNiSrexvuqLEg4e7+A0x6GS+Xc9UwoPEOus278qfAraQ59M7cTB8Tf/4aWA0
1Op9191ws0RxT6ol7uPzJTSzz/8Q2Xm0kfj8LF08E7S3OS/uXL84JC/IqFiC
ukcdn2B94WBTeyBVMBKDsXMR7QM3S5BO15tGmeoIYN+oDanA22np5v29SE3Q
58WRVBb199DuCrN1eD+lHw4rHOI3QSk5mVtu9B+An5LmWfnOOUjd9R3Ff4yR
0pE+q6tEYyi0Z2Cv3uF2G5zOWpKYoKbqZNOohfcgma7oWYu30/uwy9qHG6Oh
kyQhylzvQKdkZWnnnORbtQ80BTmNkbKig86tGgOgON7X2Im3z44UB3dSGyPH
fkOimJQuXKhLutqLt7NVfGY+9vI9Ehi5fuff2hswtEwQ3/nf0NOVZrbxwntU
KykZrWH3CqgPSCbu6A2nLYo5Rl4j9Hvp9dXOAGU4GRlnvcO9cqr5SeTVv0Ot
NCrfW4ulQXh0RWSHmxt7Rf2O7MNbtHaEofbJ1bNg0s5BsfNdctqTvrOLVoYo
pqqRle+gOFp75LB3Hm/XIZDeYFXXRlx27q8FjTRQYBRX4c65cMf88qXbKV+j
fXNuRHVOA5TqzWi/0/8kZztficIL1Hp9qCpJyBhdznp/c+c75r/sdMsabGQR
11FhynppUxR9/0v5zrmRx32onv9rv4kC1N74NFhZou+1tO3FO/3rat3RvfII
qLezO95E26A1jHxf9M7v2PeQC0PsC3BWvXkiTc4BkXnX0Vri7cnOQpEUFG9B
RmPysIO/E2rrHGLYOR9v3iUvxLbqA7hHMWbeHHBBXlJadiQ7dYec65QylQNc
3tIdHDnvheQWR28w4P4xoqp1gIvSFUyzXPxPHPZBs44U669w/8hULPHs/JQn
lEe231bN80PLM9vMmriePxZbLXk37wdsnGcSNfX0R5t/JQ8cxnVm9XLYGanf
wVCfxl5Jr/wTEV57Ul3BdcjRu4NzTIHhcF+i/GVWbxBKUNywssbXuYPQ/Wij
M9EwgGl8HLkRgtheBVtULmJw/eFz4ZdfEoGeHHmWO4agF/6h29wEPJ5ZtidJ
UCp4HOlKtX8eihpTfgyLj2PwLytiK3Q5H7THiwXf2YWg1fgplTOVGDx5Nxxu
fKQE9lRUkF66+hORbV0R6YjF5/csI8U7uQpgpWsfKFr3RU9jRUqfW+E+Uaiu
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{373.30135447914006`, 356.9795988091191},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4831089049281536`, -1.3351487774881, 2.7327213026751993`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.684683063654367*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0011070338020841`*^-15", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.9996290511131957`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.9995893627328954`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6846830665086703`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1yWtI03EUxvG/Uzc3N4mKEbK1NkyzZORsOnO5Z87p0lgXcIxmlEZgm5co
N+pVK9EQSqLmliWFBO6FexGDUSimIFaEsAKDVloj6UK0moRpl3XD3zlwOHzO
V9ncceAYj+M4zb/9f1cnaegs/e0s9HNgDxSqFXevjJOzYFtcmX/4lrwG/JM/
UjM5aczrYQrF64Z15A1Ii+Xl2I+SZRC/bA2+6yNvwunF1EXbGFmFg2PFe0If
yHmYvpbo/STlMeejxC1Ll9WQt+CnYNslg4e8Fc5Aj7QxSC5Cd/3GoCdGVmNK
/v6IT5zOvB2aU83eUZCLEW0vOPTZTdZAJ+pwakPkEqzwbpf1L5B3QD7y5cQ6
WQazFtLQ89eRBnIpPj5+4jp/mVyG/vHZ3LMzZB2KlMK1YWEmczmkQw6/0kLe
iWeHCySzF8gVqAjP/Yo+IuuhrgxJZNl85l3o7dOKJqzkSvDV5fGJq2QDmhzW
oc0vyID9+GDXslKwai9wbj7wRu9i5oxobJoypCLUjWgZ6DSBl8V6FfZ+GxyX
7GP2ViHu8w+33aJuQtC4pGhJUjdhMuJwZ5qErFejW9UgtwaYvdXwqUpG6xLU
zXiQn8zNMItYN8Pmkeq7bjJzNViIjViefqdeg1ah6sayLZv1WiSW6u//iTB7
azEpsLd/lYpZt2C/Kzowd4bZa0Fbz/Xm6VfUdyN8R6S4Z5bgL2wqvRc=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1yWtIk3EUx/FnujkzpcIJRSYVtdylMV2rVs395rbHLUdUUhF20cZMZzRI
yxSyEetiF3JOX0jQqyAYDtQgIoXV0sxV06BmkTTEYUlE9qIGjUaF/3PgcPic
77oT7v3ODI7jSv/t/7s4C4Ze7te+4zIO7IGu947e7ipyNiQzL4rvtZOX41Mo
Xd8VIEvg4oIfHFPklYhlhFasEQmYCxGyT4fCGvJa2K2zgcMO8noI2+sG5/zk
DeAPKidOj5KlaHQP5CeT5GL87An2eRUZzHK4Tt2ZKawhK/FwsrxgtIesQmUe
//zSK7IarsTA7WphJnMJjnk7ZQf05FL0N11sONtC1qDPazWFB8lbsBC/MG78
TtZiTrtK9VspZN6KW5uKnv1oJG+DKmlIqfrI2xH3XXc9+kbWYU/msrFutYh5
B+xO/3ykmbwT1qN8tPYxeReSunM9NYIsZj1yRyq9URu5DMm310QP/GQDHGO7
AwVxMrD53aQ8rRAv2gPoW/iTzW3MnBF/PvrqPRHqRlzpkNbKC7NZL4fEOB1s
czN7yjGhi8RaR6ibUD0u7VSvXsK6CQKfYuh+EzNnxjyfrvvymroZJZq7b1Ky
HNYt0LTG6r9eZfZYELZoXz75TJ3HUEo8ftm2lHUew+ePOM1BZq4Cppviqaz8
XNYrUDbc3zHVxsxZUXVmtuhpgroVieBGd3RvHus2NByS3MgJ5eEvwc/DdA==

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 1.9352973156051414`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.}, {2.0202013400267558`, 3.718281828459045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6846830665782833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RDIR", "=", 
  RowBox[{"RandomDirection", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"RDIT", "=", 
  RowBox[{"RandomDirection", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Arrow", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "RDIR"}], "}"}]}], ",", "Blue", 
    ",", 
    RowBox[{"Arrow", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"RandomPerp", "[", "RDIR", "]"}]}], "}"}]}]}], 
   "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.684679901684021*^9, 3.6846799168300285`*^9}, {
  3.68467998358768*^9, 3.684680159615202*^9}, {3.684680190816132*^9, 
  3.684680200771119*^9}, {3.6846802764252434`*^9, 3.684680433978426*^9}, {
  3.684680464863964*^9, 3.6846804839090075`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9696188949096385`", ",", "0.24462051965076775`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.684679904898389*^9, 3.6846799171281033`*^9}, {
  3.6846799481728263`*^9, 3.684680012565899*^9}, {3.6846800503428707`*^9, 
  3.6846802088510847`*^9}, {3.684680278737996*^9, 3.684680365805759*^9}, {
  3.684680395969955*^9, 3.6846804384249945`*^9}, {3.684680470072092*^9, 
  3.6846804888700056`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8436390282542835`", ",", "0.5369107840285651`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.684679904898389*^9, 3.6846799171281033`*^9}, {
  3.6846799481728263`*^9, 3.684680012565899*^9}, {3.6846800503428707`*^9, 
  3.6846802088510847`*^9}, {3.684680278737996*^9, 3.684680365805759*^9}, {
  3.684680395969955*^9, 3.6846804384249945`*^9}, {3.684680470072092*^9, 
  3.6846804888700056`*^9}}],

Cell[BoxData[
 GraphicsBox[{ArrowBox[{{0, 0}, {0.9696188949096385, 0.24462051965076775`}}], 
   {RGBColor[0, 0, 1], 
    ArrowBox[{{0, 0}, {-0.24462051965076964`, 
      0.9696188949096379}}]}}]], "Output",
 CellChangeTimes->{{3.684679904898389*^9, 3.6846799171281033`*^9}, {
  3.6846799481728263`*^9, 3.684680012565899*^9}, {3.6846800503428707`*^9, 
  3.6846802088510847`*^9}, {3.684680278737996*^9, 3.684680365805759*^9}, {
  3.684680395969955*^9, 3.6846804384249945`*^9}, {3.684680470072092*^9, 
  3.6846804888700056`*^9}}]
}, Open  ]]
},
WindowSize->{1600, 814},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 280, 6, 88, "Input"],
Cell[841, 28, 4444, 76, 560, "Input",
 InitializationCell->True],
Cell[5288, 106, 58707, 1256, 2897, "Input",
 InitializationCell->True],
Cell[63998, 1364, 107, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[64130, 1371, 8598, 130, 180, "Input",
 InitializationCell->True],
Cell[72731, 1503, 672, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73440, 1519, 19913, 314, 562, "Input",
 InitializationCell->True],
Cell[93356, 1835, 2773, 60, 550, "Output"]
}, Open  ]],
Cell[96144, 1898, 17865, 271, 392, "Input"],
Cell[114012, 2171, 87, 1, 30, "Input"],
Cell[114102, 2174, 1839, 35, 107, "Input"],
Cell[CellGroupData[{
Cell[115966, 2213, 3904, 90, 297, "Input"],
Cell[119873, 2305, 4766, 92, 243, "Output"]
}, Open  ]],
Cell[124654, 2400, 4278, 87, 183, "Input"],
Cell[CellGroupData[{
Cell[128957, 2491, 1462, 35, 69, "Input"],
Cell[130422, 2528, 1752, 41, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132211, 2574, 10513, 229, 601, "Input"],
Cell[142727, 2805, 1088, 26, 133, "Output"],
Cell[143818, 2833, 127354, 2510, 719, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271209, 5348, 3064, 90, 221, "Input"],
Cell[274276, 5440, 87, 2, 30, "Output"],
Cell[274366, 5444, 185155, 3064, 372, "Output"],
Cell[459524, 8510, 292, 8, 33, "Output"],
Cell[459819, 8520, 3027, 62, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462883, 8587, 920, 24, 88, "Input"],
Cell[463806, 8613, 433, 8, 30, "Output"],
Cell[464242, 8623, 432, 8, 30, "Output"],
Cell[464677, 8633, 526, 9, 305, "Output"]
}, Open  ]]
}
]
*)

